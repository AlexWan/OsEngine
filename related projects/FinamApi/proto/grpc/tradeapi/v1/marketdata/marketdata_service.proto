syntax = "proto3";

package grpc.tradeapi.v1.marketdata;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "google/type/decimal.proto";
import "google/type/interval.proto";
import "google/type/money.proto";
import "grpc/tradeapi/v1/side.proto";

option csharp_namespace = "FinamApi.TradeApi.V1.MarketData";
option go_package = "trade_api/v1/marketdata/marketdata_service";
option java_multiple_files = true;

// Сервис рыночных данных
service MarketDataService {
  // Получение исторических данных по инструменту (агрегированные свечи)
  // Пример HTTP запроса:
  // GET /v1/instruments/SBER@MISX/bars?timeframe=TIME_FRAME_D&interval.start_time=2023-01-01T00:00:00Z&interval.end_time=2023-01-31T23:59:59Z
  // Authorization: <token>
  //
  // Параметры:
  // - symbol - передается в URL пути
  // - timeframe и interval - передаются как query-параметры
  rpc Bars(BarsRequest) returns (BarsResponse) {
    option (google.api.http) = {get: "/v1/instruments/{symbol}/bars"};
  }

  // Получение последней котировки по инструменту
  // Пример HTTP запроса:
  // GET /v1/instruments/SBER@MISX/quotes/latest
  // Authorization: <token>
  rpc LastQuote(QuoteRequest) returns (QuoteResponse) {
    option (google.api.http) = {get: "/v1/instruments/{symbol}/quotes/latest"};
  }

  // Получение текущего стакана по инструменту
  // Пример HTTP запроса:
  // GET /v1/instruments/SBER@MISX/orderbook
  // Authorization: <token>
  rpc OrderBook(OrderBookRequest) returns (OrderBookResponse) {
    option (google.api.http) = {get: "/v1/instruments/{symbol}/orderbook"};
  }

  // Получение списка последних сделок по инструменту
  // Пример HTTP запроса:
  // GET /v1/instruments/SBER@MISX/trades/latest
  // Authorization: <token>
  rpc LatestTrades(LatestTradesRequest) returns (LatestTradesResponse) {
    option (google.api.http) = {get: "/v1/instruments/{symbol}/trades/latest"};
  }

  // Подписка на котировки по инструменту. Стрим метод
  rpc SubscribeQuote(SubscribeQuoteRequest) returns (stream SubscribeQuoteResponse);

  // Подписка на стакан по инструменту. Стрим метод
  rpc SubscribeOrderBook(SubscribeOrderBookRequest) returns (stream SubscribeOrderBookResponse);

  // Подписка на сделки по инструменту. Стрим метод
  rpc SubscribeLatestTrades(SubscribeLatestTradesRequest) returns (stream SubscribeLatestTradesResponse);

}

// Запрос получения исторических данных по инструменту (агрегированные свечи)
message BarsRequest {
  // Доступные таймфреймы для свечей
  enum TimeFrame {
    // Таймфрейм не указан
    TIME_FRAME_UNSPECIFIED = 0;
    // 1 минута. Глубина данных 7 дней.
    TIME_FRAME_M1 = 1;
    // 5 минут. Глубина данных 30 дней.
    TIME_FRAME_M5 = 5;
    // 15 минут. Глубина данных 30 дней.
    TIME_FRAME_M15 = 9;
    // 30 минут. Глубина данных 30 дней.
    TIME_FRAME_M30 = 11;
    // 1 час. Глубина данных 30 дней.
    TIME_FRAME_H1 = 12;
    // 2 часа. Глубина данных 30 дней.
    TIME_FRAME_H2 = 13;
    // 4 часа. Глубина данных 30 дней.
    TIME_FRAME_H4 = 15;
    // 8 часов. Глубина данных 30 дней.
    TIME_FRAME_H8 = 17;
    // День. Глубина данных 365 дней.
    TIME_FRAME_D = 19;
    // Неделя. Глубина данных 365*5 дней.
    TIME_FRAME_W = 20;
    // Месяц. Глубина данных 365*5 дней.
    TIME_FRAME_MN = 21;
    // Квартал. Глубина данных 365*5 дней.
    TIME_FRAME_QR = 22;
  }

  // Символ инструмента
  string symbol = 1;
  // Необходимый таймфрейм
  TimeFrame timeframe = 2;
  // Начало и окончание запрашиваемого периода
  google.type.Interval interval = 3;
}

// Список агрегированных свеч
message BarsResponse {
  // Символ инструмента
  string symbol = 1;
  // Агрегированная свеча
  repeated Bar bars = 2;
}

// Запрос получения последней котировки по инструменту
message QuoteRequest {
  // Символ инструмента
  string symbol = 1;
}

// Последняя котировка по инструменту
message QuoteResponse {
  // Символ инструмента
  string symbol = 1;
  // Цена последней сделки
  Quote quote = 2;
}

// Запрос получения текущего стакана по инструменту
message OrderBookRequest {
  // Символ инструмента
  string symbol = 1;
}

// Текущий стакан по инструменту
message OrderBookResponse {
  // Символ инструмента
  string symbol = 1;
  // Стакан
  OrderBook orderbook = 2;
}

// Запрос списка последних сделок по инструменту
message LatestTradesRequest {
  // Символ инструмента
  string symbol = 1;
}

// Список последних сделок по инструменту
message LatestTradesResponse {
  // Символ инструмента
  string symbol = 1;
  // Список последних сделок
  repeated Trade trades = 2;
}

// Запрос подписки на котировки по инструменту. Стрим
message SubscribeQuoteRequest {
  // Список символов инструментов
  repeated string symbols = 1;
}

// Котировки по инструменту. Стрим
message SubscribeQuoteResponse {
  // Список котировок
  repeated Quote quote = 1;
  // Ошибка стрим сервиса
  StreamError error = 2;
}

// Запрос подписки на стакан по инструменту. Стрим
message SubscribeOrderBookRequest {
  // Символ инструмента
  string symbol = 1;
}

// Стакан по инструменту. Стрим
message SubscribeOrderBookResponse {
  // Список стакан стримов
  repeated StreamOrderBook order_book = 1;
}

// Информация об агрегированной свече
message Bar {
  // Метка времени
  google.protobuf.Timestamp timestamp = 1;
  // Цена открытия свечи
  google.type.Decimal open = 2;
  // Максимальная цена свечи
  google.type.Decimal high = 3;
  // Минимальная цена свечи
  google.type.Decimal low = 4;
  // Цена закрытия свечи
  google.type.Decimal close = 5;
  // Объём торгов за свечу в шт.
  google.type.Decimal volume = 6;
}

// Информация о котировке
message Quote {
  // Символ инструмента
  string symbol = 1;
  // Метка времени
  google.protobuf.Timestamp timestamp = 2;

  // Аск. 0 при отсутствии активного аска
  google.type.Decimal ask = 3;
  // Размер аска 
  google.type.Decimal ask_size = 4;
  // Бид. 0 при отсутствии активного бида
  google.type.Decimal bid = 5;
  // Размер бида
  google.type.Decimal bid_size = 6;

  // Цена последней сделки
  google.type.Decimal last = 7;
  // Размер последней сделки
  google.type.Decimal last_size = 8;

  // Дневной объем сделок
  google.type.Decimal volume = 9;
  // Дневной оборот сделок
  google.type.Decimal turnover = 10;
  // Цена открытия. Дневная
  google.type.Decimal open = 11;
  // Максимальная цена. Дневная
  google.type.Decimal high = 12;
  // Минимальная цена. Дневная
  google.type.Decimal low = 13;
  // Цена закрытия. Дневная
  google.type.Decimal close = 14;
  // Изменение цены (last минус close)
  google.type.Decimal change = 15;

// Информация об опционе
  message Option {
    // Открытый интерес
    google.type.Decimal open_interest = 1;
    // Implied volatility
    google.type.Decimal implied_volatility = 2;
    // Теоретическая цена
    google.type.Decimal theoretical_price = 3;
    // Delta
    google.type.Decimal delta = 4;
    // Gamma
    google.type.Decimal gamma = 5;
    // Theta
    google.type.Decimal theta = 6;
    // Vega
    google.type.Decimal vega = 7;
    // Rho
    google.type.Decimal rho = 8;
  }

  oneof additions {
    // Информация об опционе
    Option option = 50;
  }
}

// Информация о стакане
message OrderBook {
  // Информация об уровне в стакане (строке)
  message Row {
    // Команда
    enum Action {
      // Действие не указано 
      ACTION_UNSPECIFIED = 0;
      // Удалить
      ACTION_REMOVE = 1;
      // Добавить
      ACTION_ADD = 2;
      // Обновить
      ACTION_UPDATE = 3;
    }

    // Цена
    google.type.Decimal price = 1;

    oneof side {
      // Размер на продажу
      google.type.Decimal sell_size = 2;
      // Размер на покупку
      google.type.Decimal buy_size = 3;
    }

    // Команда
    Action action = 4;
    // Идентификатор участника рынка
    string mpid = 5;
    // Метка времени
    google.protobuf.Timestamp timestamp = 6;
  }

  // Уровни стакана
  repeated Row rows = 1;
}

// Информация о сделке
message Trade {
  // Идентификатор сделки, отправленный биржей
  string trade_id = 1;
  // Идентификатор участника рынка
  string mpid = 2;
  // Метка времени
  google.protobuf.Timestamp timestamp = 3;
  // Цена сделки
  google.type.Decimal price = 4;
  // Размер сделки
  google.type.Decimal size = 5;
}

// Ошибка стрим сервиса
message StreamError {
  // Код ошибки
  int32 code = 1;
  // Описание ошибки
  string description = 2;
}


// Стакан по инструменту. Стрим
message StreamOrderBook {
  // Информация об уровне в стакане (строке)
  message Row {
    // Команда
    enum Action {
      // Действие не указано 
      ACTION_UNSPECIFIED = 0;
      // Удалить
      ACTION_REMOVE = 1;
      // Добавить
      ACTION_ADD = 2;
      // Обновить
      ACTION_UPDATE = 3;
    }
    
    // Цена
    google.type.Decimal price = 1;

    oneof side {
      // Размер на продажу
      google.type.Decimal sell_size = 2;
      // Размер на покупку
      google.type.Decimal buy_size = 3;
    }

    // Команда
    Action action = 4;
    // Идентификатор участника рынка
    string mpid = 5;
    // Метка времени
    google.protobuf.Timestamp timestamp = 6;
  }

  // Символ инструмента
  string symbol = 1;
  // Уровни стакана
  repeated Row rows = 2;
}

// Запрос списка последних сделок по инструменту. Стрим
message SubscribeLatestTradesRequest {
  // Символ инструмента
  string symbol = 1;
}

// Список последних сделок по инструменту. Стрим
message SubscribeLatestTradesResponse {
  // Символ инструмента
  string symbol = 1;
  // Список сделок
  repeated Trade trades = 2;
}
