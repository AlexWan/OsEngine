<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OxyPlot</name>
    </assembly>
    <members>
        <member name="T:OxyPlot.Annotations.Annotation">
            <summary>
            Provides an abstract base class for annotations.
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.Annotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Annotations.Annotation" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.Annotation.Layer">
            <summary>
            Gets or sets the rendering layer of the annotation. The default value is <see cref="F:OxyPlot.Annotations.AnnotationLayer.AboveSeries" />.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.Annotation.XAxis">
            <summary>
            Gets the X axis.
            </summary>
            <value>The X axis.</value>
        </member>
        <member name="P:OxyPlot.Annotations.Annotation.XAxisKey">
            <summary>
            Gets or sets the X axis key.
            </summary>
            <value>The X axis key.</value>
        </member>
        <member name="P:OxyPlot.Annotations.Annotation.YAxis">
            <summary>
            Gets the Y axis.
            </summary>
            <value>The Y axis.</value>
        </member>
        <member name="P:OxyPlot.Annotations.Annotation.ClipByXAxis">
            <summary>
            Gets or sets a value indicating whether to clip the annotation by the X axis range.
            </summary>
            <value><c>true</c> if clipping by the X axis is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:OxyPlot.Annotations.Annotation.ClipByYAxis">
            <summary>
            Gets or sets a value indicating whether to clip the annotation by the Y axis range.
            </summary>
            <value><c>true</c> if clipping by the Y axis is enabled; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:OxyPlot.Annotations.Annotation.YAxisKey">
            <summary>
            Gets or sets the Y axis key.
            </summary>
            <value>The Y axis key.</value>
        </member>
        <member name="M:OxyPlot.Annotations.Annotation.EnsureAxes">
            <summary>
            Ensures that the annotation axes are set.
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.Annotation.Render(OxyPlot.IRenderContext)">
            <summary>
            Renders the annotation on the specified context.
            </summary>
            <param name="rc">The render context.</param>
        </member>
        <member name="M:OxyPlot.Annotations.Annotation.GetClippingRect">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Annotations.Annotation.Transform(OxyPlot.DataPoint)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Annotations.Annotation.InverseTransform(OxyPlot.ScreenPoint)">
            <inheritdoc/>
        </member>
        <member name="T:OxyPlot.Annotations.AnnotationLayer">
            <summary>
            Specifies the layer for an <see cref="T:OxyPlot.Annotations.Annotation" />.
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.AnnotationLayer.BelowAxes">
            <summary>
            Render the annotation below the gridlines of the axes.
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.AnnotationLayer.BelowSeries">
            <summary>
            Render the annotation below the series.
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.AnnotationLayer.AboveSeries">
            <summary>
            Render the annotation above the series.
            </summary>
        </member>
        <member name="T:OxyPlot.Annotations.AnnotationTextOrientation">
            <summary>
            Specifies the orientation of the text in an annotation.
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.AnnotationTextOrientation.Horizontal">
            <summary>
            Horizontal text.
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.AnnotationTextOrientation.Vertical">
            <summary>
            Vertical text.
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.AnnotationTextOrientation.AlongLine">
            <summary>
            Oriented along the line.
            </summary>
        </member>
        <member name="T:OxyPlot.Annotations.ArrowAnnotation">
            <summary>
            Represents an annotation that shows an arrow.
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.ArrowAnnotation.screenEndPoint">
            <summary>
            The end point in screen coordinates.
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.ArrowAnnotation.screenStartPoint">
            <summary>
            The start point in screen coordinates.
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.ArrowAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Annotations.ArrowAnnotation" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.ArrowAnnotation.ArrowDirection">
            <summary>
            Gets or sets the arrow direction.
            </summary>
            <remarks>Setting this property overrides the <see cref="P:OxyPlot.Annotations.ArrowAnnotation.StartPoint" /> property.</remarks>
        </member>
        <member name="P:OxyPlot.Annotations.ArrowAnnotation.Color">
            <summary>
            Gets or sets the color of the arrow.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.ArrowAnnotation.EndPoint">
            <summary>
            Gets or sets the end point of the arrow.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.ArrowAnnotation.HeadLength">
            <summary>
            Gets or sets the length of the head (relative to the stroke thickness) (the default value is 10).
            </summary>
            <value>The length of the head.</value>
        </member>
        <member name="P:OxyPlot.Annotations.ArrowAnnotation.HeadWidth">
            <summary>
            Gets or sets the width of the head (relative to the stroke thickness) (the default value is 3).
            </summary>
            <value>The width of the head.</value>
        </member>
        <member name="P:OxyPlot.Annotations.ArrowAnnotation.LineJoin">
            <summary>
            Gets or sets the line join type.
            </summary>
            <value>The line join type.</value>
        </member>
        <member name="P:OxyPlot.Annotations.ArrowAnnotation.LineStyle">
            <summary>
            Gets or sets the line style.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:OxyPlot.Annotations.ArrowAnnotation.StartPoint">
            <summary>
            Gets or sets the start point of the arrow.
            </summary>
            <remarks>This property is overridden by the ArrowDirection property, if set.</remarks>
        </member>
        <member name="P:OxyPlot.Annotations.ArrowAnnotation.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness (the default value is 2).
            </summary>
            <value>The stroke thickness.</value>
        </member>
        <member name="P:OxyPlot.Annotations.ArrowAnnotation.Veeness">
            <summary>
            Gets or sets the 'veeness' of the arrow head (relative to thickness) (the default value is 0).
            </summary>
            <value>The 'veeness'.</value>
        </member>
        <member name="M:OxyPlot.Annotations.ArrowAnnotation.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Annotations.ArrowAnnotation.HitTestOverride(OxyPlot.HitTestArguments)">
            <summary>
            When overridden in a derived class, tests if the plot element is hit by the specified point.
            </summary>
            <param name="args">The hit test arguments.</param>
            <returns>
            The result of the hit test.
            </returns>
        </member>
        <member name="T:OxyPlot.Annotations.EllipseAnnotation">
            <summary>
            Represents an annotation that shows an ellipse.
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.EllipseAnnotation.screenRectangle">
            <summary>
            The rectangle transformed to screen coordinates.
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.EllipseAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Annotations.EllipseAnnotation" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.EllipseAnnotation.X">
            <summary>
            Gets or sets the x-coordinate of the center.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.EllipseAnnotation.Y">
            <summary>
            Gets or sets the y-coordinate of the center.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.EllipseAnnotation.Width">
            <summary>
            Gets or sets the width of the ellipse.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.EllipseAnnotation.Height">
            <summary>
            Gets or sets the height of the ellipse.
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.EllipseAnnotation.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Annotations.EllipseAnnotation.HitTestOverride(OxyPlot.HitTestArguments)">
            <summary>
            When overridden in a derived class, tests if the plot element is hit by the specified point.
            </summary>
            <param name="args">The hit test arguments.</param>
            <returns>
            The result of the hit test.
            </returns>
        </member>
        <member name="T:OxyPlot.Annotations.FunctionAnnotation">
            <summary>
            Represents an annotation that shows a function rendered as a path.
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.FunctionAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Annotations.FunctionAnnotation" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.FunctionAnnotation.Type">
            <summary>
            Gets or sets the type of function. Can be either f(x) or f(y).
            </summary>
            <value>The type of the function.</value>
        </member>
        <member name="P:OxyPlot.Annotations.FunctionAnnotation.Equation">
            <summary>
            Gets or sets the y=f(x) equation when Type is Equation.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.FunctionAnnotation.Resolution">
            <summary>
            Gets or sets the resolution.
            </summary>
            <value>The resolution.</value>
        </member>
        <member name="M:OxyPlot.Annotations.FunctionAnnotation.GetScreenPoints">
            <summary>
            Gets the screen points.
            </summary>
            <returns>The list of screen points defined by this function annotation.</returns>
        </member>
        <member name="T:OxyPlot.Annotations.FunctionAnnotationType">
            <summary>
            Defines the definition of function in a <see cref="T:OxyPlot.Annotations.FunctionAnnotation" />.
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.FunctionAnnotationType.EquationX">
            <summary>
            Curve equation x=f(y) given by the Equation property
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.FunctionAnnotationType.EquationY">
            <summary>
            Curve equation y=f(x) given by the Equation property
            </summary>
        </member>
        <member name="T:OxyPlot.Annotations.ImageAnnotation">
            <summary>
            Represents an annotation that shows an image.
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.ImageAnnotation.actualBounds">
            <summary>
            The actual bounds of the rendered image.
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.ImageAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Annotations.ImageAnnotation" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.ImageAnnotation.ImageSource">
            <summary>
            Gets or sets the image source.
            </summary>
            <value>The image source.</value>
        </member>
        <member name="P:OxyPlot.Annotations.ImageAnnotation.HorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment.
            </summary>
            <value>The horizontal alignment.</value>
        </member>
        <member name="P:OxyPlot.Annotations.ImageAnnotation.X">
            <summary>
            Gets or sets the X position of the image.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:OxyPlot.Annotations.ImageAnnotation.Y">
            <summary>
            Gets or sets the Y position of the image.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="P:OxyPlot.Annotations.ImageAnnotation.OffsetX">
            <summary>
            Gets or sets the X offset.
            </summary>
            <value>The offset X.</value>
        </member>
        <member name="P:OxyPlot.Annotations.ImageAnnotation.OffsetY">
            <summary>
            Gets or sets the Y offset.
            </summary>
            <value>The offset Y.</value>
        </member>
        <member name="P:OxyPlot.Annotations.ImageAnnotation.Width">
            <summary>
            Gets or sets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:OxyPlot.Annotations.ImageAnnotation.Height">
            <summary>
            Gets or sets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:OxyPlot.Annotations.ImageAnnotation.Opacity">
            <summary>
            Gets or sets the opacity (0-1).
            </summary>
            <value>The opacity value.</value>
        </member>
        <member name="P:OxyPlot.Annotations.ImageAnnotation.Interpolate">
            <summary>
            Gets or sets a value indicating whether to apply smooth interpolation to the image.
            </summary>
            <value><c>true</c> if the image should be interpolated (using a high-quality bi-cubic interpolation); <c>false</c> if the nearest neighbor should be used.</value>
        </member>
        <member name="P:OxyPlot.Annotations.ImageAnnotation.VerticalAlignment">
            <summary>
            Gets or sets the vertical alignment.
            </summary>
            <value>The vertical alignment.</value>
        </member>
        <member name="M:OxyPlot.Annotations.ImageAnnotation.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Annotations.ImageAnnotation.HitTestOverride(OxyPlot.HitTestArguments)">
            <summary>
            When overridden in a derived class, tests if the plot element is hit by the specified point.
            </summary>
            <param name="args">The hit test arguments.</param>
            <returns>
            The result of the hit test.
            </returns>
        </member>
        <member name="M:OxyPlot.Annotations.ImageAnnotation.GetPoint(OxyPlot.PlotLength,OxyPlot.PlotLength,OxyPlot.PlotModel)">
            <summary>
            Gets the point.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="model">The model.</param>
            <returns>The point in screen coordinates.</returns>
        </member>
        <member name="M:OxyPlot.Annotations.ImageAnnotation.GetVector(OxyPlot.PlotLength,OxyPlot.PlotLength,OxyPlot.PlotModel)">
            <summary>
            Gets the vector.
            </summary>
            <param name="x">The x component.</param>
            <param name="y">The y component.</param>
            <param name="model">The model.</param>
            <returns>The vector in screen coordinates.</returns>
        </member>
        <member name="M:OxyPlot.Annotations.ImageAnnotation.GetClippingRect">
            <inheritdoc/>
        </member>
        <member name="T:OxyPlot.Annotations.LineAnnotation">
            <summary>
            Represents an annotation that shows a straight line.
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.LineAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.Annotations.LineAnnotation" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.LineAnnotation.Intercept">
            <summary>
            Gets or sets the y-intercept when Type is LinearEquation.
            </summary>
            <value>The intercept value.</value>
            <remarks>Linear equation y-intercept (the b in y=mx+b).
            http://en.wikipedia.org/wiki/Linear_equation</remarks>
        </member>
        <member name="P:OxyPlot.Annotations.LineAnnotation.Slope">
            <summary>
            Gets or sets the slope when Type is LinearEquation.
            </summary>
            <value>The slope value.</value>
            <remarks>Linear equation slope (the m in y=mx+b)
            http://en.wikipedia.org/wiki/Linear_equation</remarks>
        </member>
        <member name="P:OxyPlot.Annotations.LineAnnotation.Type">
            <summary>
            Gets or sets the type of line equation.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.LineAnnotation.X">
            <summary>
            Gets or sets the X position for vertical lines (only for Type==Vertical).
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.LineAnnotation.Y">
            <summary>
            Gets or sets the Y position for horizontal lines (only for Type==Horizontal)
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.LineAnnotation.GetScreenPoints">
            <summary>
            Gets the screen points.
            </summary>
            <returns>The list of points to display on screen for this path.</returns>
        </member>
        <member name="T:OxyPlot.Annotations.LineAnnotationType">
            <summary>
            Specifies the definition of the line in a <see cref="T:OxyPlot.Annotations.LineAnnotation" />.
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.LineAnnotationType.Horizontal">
            <summary>
            Horizontal line given by the Y property
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.LineAnnotationType.Vertical">
            <summary>
            Vertical line given by the X property
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.LineAnnotationType.LinearEquation">
            <summary>
            Linear equation y=mx+b given by the Slope and Intercept properties
            </summary>
        </member>
        <member name="T:OxyPlot.Annotations.PathAnnotation">
            <summary>
            Provides an abstract base class for all annotations that contain paths (lines, functions or polylines).
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.PathAnnotation.screenPoints">
            <summary>
            The points of the line, transformed to screen coordinates.
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.PathAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Annotations.PathAnnotation" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.PathAnnotation.Color">
            <summary>
            Gets or sets the color of the line.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.PathAnnotation.LineJoin">
            <summary>
            Gets or sets the line join.
            </summary>
            <value>The line join.</value>
        </member>
        <member name="P:OxyPlot.Annotations.PathAnnotation.LineStyle">
            <summary>
            Gets or sets the line style.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:OxyPlot.Annotations.PathAnnotation.MaximumX">
            <summary>
            Gets or sets the maximum X coordinate for the line.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.PathAnnotation.MaximumY">
            <summary>
            Gets or sets the maximum Y coordinate for the line.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.PathAnnotation.MinimumX">
            <summary>
            Gets or sets the minimum X coordinate for the line.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.PathAnnotation.MinimumY">
            <summary>
            Gets or sets the minimum Y coordinate for the line.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.PathAnnotation.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness.
            </summary>
            <value>The stroke thickness.</value>
        </member>
        <member name="P:OxyPlot.Annotations.PathAnnotation.TextMargin">
            <summary>
            Gets or sets the text margin (along the line).
            </summary>
            <value>The text margin.</value>
        </member>
        <member name="P:OxyPlot.Annotations.PathAnnotation.TextPadding">
            <summary>
            Gets or sets the text padding (in the direction of the text).
            </summary>
            <value>The text padding.</value>
        </member>
        <member name="P:OxyPlot.Annotations.PathAnnotation.TextOrientation">
            <summary>
            Gets or sets the text orientation.
            </summary>
            <value>The text orientation.</value>
        </member>
        <member name="P:OxyPlot.Annotations.PathAnnotation.TextLinePosition">
            <summary>
            Gets or sets the text position relative to the line.
            </summary>
            <value>The text position in the interval [0,1].</value>
            <remarks>Positions smaller than 0.25 are left aligned at the start of the line
            Positions larger than 0.75 are right aligned at the end of the line
            Other positions are center aligned at the specified position</remarks>
        </member>
        <member name="P:OxyPlot.Annotations.PathAnnotation.ActualMinimumX">
            <summary>
            Gets or sets the actual minimum value on the x axis.
            </summary>
            <value>The actual minimum value on the x axis.</value>
        </member>
        <member name="P:OxyPlot.Annotations.PathAnnotation.ActualMinimumY">
            <summary>
            Gets or sets the actual minimum value on the y axis.
            </summary>
            <value>The actual minimum value on the y axis.</value>
        </member>
        <member name="P:OxyPlot.Annotations.PathAnnotation.ActualMaximumX">
            <summary>
            Gets or sets the actual maximum value on the x axis.
            </summary>
            <value>The actual maximum value on the x axis.</value>
        </member>
        <member name="P:OxyPlot.Annotations.PathAnnotation.ActualMaximumY">
            <summary>
            Gets or sets the actual maximum value on the y axis.
            </summary>
            <value>The actual maximum value on the y axis.</value>
        </member>
        <member name="M:OxyPlot.Annotations.PathAnnotation.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Annotations.PathAnnotation.HitTestOverride(OxyPlot.HitTestArguments)">
            <summary>
            When overridden in a derived class, tests if the plot element is hit by the specified point.
            </summary>
            <param name="args">The hit test arguments.</param>
            <returns>
            The result of the hit test.
            </returns>
        </member>
        <member name="M:OxyPlot.Annotations.PathAnnotation.GetScreenPoints">
            <summary>
            Gets the screen points.
            </summary>
            <returns>The list of points to display on screen for this path.</returns>
        </member>
        <member name="M:OxyPlot.Annotations.PathAnnotation.CalculateActualMinimumsMaximums">
            <summary>
            Calculates the actual minimums and maximums.
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.PathAnnotation.GetPointAtRelativeDistance(System.Collections.Generic.IList{OxyPlot.ScreenPoint},System.Double,System.Double,OxyPlot.ScreenPoint@,System.Double@)">
            <summary>
            Gets the point on a curve at the specified relative distance along the curve.
            </summary>
            <param name="pts">The curve points.</param>
            <param name="p">The relative distance along the curve.</param>
            <param name="margin">The margins.</param>
            <param name="position">The position.</param>
            <param name="angle">The angle.</param>
            <returns>True if a position was found.</returns>
        </member>
        <member name="T:OxyPlot.Annotations.PointAnnotation">
            <summary>
            Represents an annotation that shows a point.
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.PointAnnotation.screenPosition">
            <summary>
            The position transformed to screen coordinates.
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.PointAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Annotations.PointAnnotation" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.PointAnnotation.X">
            <summary>
            Gets or sets the x-coordinate of the center.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.PointAnnotation.Y">
            <summary>
            Gets or sets the y-coordinate of the center.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.PointAnnotation.Size">
            <summary>
            Gets or sets the size of the rendered point.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.PointAnnotation.TextMargin">
            <summary>
            Gets or sets the distance between the rendered point and the text.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.PointAnnotation.Shape">
            <summary>
            Gets or sets the shape of the rendered point.
            </summary>
            <value>The shape.</value>
        </member>
        <member name="P:OxyPlot.Annotations.PointAnnotation.CustomOutline">
            <summary>
            Gets or sets a custom polygon outline for the point marker. Set <see cref="P:OxyPlot.Annotations.PointAnnotation.Shape" /> to <see cref="F:OxyPlot.MarkerType.Custom" /> to use this property.
            </summary>
            <value>A polyline. The default is <c>null</c>.</value>
        </member>
        <member name="M:OxyPlot.Annotations.PointAnnotation.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Annotations.PointAnnotation.HitTestOverride(OxyPlot.HitTestArguments)">
            <summary>
            When overridden in a derived class, tests if the plot element is hit by the specified point.
            </summary>
            <param name="args">The hit test arguments.</param>
            <returns>
            The result of the hit test.
            </returns>
        </member>
        <member name="T:OxyPlot.Annotations.PolygonAnnotation">
            <summary>
            Represents an annotation that shows a polygon.
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.PolygonAnnotation.screenPoints">
            <summary>
            The polygon points transformed to screen coordinates.
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.PolygonAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Annotations.PolygonAnnotation" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.PolygonAnnotation.LineJoin">
            <summary>
            Gets or sets the line join.
            </summary>
            <value>The line join.</value>
        </member>
        <member name="P:OxyPlot.Annotations.PolygonAnnotation.LineStyle">
            <summary>
            Gets or sets the line style.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:OxyPlot.Annotations.PolygonAnnotation.Points">
            <summary>
            Gets the points.
            </summary>
            <value>The points.</value>
        </member>
        <member name="M:OxyPlot.Annotations.PolygonAnnotation.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Annotations.PolygonAnnotation.HitTestOverride(OxyPlot.HitTestArguments)">
            <summary>
            When overridden in a derived class, tests if the plot element is hit by the specified point.
            </summary>
            <param name="args">The hit test arguments.</param>
            <returns>
            The result of the hit test.
            </returns>
        </member>
        <member name="T:OxyPlot.Annotations.PolylineAnnotation">
            <summary>
            Represents an annotation that shows a polyline.
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.PolylineAnnotation.points">
            <summary>
            The points.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.PolylineAnnotation.Points">
            <summary>
            Gets the points.
            </summary>
            <value>The points.</value>
        </member>
        <member name="P:OxyPlot.Annotations.PolylineAnnotation.MinimumSegmentLength">
            <summary>
            Gets or sets the minimum length of the segment.
            Increasing this number will increase performance,
            but make the curve less accurate.
            </summary>
            <value>The minimum length of the segment.</value>
        </member>
        <member name="P:OxyPlot.Annotations.PolylineAnnotation.InterpolationAlgorithm">
            <summary>
            Gets or sets the interpolation algorithm.
            </summary>
            <value>An interpolation algorithm.</value>
        </member>
        <member name="M:OxyPlot.Annotations.PolylineAnnotation.GetScreenPoints">
            <summary>
            Gets the screen points.
            </summary>
            <returns>The list of points to display on screen for this path.</returns>
        </member>
        <member name="T:OxyPlot.Annotations.RectangleAnnotation">
            <summary>
            Represents an annotation that shows a rectangle.
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.RectangleAnnotation.screenRectangle">
            <summary>
            The rectangle transformed to screen coordinates.
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.RectangleAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Annotations.RectangleAnnotation" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.RectangleAnnotation.MinimumX">
            <summary>
            Gets or sets the minimum X.
            </summary>
            <value>The minimum X.</value>
        </member>
        <member name="P:OxyPlot.Annotations.RectangleAnnotation.MaximumX">
            <summary>
            Gets or sets the maximum X.
            </summary>
            <value>The maximum X.</value>
        </member>
        <member name="P:OxyPlot.Annotations.RectangleAnnotation.MinimumY">
            <summary>
            Gets or sets the minimum Y.
            </summary>
            <value>The minimum Y.</value>
        </member>
        <member name="P:OxyPlot.Annotations.RectangleAnnotation.MaximumY">
            <summary>
            Gets or sets the maximum Y.
            </summary>
            <value>The maximum Y.</value>
        </member>
        <member name="M:OxyPlot.Annotations.RectangleAnnotation.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Annotations.RectangleAnnotation.HitTestOverride(OxyPlot.HitTestArguments)">
            <summary>
            When overridden in a derived class, tests if the plot element is hit by the specified point.
            </summary>
            <param name="args">The hit test arguments.</param>
            <returns>
            The result of the hit test.
            </returns>
        </member>
        <member name="T:OxyPlot.Annotations.ShapeAnnotation">
            <summary>
            Provides an abstract base class for shape annotations, such as <see cref="T:OxyPlot.Annotations.PointAnnotation" />, <see cref="T:OxyPlot.Annotations.EllipseAnnotation" />, <see cref="T:OxyPlot.Annotations.PolygonAnnotation" /> and <see cref="T:OxyPlot.Annotations.RectangleAnnotation" />.
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.ShapeAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Annotations.ShapeAnnotation"/> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.ShapeAnnotation.Fill">
            <summary>
            Gets or sets the fill color.
            </summary>
            <value>The fill color.</value>
        </member>
        <member name="P:OxyPlot.Annotations.ShapeAnnotation.Stroke">
            <summary>
            Gets or sets the stroke color.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.ShapeAnnotation.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness.
            </summary>
        </member>
        <member name="T:OxyPlot.Annotations.TextAnnotation">
            <summary>
            Represents an annotation that shows text.
            </summary>
        </member>
        <member name="F:OxyPlot.Annotations.TextAnnotation.actualBounds">
            <summary>
            The actual bounds of the text.
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.TextAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Annotations.TextAnnotation" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.TextAnnotation.Background">
            <summary>
            Gets or sets the fill color of the background rectangle.
            </summary>
            <value>The background.</value>
        </member>
        <member name="P:OxyPlot.Annotations.TextAnnotation.Offset">
            <summary>
            Gets or sets the position offset (screen coordinates).
            </summary>
            <value>The offset.</value>
        </member>
        <member name="P:OxyPlot.Annotations.TextAnnotation.Padding">
            <summary>
            Gets or sets the padding of the background rectangle.
            </summary>
            <value>The padding.</value>
        </member>
        <member name="P:OxyPlot.Annotations.TextAnnotation.Stroke">
            <summary>
            Gets or sets the stroke color of the background rectangle.
            </summary>
            <value>The stroke color.</value>
        </member>
        <member name="P:OxyPlot.Annotations.TextAnnotation.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness of the background rectangle.
            </summary>
            <value>The stroke thickness.</value>
        </member>
        <member name="M:OxyPlot.Annotations.TextAnnotation.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Annotations.TextAnnotation.HitTestOverride(OxyPlot.HitTestArguments)">
            <summary>
            When overridden in a derived class, tests if the plot element is hit by the specified point.
            </summary>
            <param name="args">The hit test arguments.</param>
            <returns>
            The result of the hit test.
            </returns>
        </member>
        <member name="M:OxyPlot.Annotations.TextAnnotation.GetTextBounds(OxyPlot.ScreenPoint,OxyPlot.OxySize,OxyPlot.OxyThickness,System.Double,OxyPlot.HorizontalAlignment,OxyPlot.VerticalAlignment)">
            <summary>
            Gets the coordinates of the (rotated) background rectangle.
            </summary>
            <param name="position">The position.</param>
            <param name="size">The size.</param>
            <param name="padding">The padding.</param>
            <param name="rotation">The rotation.</param>
            <param name="horizontalAlignment">The horizontal alignment.</param>
            <param name="verticalAlignment">The vertical alignment.</param>
            <returns>The background rectangle coordinates.</returns>
        </member>
        <member name="T:OxyPlot.Annotations.TextualAnnotation">
            <summary>
            Provides an abstract base class for annotations that contains text.
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.TextualAnnotation.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Annotations.TextualAnnotation"/> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.TextualAnnotation.Text">
            <summary>
            Gets or sets the annotation text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="P:OxyPlot.Annotations.TextualAnnotation.TextPosition">
            <summary>
            Gets or sets the position of the text.
            </summary>
            <remarks>If the value is <c>DataPoint.Undefined</c>, the default position of the text will be used.</remarks>
        </member>
        <member name="P:OxyPlot.Annotations.TextualAnnotation.TextHorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the text.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.TextualAnnotation.TextVerticalAlignment">
            <summary>
            Gets or sets the vertical alignment of the text.
            </summary>
        </member>
        <member name="P:OxyPlot.Annotations.TextualAnnotation.TextRotation">
            <summary>
            Gets or sets the rotation of the text.
            </summary>
            <value>The text rotation in degrees.</value>
        </member>
        <member name="M:OxyPlot.Annotations.TextualAnnotation.GetActualTextPosition(System.Func{OxyPlot.ScreenPoint})">
            <summary>
            Gets the actual position of the text.
            </summary>
            <param name="defaultPosition">A function that returns the default position. This is used if <see cref="P:OxyPlot.Annotations.TextualAnnotation.TextPosition" /> is undefined.</param>
            <returns>The actual position of the text, in screen space.</returns>
        </member>
        <member name="M:OxyPlot.Annotations.TextualAnnotation.GetActualTextAlignment(OxyPlot.HorizontalAlignment@,OxyPlot.VerticalAlignment@)">
            <summary>
            Gets the actual text alignment.
            </summary>
            <param name="ha">The horizontal alignment.</param>
            <param name="va">The vertical alignment.</param>
        </member>
        <member name="T:OxyPlot.Annotations.TransposableAnnotation">
            <summary>
            Provides an abstract base class for transposable annotations.
            </summary>
        </member>
        <member name="M:OxyPlot.Annotations.TransposableAnnotation.GetClippingRect">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Annotations.TransposableAnnotation.Transform(OxyPlot.DataPoint)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Annotations.TransposableAnnotation.InverseTransform(OxyPlot.ScreenPoint)">
            <inheritdoc/>
        </member>
        <member name="T:OxyPlot.Axes.AngleAxis">
            <summary>
            Represents an angular axis for polar plots.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.AngleAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Axes.AngleAxis" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.AngleAxis.StartAngle">
            <summary>
            Gets or sets the start angle (degrees).
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.AngleAxis.EndAngle">
            <summary>
            Gets or sets the end angle (degrees).
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.AngleAxis.GetTickValues(System.Collections.Generic.IList{System.Double}@,System.Collections.Generic.IList{System.Double}@,System.Collections.Generic.IList{System.Double}@)">
            <summary>
            Gets the coordinates used to draw ticks and tick labels (numbers or category names).
            </summary>
            <param name="majorLabelValues">The major label values.</param>
            <param name="majorTickValues">The major tick values.</param>
            <param name="minorTickValues">The minor tick values.</param>
        </member>
        <member name="M:OxyPlot.Axes.AngleAxis.InverseTransform(System.Double,System.Double,OxyPlot.Axes.Axis)">
            <summary>
            Inverse transforms the specified screen point.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="yaxis">The y-axis.</param>
            <returns>The data point.</returns>
            <exception cref="T:System.InvalidOperationException">Angle axis should always be the y-axis.</exception>
        </member>
        <member name="M:OxyPlot.Axes.AngleAxis.IsXyAxis">
            <summary>
            Determines whether the axis is used for X/Y values.
            </summary>
            <returns><c>true</c> if it is an XY axis; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.Axes.AngleAxis.Render(OxyPlot.IRenderContext,System.Int32)">
            <summary>
            Renders the axis on the specified render context.
            </summary>
            <param name="rc">The render context.</param>
            <param name="pass">The pass.</param>
        </member>
        <member name="M:OxyPlot.Axes.AngleAxis.Transform(System.Double,System.Double,OxyPlot.Axes.Axis)">
            <summary>
            Transforms the specified point to screen coordinates.
            </summary>
            <param name="x">The x value (for the current axis).</param>
            <param name="y">The y value.</param>
            <param name="yaxis">The y axis.</param>
            <returns>The transformed point.</returns>
        </member>
        <member name="M:OxyPlot.Axes.AngleAxis.UpdateTransform(OxyPlot.OxyRect)">
            <summary>
            Updates the scale and offset properties of the transform from the specified boundary rectangle.
            </summary>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:OxyPlot.Axes.AngleAxisFullPlotArea">
            <summary>
            Represents an angular axis that covers the whole plot area.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.AngleAxisFullPlotArea.Render(OxyPlot.IRenderContext,System.Int32)">
            <summary>
            Renders the axis on the specified render context.
            </summary>
            <param name="rc">The render context.</param>
            <param name="pass">The pass.</param>
        </member>
        <member name="T:OxyPlot.Axes.Axis">
            <summary>
            Provides an abstract base class for axes.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.Axis.Exponent">
            <summary>
            Exponent function.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.Axis.Mantissa">
            <summary>
            Mantissa function.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.Axis.ThresholdRound">
            <summary>
            Rounds a value if the difference between the rounded value and the original value is less than 1e-6.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.Axis.offset">
            <summary>
            The offset.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.Axis.scale">
            <summary>
            The scale.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.Axis.position">
            <summary>
            The position of the axis.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.Axis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Axes.Axis" /> class.
            </summary>
        </member>
        <member name="E:OxyPlot.Axes.Axis.AxisChanged">
            <summary>
            Occurs when the axis has been changed (by zooming, panning or resetting).
            </summary>
        </member>
        <member name="E:OxyPlot.Axes.Axis.TransformChanged">
            <summary>
            Occurs when the transform changed (size or axis range was changed).
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.AbsoluteMaximum">
            <summary>
            Gets or sets the absolute maximum. This is only used for the UI control. It will not be possible to zoom/pan beyond this limit. The default value is <c>double.MaxValue</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.AbsoluteMinimum">
            <summary>
            Gets or sets the absolute minimum. This is only used for the UI control. It will not be possible to zoom/pan beyond this limit. The default value is <c>double.MinValue</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ActualMajorStep">
            <summary>
            Gets or sets the actual major step.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ActualMaximum">
            <summary>
            Gets or sets the actual maximum value of the axis.
            </summary>
            <remarks>If <see cref="P:OxyPlot.Axes.Axis.ViewMaximum" /> is not <c>NaN</c>, this value will be defined by <see cref="P:OxyPlot.Axes.Axis.ViewMaximum" />.
            Otherwise, if <see cref="P:OxyPlot.Axes.Axis.Maximum" /> is not <c>NaN</c>, this value will be defined by <see cref="P:OxyPlot.Axes.Axis.Maximum" />.
            Otherwise, this value will be defined by the maximum (+padding) of the data.</remarks>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ActualMinimum">
            <summary>
            Gets or sets the actual minimum value of the axis.
            </summary>
            <remarks>If <see cref="P:OxyPlot.Axes.Axis.ViewMinimum" /> is not <c>NaN</c>, this value will be defined by <see cref="P:OxyPlot.Axes.Axis.ViewMinimum" />.
            Otherwise, if <see cref="P:OxyPlot.Axes.Axis.Minimum" /> is not <c>NaN</c>, this value will be defined by <see cref="P:OxyPlot.Axes.Axis.Minimum" />.
            Otherwise this value will be defined by the minimum (+padding) of the data.</remarks>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ClipMaximum">
            <summary>
            Gets or sets the maximum displayed value on the axis, as determined by the <see cref="P:OxyPlot.Axes.Axis.ActualMaximum"/> and <see cref="P:OxyPlot.Axes.Axis.MaximumDataMargin"/>.
            </summary>
            <remarks>
            The value is refreshed by <see cref="M:OxyPlot.Axes.Axis.UpdateTransform(OxyPlot.OxyRect)"/>, which is called before any plot elements are rendered.
            </remarks>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ClipMinimum">
            <summary>
            Gets or sets the minimum displayed value on the axis, as determined by the <see cref="P:OxyPlot.Axes.Axis.ActualMinimum"/> and <see cref="P:OxyPlot.Axes.Axis.MinimumDataMargin"/>.
            </summary>
            <remarks>
            The value is refreshed by <see cref="M:OxyPlot.Axes.Axis.UpdateTransform(OxyPlot.OxyRect)"/>, which is called before any plot elements are rendered.
            </remarks>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ActualMinorStep">
            <summary>
            Gets or sets the actual minor step.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ActualStringFormat">
            <summary>
            Gets or sets the actual string format being used.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ActualTitle">
            <summary>
            Gets the actual title of the axis.
            </summary>
            <remarks>If the <see cref="P:OxyPlot.Axes.Axis.Unit" /> property is set, the <see cref="P:OxyPlot.Axes.Axis.TitleFormatString" /> property is used to format the actual title.</remarks>
        </member>
        <member name="P:OxyPlot.Axes.Axis.Angle">
            <summary>
            Gets or sets the orientation angle (degrees) for the axis labels. The default value is <c>0</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.AxisTickToLabelDistance">
            <summary>
            Gets or sets the distance from the end of the tick lines to the labels. The default value is <c>4</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.AxisTitleDistance">
            <summary>
            Gets or sets the minimum distance from the axis labels to the axis title. The default value is <c>4</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.AxisDistance">
            <summary>
            Gets or sets the distance between the plot area and the axis. The default value is <c>0</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.AxislineColor">
            <summary>
            Gets or sets the color of the axis line. The default value is <see cref="F:OxyPlot.OxyColors.Black" />.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.AxislineStyle">
            <summary>
            Gets or sets the line style of the axis line. The default value is <see cref="F:OxyPlot.LineStyle.None" />.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.AxislineThickness">
            <summary>
            Gets or sets the thickness of the axis line. The default value is <c>1</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ClipTitle">
            <summary>
            Gets or sets a value indicating whether to clip the axis title. The default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.CropGridlines">
            <summary>
            Gets or sets a value indicating whether to crop gridlines with perpendicular axes Start/EndPositions. The default value is <c>false</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.DataMaximum">
            <summary>
            Gets or sets the maximum value of the data displayed on this axis.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.DataMinimum">
            <summary>
            Gets or sets the minimum value of the data displayed on this axis.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.EndPosition">
            <summary>
            Gets or sets the end position of the axis on the plot area. The default value is <c>1</c>.
            </summary>
            <remarks>The position is defined by a fraction in the range from <c>0</c> to <c>1</c>, where <c>0</c> is at the bottom/left
            and <c>1</c> is at the top/right. </remarks>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ExtraGridlineColor">
            <summary>
            Gets or sets the color of the extra gridlines. The default value is <see cref="F:OxyPlot.OxyColors.Black"/>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ExtraGridlineStyle">
            <summary>
            Gets or sets the line style of the extra gridlines. The default value is <see cref="F:OxyPlot.LineStyle.Solid"/>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ExtraGridlineThickness">
            <summary>
            Gets or sets the thickness of the extra gridlines. The default value is <c>1</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ExtraGridlines">
            <summary>
            Gets or sets the values for the extra gridlines. The default value is <c>null</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.FilterFunction">
            <summary>
            Gets or sets the filter function. The default value is <c>null</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.FilterMaxValue">
            <summary>
            Gets or sets the maximum value that can be shown using this axis. Values greater or equal to this value will not be shown. The default value is <c>double.MaxValue</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.FilterMinValue">
            <summary>
            Gets or sets the minimum value that can be shown using this axis. Values smaller or equal to this value will not be shown. The default value is <c>double.MinValue</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.IntervalLength">
            <summary>
            Gets or sets the maximum length (screen space) of the intervals. The available length of the axis will be divided by this length to get the approximate number of major intervals on the axis. The default value is <c>60</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.IsAxisVisible">
            <summary>
            Gets or sets a value indicating whether this axis is visible. The default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.IsPanEnabled">
            <summary>
            Gets or sets a value indicating whether panning is enabled. The default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.IsReversed">
            <summary>
            Gets a value indicating whether this axis is reversed. It is reversed if <see cref="P:OxyPlot.Axes.Axis.StartPosition" /> &gt; <see cref="P:OxyPlot.Axes.Axis.EndPosition" />.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.IsZoomEnabled">
            <summary>
            Gets or sets a value indicating whether zooming is enabled. The default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.Key">
            <summary>
            Gets or sets the key of the axis. This can be used to specify an axis if you have defined multiple axes in a plot. The default value is <c>null</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.LabelFormatter">
            <summary>
            Gets or sets the formatting function for the labels. The default value is <c>null</c>.
            </summary>
            <remarks>This function can be used instead of overriding the <see cref="M:OxyPlot.Axes.Axis.FormatValue(System.Double)" /> method.</remarks>
        </member>
        <member name="P:OxyPlot.Axes.Axis.Layer">
            <summary>
            Gets or sets the layer of the axis. The default value is <see cref="F:OxyPlot.Axes.AxisLayer.BelowSeries"/>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MajorGridlineColor">
            <summary>
            Gets or sets the color of the major gridlines. The default value is <c>#40000000</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MajorGridlineStyle">
            <summary>
            Gets or sets the line style of the major gridlines. The default value is <see cref="F:OxyPlot.LineStyle.None"/>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MajorGridlineThickness">
            <summary>
            Gets or sets the thickness of the major gridlines. The default value is <c>1</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MajorStep">
            <summary>
            Gets or sets the interval between major ticks. The default value is <c>double.NaN</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MajorTickSize">
            <summary>
            Gets or sets the size of the major ticks. The default value is <c>7</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.Maximum">
            <summary>
            Gets or sets the maximum value of the axis. The default value is <c>double.NaN</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MaximumPadding">
            <summary>
            Gets or sets the 'padding' fraction of the maximum value. The default value is <c>0.01</c>.
            </summary>
            <remarks> A value of 0.01 gives 1% more space on the maximum end of the axis. This property is not used if the <see cref="P:OxyPlot.Axes.Axis.Maximum" /> property is set.</remarks>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MaximumDataMargin">
            <summary>
            Gets or sets the screen-space data margin at the maximum. The default value is <c>0</c>.
            </summary>
            <value>The number of device independent units to included between the <see cref="P:OxyPlot.Axes.Axis.ClipMaximum"/> and <see cref="P:OxyPlot.Axes.Axis.ActualMaximum"/>.</value>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MaximumMargin">
            <summary>
            Gets or sets the screen-space margin at the maximum. The default value is <c>0</c>.
            </summary>
            <value>The number of device independent units to be left empty between the axis and the <see cref="P:OxyPlot.Axes.Axis.EndPosition"/>.</value>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MaximumRange">
            <summary>
            Gets or sets the maximum range of the axis. Setting this property ensures that <c>ActualMaximum-ActualMinimum &lt; MaximumRange</c>. The default value is <c>double.PositiveInfinity</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.Minimum">
            <summary>
            Gets or sets the minimum value of the axis. The default value is <c>double.NaN</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MinimumMajorStep">
            <summary>
            Gets or sets the minimum value for the interval between major ticks. The default value is <c>0</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MinimumMinorStep">
            <summary>
            Gets or sets the minimum value for the interval between minor ticks. The default value is <c>0</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MinimumPadding">
            <summary>
            Gets or sets the 'padding' fraction of the minimum value. The default value is <c>0.01</c>.
            </summary>
            <remarks>A value of 0.01 gives 1% more space on the minimum end of the axis. This property is not used if the <see cref="P:OxyPlot.Axes.Axis.Minimum" /> property is set.</remarks>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MinimumDataMargin">
            <summary>
            Gets or sets the screen-space data margin at the minimum. The default value is <c>0</c>.
            </summary>
            <value>The number of device independent units to included between the <see cref="P:OxyPlot.Axes.Axis.ClipMinimum"/> and <see cref="P:OxyPlot.Axes.Axis.ActualMinimum"/>.</value>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MinimumMargin">
            <summary>
            Gets or sets the screen-space margin at the minimum. The default value is <c>0</c>.
            </summary>
            <value>The number of device independent units to be left empty between the axis the <see cref="P:OxyPlot.Axes.Axis.StartPosition"/>.</value>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MinimumRange">
            <summary>
            Gets or sets the minimum range of the axis. Setting this property ensures that <c>ActualMaximum-ActualMinimum > MinimumRange</c>. The default value is <c>0</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MinorGridlineColor">
            <summary>
            Gets or sets the color of the minor gridlines. The default value is <c>#20000000</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MinorGridlineStyle">
            <summary>
            Gets or sets the line style of the minor gridlines. The default value is <see cref="F:OxyPlot.LineStyle.None"/>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MinorGridlineThickness">
            <summary>
            Gets or sets the thickness of the minor gridlines. The default value is <c>1</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MinorStep">
            <summary>
            Gets or sets the interval between minor ticks. The default value is <c>double.NaN</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MinorTicklineColor">
            <summary>
            Gets or sets the color of the minor ticks. The default value is <see cref="F:OxyPlot.OxyColors.Automatic"/>.
            </summary>
            <remarks>If the value is <see cref="F:OxyPlot.OxyColors.Automatic"/>, the value of
            <see cref="P:OxyPlot.Axes.Axis.TicklineColor"/> will be used.</remarks>
        </member>
        <member name="P:OxyPlot.Axes.Axis.MinorTickSize">
            <summary>
            Gets or sets the size of the minor ticks. The default value is <c>4</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.Offset">
            <summary>
            Gets the offset. This is used to transform between data and screen coordinates.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.Position">
            <summary>
            Gets or sets the position of the axis. The default value is <see cref="F:OxyPlot.Axes.AxisPosition.Left"/>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.PositionAtZeroCrossing">
            <summary>
            Gets or sets a value indicating whether the axis should be positioned at the zero-crossing of the related axis. The default value is <c>false</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.PositionTier">
            <summary>
            Gets or sets the position tier which defines in which tier the axis is displayed. The default value is <c>0</c>.
            </summary>
            <remarks>The bigger the value the further afar is the axis from the graph.</remarks>
        </member>
        <member name="P:OxyPlot.Axes.Axis.Scale">
            <summary>
            Gets the scaling factor of the axis. This is used to transform between data and screen coordinates.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ScreenMax">
            <summary>
            Gets or sets the screen coordinate of the maximum end of the axis.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ScreenMin">
            <summary>
            Gets or sets the screen coordinate of the minimum end of the axis.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.StartPosition">
            <summary>
            Gets or sets the start position of the axis on the plot area. The default value is <c>0</c>.
            </summary>
            <remarks>The position is defined by a fraction in the range from <c>0</c> to <c>1</c>, where <c>0</c> is at the bottom/left
            and <c>1</c> is at the top/right. </remarks>
        </member>
        <member name="P:OxyPlot.Axes.Axis.StringFormat">
            <summary>
            Gets or sets the string format used for formatting the axis values. The default value is <c>null</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.TickStyle">
            <summary>
            Gets or sets the tick style for major and minor ticks. The default value is <see cref="F:OxyPlot.Axes.TickStyle.Outside"/>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.TicklineColor">
            <summary>
            Gets or sets the color of the major and minor ticks. The default value is <see cref="F:OxyPlot.OxyColors.Black"/>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.Title">
            <summary>
            Gets or sets the title of the axis. The default value is <c>null</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.TitleClippingLength">
            <summary>
            Gets or sets the length of the title clipping rectangle (fraction of the available length of the axis). The default value is <c>0.9</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.TitleColor">
            <summary>
            Gets or sets the color of the title. The default value is <see cref="F:OxyPlot.OxyColors.Automatic"/>.
            </summary>
            <remarks>If the value is <c>null</c>, the <see cref="P:OxyPlot.PlotModel.TextColor" /> will be used.</remarks>
        </member>
        <member name="P:OxyPlot.Axes.Axis.TitleFont">
            <summary>
            Gets or sets the title font. The default value is <c>null</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.TitleFontSize">
            <summary>
            Gets or sets the size of the title font. The default value is <c>double.NaN</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.TitleFontWeight">
            <summary>
            Gets or sets the weight of the title font. The default value is <see cref="F:OxyPlot.FontWeights.Normal"/>.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.TitleFormatString">
            <summary>
            Gets or sets the format string used for formatting the title and unit when <see cref="P:OxyPlot.Axes.Axis.Unit" /> is defined.
            The default value is "{0} [{1}]", where {0} refers to the <see cref="P:OxyPlot.Axes.Axis.Title" /> and {1} refers to the <see cref="P:OxyPlot.Axes.Axis.Unit" />.
            </summary>
            <remarks>If <see cref="P:OxyPlot.Axes.Axis.Unit" /> is <c>null</c>, the actual title is defined by <see cref="P:OxyPlot.Axes.Axis.Title" /> only.</remarks>
        </member>
        <member name="P:OxyPlot.Axes.Axis.TitlePosition">
            <summary>
            Gets or sets the position of the title. The default value is <c>0.5</c>.
            </summary>
            <remarks>The position is defined by a fraction in the range <c>0</c> to <c>1</c>.</remarks>
        </member>
        <member name="P:OxyPlot.Axes.Axis.Unit">
            <summary>
            Gets or sets the unit of the axis. The default value is <c>null</c>.
            </summary>
            <remarks>The <see cref="P:OxyPlot.Axes.Axis.TitleFormatString" /> is used to format the title including this unit.</remarks>
        </member>
        <member name="P:OxyPlot.Axes.Axis.UseSuperExponentialFormat">
            <summary>
            Gets or sets a value indicating whether to use superscript exponential format. The default value is <c>false</c>.
            </summary>
            <remarks>
            This format will convert 1.5E+03 to 1.5·10^{3} and render the superscript properly.
            If <see cref="P:OxyPlot.Axes.Axis.StringFormat" /> is <c>null</c>, 1.0E+03 will be converted to 10^{3}, otherwise it will use the format string for the mantissa.
            </remarks>
        </member>
        <member name="P:OxyPlot.Axes.Axis.DesiredMargin">
            <summary>
            Gets or sets the desired margins such that the axis text ticks will not be clipped.
            The actual margins may be smaller or larger than the desired margins if they are set manually.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.PositionTierMaxShift">
            <summary>
            Gets or sets the position tier max shift.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.PositionTierMinShift">
            <summary>
            Gets or sets the position tier min shift.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.PositionTierSize">
            <summary>
            Gets or sets the size of the position tier.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ActualTitleColor">
            <summary>
            Gets the actual color of the title.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ActualTitleFont">
            <summary>
            Gets the actual title font.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ActualTitleFontSize">
            <summary>
            Gets the actual size of the title font.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ActualTitleFontWeight">
            <summary>
            Gets the actual title font weight.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ViewMaximum">
            <summary>
            Gets or sets the current view's maximum. This value is used when the user zooms or pans.
            </summary>
            <value>The view maximum.</value>
        </member>
        <member name="P:OxyPlot.Axes.Axis.ViewMinimum">
            <summary>
            Gets or sets the current view's minimum. This value is used when the user zooms or pans.
            </summary>
            <value>The view minimum.</value>
        </member>
        <member name="M:OxyPlot.Axes.Axis.ToDouble(System.Object)">
            <summary>
            Converts the value of the specified object to a double precision floating point number. DateTime objects are converted using DateTimeAxis.ToDouble and TimeSpan objects are converted using TimeSpanAxis.ToDouble.
            </summary>
            <param name="value">The value.</param>
            <returns>The floating point number value.</returns>
        </member>
        <member name="M:OxyPlot.Axes.Axis.InverseTransform(OxyPlot.ScreenPoint,OxyPlot.Axes.Axis,OxyPlot.Axes.Axis)">
            <summary>
            Transforms the specified point from screen space to data space.
            </summary>
            <param name="p">The point.</param>
            <param name="xaxis">The x axis.</param>
            <param name="yaxis">The y axis.</param>
            <returns>The data point.</returns>
        </member>
        <member name="M:OxyPlot.Axes.Axis.FormatValue(System.Double)">
            <summary>
            Formats the value to be used on the axis.
            </summary>
            <param name="x">The value.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:OxyPlot.Axes.Axis.GetTickValues(System.Collections.Generic.IList{System.Double}@,System.Collections.Generic.IList{System.Double}@,System.Collections.Generic.IList{System.Double}@)">
            <summary>
            Gets the coordinates used to draw ticks and tick labels (numbers or category names).
            </summary>
            <param name="majorLabelValues">The major label values.</param>
            <param name="majorTickValues">The major tick values.</param>
            <param name="minorTickValues">The minor tick values.</param>
        </member>
        <member name="M:OxyPlot.Axes.Axis.GetValue(System.Double)">
            <summary>
            Gets the value from an axis coordinate, converts from a coordinate <see cref="T:System.Double" /> value to the actual data type.
            </summary>
            <param name="x">The coordinate.</param>
            <returns>The converted value.</returns>
            <remarks>Examples: The <see cref="T:OxyPlot.Axes.DateTimeAxis" /> returns the <see cref="T:System.DateTime" /> and <see cref="T:OxyPlot.Axes.CategoryAxis" /> returns category strings.</remarks>
        </member>
        <member name="M:OxyPlot.Axes.Axis.InverseTransform(System.Double,System.Double,OxyPlot.Axes.Axis)">
            <summary>
            Inverse transform the specified screen point.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="yaxis">The y-axis.</param>
            <returns>The data point.</returns>
        </member>
        <member name="M:OxyPlot.Axes.Axis.InverseTransform(System.Double)">
            <summary>
            Inverse transforms the specified screen coordinate. This method can only be used with non-polar coordinate systems.
            </summary>
            <param name="sx">The screen coordinate.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:OxyPlot.Axes.Axis.IsHorizontal">
            <summary>
            Determines whether the axis is horizontal.
            </summary>
            <returns><c>true</c> if the axis is horizontal; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.Axes.Axis.IsValidValue(System.Double)">
            <summary>
            Determines whether the specified value is valid.
            </summary>
            <param name="value">The value.</param>
            <returns><c>true</c> if the specified value is valid; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.Axes.Axis.IsVertical">
            <summary>
            Determines whether the axis is vertical.
            </summary>
            <returns><c>true</c> if the axis is vertical; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.Axes.Axis.IsXyAxis">
            <summary>
            Determines whether the axis is used for X/Y values.
            </summary>
            <returns><c>true</c> if it is an XY axis; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.Axes.Axis.IsLogarithmic">
            <summary>
            Determines whether the axis is logarithmic.
            </summary>
            <returns><c>true</c> if it is a logarithmic axis; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.Axes.Axis.Measure(OxyPlot.IRenderContext)">
            <summary>
            Measures the size of the axis and updates <see cref="P:OxyPlot.Axes.Axis.DesiredMargin"/> accordingly. This takes into account the axis title as well as tick labels
            potentially exceeding the axis range.
            </summary>
            <param name="rc">The render context.</param>
        </member>
        <member name="M:OxyPlot.Axes.Axis.Pan(OxyPlot.ScreenPoint,OxyPlot.ScreenPoint)">
            <summary>
            Pans the specified axis.
            </summary>
            <param name="ppt">The previous point (screen coordinates).</param>
            <param name="cpt">The current point (screen coordinates).</param>
        </member>
        <member name="M:OxyPlot.Axes.Axis.Pan(System.Double)">
            <summary>
            Pans the specified axis.
            </summary>
            <param name="delta">The delta.</param>
        </member>
        <member name="M:OxyPlot.Axes.Axis.Render(OxyPlot.IRenderContext,System.Int32)">
            <summary>
            Renders the axis on the specified render context.
            </summary>
            <param name="rc">The render context.</param>
            <param name="pass">The pass.</param>
        </member>
        <member name="M:OxyPlot.Axes.Axis.Reset">
            <summary>
            Resets the user's modification (zooming/panning) to minimum and maximum of this axis.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.Axis.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:OxyPlot.Axes.Axis.Transform(System.Double,System.Double,OxyPlot.Axes.Axis)">
            <summary>
            Transforms the specified point to screen coordinates.
            </summary>
            <param name="x">The x value (for the current axis).</param>
            <param name="y">The y value.</param>
            <param name="yaxis">The y axis.</param>
            <returns>The transformed point.</returns>
        </member>
        <member name="M:OxyPlot.Axes.Axis.Transform(System.Double)">
            <summary>
            Transforms the specified coordinate to screen coordinates. This method can only be used with non-polar coordinate systems.
            </summary>
            <param name="x">The value.</param>
            <returns>The transformed value (screen coordinate).</returns>
        </member>
        <member name="M:OxyPlot.Axes.Axis.Zoom(System.Double)">
            <summary>
            Zoom to the specified scale.
            </summary>
            <param name="newScale">The new scale.</param>
        </member>
        <member name="M:OxyPlot.Axes.Axis.Zoom(System.Double,System.Double)">
            <summary>
            Zooms the axis to the range [x0,x1].
            </summary>
            <param name="x0">The new minimum.</param>
            <param name="x1">The new maximum.</param>
        </member>
        <member name="M:OxyPlot.Axes.Axis.ZoomAt(System.Double,System.Double)">
            <summary>
            Zooms the axis at the specified coordinate.
            </summary>
            <param name="factor">The zoom factor.</param>
            <param name="x">The coordinate to zoom at.</param>
        </member>
        <member name="M:OxyPlot.Axes.Axis.ZoomAtCenter(System.Double)">
            <summary>
            Zooms the axis with the specified zoom factor at the center of the axis.
            </summary>
            <param name="factor">The zoom factor.</param>
        </member>
        <member name="M:OxyPlot.Axes.Axis.Include(System.Double)">
            <summary>
            Modifies the data range of the axis [DataMinimum,DataMaximum] to includes the specified value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:OxyPlot.Axes.Axis.ResetDataMaxMin">
            <summary>
            Resets the <see cref="P:OxyPlot.Axes.Axis.DataMaximum" /> and <see cref="P:OxyPlot.Axes.Axis.DataMinimum" /> values.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.Axis.UpdateActualMaxMin">
            <summary>
            Updates the <see cref="P:OxyPlot.Axes.Axis.ActualMaximum" /> and <see cref="P:OxyPlot.Axes.Axis.ActualMinimum" /> values.
            </summary>
            <remarks>If the user has zoomed/panned the axis, the internal ViewMaximum/ViewMinimum
            values will be used. If Maximum or Minimum have been set, these values will be used. Otherwise the maximum and minimum values
            of the series will be used, including the 'padding'.</remarks>
        </member>
        <member name="M:OxyPlot.Axes.Axis.UpdateIntervals(OxyPlot.OxyRect)">
            <summary>
            Updates the actual minor and major step intervals.
            </summary>
            <param name="plotArea">The plot area rectangle.</param>
        </member>
        <member name="M:OxyPlot.Axes.Axis.UpdateTransform(OxyPlot.OxyRect)">
            <summary>
            Updates the scale and offset properties of the transform from the specified boundary rectangle.
            </summary>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:OxyPlot.Axes.Axis.ActualMaximumAndMinimumChangedOverride">
            <summary>
            Invoked when <see cref="P:OxyPlot.Axes.Axis.ActualMinimum"/>, <see cref="P:OxyPlot.Axes.Axis.ActualMaximum"/>, <see cref="P:OxyPlot.Axes.Axis.ClipMinimum"/>, and <see cref="P:OxyPlot.Axes.Axis.ClipMaximum"/> are changed.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.Axis.GetDefaultStringFormat">
            <summary>
            Gets the default format string.
            </summary>
            <returns>A format string.</returns>
            <remarks>This format string is used if the StringFormat is not set.</remarks>
        </member>
        <member name="M:OxyPlot.Axes.Axis.PostInverseTransform(System.Double)">
            <summary>
            Applies a transformation after the inverse transform of the value.
            </summary>
            <param name="x">The value to transform.</param>
            <returns>The transformed value.</returns>
            <remarks>If this method is overridden, the <see cref="M:OxyPlot.Axes.Axis.InverseTransform(System.Double)" /> method must also be overridden.
            See <see cref="T:OxyPlot.Axes.LogarithmicAxis" /> for examples on how to implement this.</remarks>
        </member>
        <member name="M:OxyPlot.Axes.Axis.PreTransform(System.Double)">
            <summary>
            Applies a transformation before the transform the value.
            </summary>
            <param name="x">The value to transform.</param>
            <returns>The transformed value.</returns>
            <remarks>If this method is overridden, the <see cref="M:OxyPlot.Axes.Axis.Transform(System.Double)" /> method must also be overridden.
            See <see cref="T:OxyPlot.Axes.LogarithmicAxis" /> for examples on how to implement this.</remarks>
        </member>
        <member name="M:OxyPlot.Axes.Axis.CalculateMinorInterval(System.Double)">
            <summary>
            Calculates the minor interval.
            </summary>
            <param name="majorInterval">The major interval.</param>
            <returns>The minor interval.</returns>
        </member>
        <member name="M:OxyPlot.Axes.Axis.CreateTickValues(System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Creates tick values at the specified interval.
            </summary>
            <param name="from">The start value.</param>
            <param name="to">The end value.</param>
            <param name="step">The interval.</param>
            <param name="maxTicks">The maximum number of ticks (optional). The default value is 1000.</param>
            <returns>A sequence of values.</returns>
            <exception cref="T:System.ArgumentException">Step cannot be zero or negative.</exception>
        </member>
        <member name="M:OxyPlot.Axes.Axis.CoerceActualMaxMin">
            <summary>
            Coerces the actual maximum and minimum values.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.Axis.FormatValueOverride(System.Double)">
            <summary>
            Formats the value to be used on the axis.
            </summary>
            <param name="x">The value to format.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:OxyPlot.Axes.Axis.CalculateActualMaximum">
            <summary>
            Calculates the actual maximum value of the axis, including the <see cref="P:OxyPlot.Axes.Axis.MaximumPadding" />.
            </summary>
            <returns>The new actual maximum value of the axis.</returns>
            <remarks>
            Must be called before <see cref="M:OxyPlot.Axes.Axis.CalculateActualMinimum" />
            </remarks>
        </member>
        <member name="M:OxyPlot.Axes.Axis.CalculateActualMinimum">
            <summary>
            Calculates the actual minimum value of the axis, including the <see cref="P:OxyPlot.Axes.Axis.MinimumPadding" />.
            </summary>
            <returns>The new actual minimum value of the axis.</returns>
            <remarks>
            Must be called after <see cref="M:OxyPlot.Axes.Axis.CalculateActualMaximum" />
            </remarks>
        </member>
        <member name="M:OxyPlot.Axes.Axis.SetTransform(System.Double,System.Double)">
            <summary>
            Sets the transform.
            </summary>
            <param name="newScale">The new scale.</param>
            <param name="newOffset">The new offset.</param>
        </member>
        <member name="M:OxyPlot.Axes.Axis.CalculateActualInterval(System.Double,System.Double)">
            <summary>
            Calculates the actual interval.
            </summary>
            <param name="availableSize">Size of the available area.</param>
            <param name="maxIntervalSize">Maximum length of the intervals.</param>
            <returns>The calculate actual interval.</returns>
        </member>
        <member name="M:OxyPlot.Axes.Axis.CalculateActualInterval(System.Double,System.Double,System.Double)">
            <summary>
            Returns the actual interval to use to determine which values are displayed in the axis.
            </summary>
            <param name="availableSize">The available size.</param>
            <param name="maxIntervalSize">The maximum interval size.</param>
            <param name="range">The range.</param>
            <returns>Actual interval to use to determine which values are displayed in the axis.</returns>
        </member>
        <member name="M:OxyPlot.Axes.Axis.OnAxisChanged(OxyPlot.Axes.AxisChangedEventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Axes.Axis.AxisChanged" /> event.
            </summary>
            <param name="args">The <see cref="T:OxyPlot.Axes.AxisChangedEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Axes.Axis.OnTransformChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Axes.Axis.TransformChanged" /> event.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:OxyPlot.Axes.AxisChangedEventArgs">
            <summary>
            Provides additional data for the <see cref="E:OxyPlot.Axes.Axis.AxisChanged" /> event.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.AxisChangedEventArgs.#ctor(OxyPlot.Axes.AxisChangeTypes,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Axes.AxisChangedEventArgs" /> class.
            </summary>
            <param name="changeType">Type of the change.</param>
            <param name="deltaMinimum">The delta minimum.</param>
            <param name="deltaMaximum">The delta maximum.</param>
        </member>
        <member name="P:OxyPlot.Axes.AxisChangedEventArgs.ChangeType">
            <summary>
            Gets the type of the change.
            </summary>
            <value>The type of the change.</value>
        </member>
        <member name="P:OxyPlot.Axes.AxisChangedEventArgs.DeltaMinimum">
            <summary>
            Gets the delta for the minimum.
            </summary>
            <value>The delta.</value>
        </member>
        <member name="P:OxyPlot.Axes.AxisChangedEventArgs.DeltaMaximum">
            <summary>
            Gets the delta for the maximum.
            </summary>
            <value>The delta.</value>
        </member>
        <member name="T:OxyPlot.Axes.AxisChangeTypes">
            <summary>
            Defines change types for the <see cref="E:OxyPlot.Axes.Axis.AxisChanged" /> event.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.AxisChangeTypes.Zoom">
            <summary>
            The axis was zoomed by the user.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.AxisChangeTypes.Pan">
            <summary>
            The axis was panned by the user.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.AxisChangeTypes.Reset">
            <summary>
            The axis zoom/pan was reset by the user.
            </summary>
        </member>
        <member name="T:OxyPlot.Axes.AxisLayer">
            <summary>
            Specifies the layer of an <see cref="T:OxyPlot.Axes.Axis" />.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.AxisLayer.BelowSeries">
            <summary>
            Below all series.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.AxisLayer.AboveSeries">
            <summary>
            Above all series.
            </summary>
        </member>
        <member name="T:OxyPlot.Axes.AxisPosition">
            <summary>
            Specifies the position of an <see cref="T:OxyPlot.Axes.Axis" />.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.AxisPosition.None">
            <summary>
            No position.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.AxisPosition.Left">
            <summary>
            Left of the plot area.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.AxisPosition.Right">
            <summary>
            Right of the plot area.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.AxisPosition.Top">
            <summary>
            Top of the plot area.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.AxisPosition.Bottom">
            <summary>
            Bottom of the plot area.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.AxisPosition.All">
            <summary>
            All positions.
            </summary>
        </member>
        <member name="T:OxyPlot.Axes.AxisUtilities">
            <summary>
            Static utility methods for the <see cref="T:OxyPlot.Axes.Axis" /> classes.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.AxisUtilities.CalculateMinorInterval(System.Double)">
            <summary>
            Calculates the minor interval.
            </summary>
            <param name="majorInterval">The major interval.</param>
            <returns>The minor interval.</returns>
        </member>
        <member name="M:OxyPlot.Axes.AxisUtilities.CreateTickValues(System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Creates tick values at the specified interval.
            </summary>
            <param name="from">The start value.</param>
            <param name="to">The end value.</param>
            <param name="step">The interval.</param>
            <param name="maxTicks">The maximum number of ticks (optional). The default value is 1000.</param>
            <returns>A sequence of values.</returns>
            <exception cref="T:System.ArgumentException">Step cannot be zero or negative.;step</exception>
        </member>
        <member name="M:OxyPlot.Axes.AxisUtilities.FilterRedundantMinorTicks(System.Collections.Generic.IList{System.Double},System.Collections.Generic.IList{System.Double})">
            <summary>
            Analyses two lists of major and minor ticks and creates a new containing the subset of the minor ticks which are not too close to any of the major ticks.
            </summary>
            <param name="majorTicks">The major ticks. Must be monotonically ascending or descending.</param>
            <param name="minorTicks">The minor ticks. Must be monotonically ascending or descending (same direction as major ticks).</param>
            <returns>A new list containing a subset of the original minor ticks such that there are no minor ticks too close to a major tick.</returns>
        </member>
        <member name="T:OxyPlot.Axes.CategoryAxis">
            <summary>
            Represents a category axis.
            </summary>
            <remarks>The category axis is using the index of the label collection items as coordinates.
            If you have 5 categories in the Labels collection, the categories will be placed at coordinates 0 to 4.
            The range of the axis will be from -0.5 to 4.5 (excluding padding).</remarks>
        </member>
        <member name="F:OxyPlot.Axes.CategoryAxis.autoGeneratedLabels">
            <summary>
            The auto-generated labels.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.CategoryAxis.itemsSourceLabels">
            <summary>
            The labels from the <see cref="P:OxyPlot.Axes.CategoryAxis.ItemsSource" />.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.CategoryAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Axes.CategoryAxis" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.CategoryAxis.ActualLabels">
            <summary>
            Gets the actual category labels.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.CategoryAxis.GapWidth">
            <summary>
            Gets or sets the gap width.
            </summary>
            <remarks>The default value is 1.0 (100%). The gap width is given as a fraction of the total width/height of the items in a category.</remarks>
        </member>
        <member name="P:OxyPlot.Axes.CategoryAxis.IsTickCentered">
            <summary>
            Gets or sets a value indicating whether the ticks are centered. If this is <c>false</c>, ticks will be drawn between each category. If this is <c>true</c>, ticks will be drawn in the middle of each category.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.CategoryAxis.ItemsSource">
            <summary>
            Gets or sets the items source (used to update the Labels collection).
            </summary>
            <value>The items source.</value>
        </member>
        <member name="P:OxyPlot.Axes.CategoryAxis.LabelField">
            <summary>
            Gets or sets the data field for the labels.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.CategoryAxis.Labels">
            <summary>
            Gets the list of category labels.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.CategoryAxis.GetTickValues(System.Collections.Generic.IList{System.Double}@,System.Collections.Generic.IList{System.Double}@,System.Collections.Generic.IList{System.Double}@)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Axes.CategoryAxis.GetValue(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Axes.CategoryAxis.UpdateActualMaxMin">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Axes.CategoryAxis.UpdateLabels(System.Int32)">
            <summary>
            Updates the category labels.
            </summary>
            <param name="numberOfCategories">The number of categories.</param>
        </member>
        <member name="M:OxyPlot.Axes.CategoryAxis.FormatValueOverride(System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:OxyPlot.Axes.CategoryColorAxis">
            <summary>
            Represents a categorized color axis.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.CategoryColorAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Axes.CategoryColorAxis" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.CategoryColorAxis.InvalidCategoryColor">
            <summary>
            Gets or sets the invalid category color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:OxyPlot.Axes.CategoryColorAxis.Palette">
            <summary>
            Gets or sets the palette.
            </summary>
            <value>The palette.</value>
        </member>
        <member name="M:OxyPlot.Axes.CategoryColorAxis.GetColor(System.Int32)">
            <summary>
            Gets the color of the specified index in the color palette.
            </summary>
            <param name="paletteIndex">The color map index (less than NumberOfEntries).</param>
            <returns>The color.</returns>
        </member>
        <member name="M:OxyPlot.Axes.CategoryColorAxis.GetPaletteIndex(System.Double)">
            <summary>
            Gets the palette index of the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>The palette index.</returns>
            <remarks>If the value is less than minimum, 0 is returned. If the value is greater than maximum, Palette.Colors.Count+1 is returned.</remarks>
        </member>
        <member name="M:OxyPlot.Axes.CategoryColorAxis.Render(OxyPlot.IRenderContext,System.Int32)">
            <summary>
            Renders the axis on the specified render context.
            </summary>
            <param name="rc">The render context.</param>
            <param name="pass">The pass.</param>
        </member>
        <member name="M:OxyPlot.Axes.CategoryColorAxis.GetHighValue(System.Int32)">
            <summary>
            Gets the high value of the specified palette index.
            </summary>
            <param name="paletteIndex">Index of the palette.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:OxyPlot.Axes.CategoryColorAxis.GetHighValue(System.Int32,System.Collections.Generic.IList{System.Double})">
            <summary>
            Gets the high value.
            </summary>
            <param name="paletteIndex">Index of the palette.</param>
            <param name="majorLabelValues">The major label values.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:OxyPlot.Axes.CategoryColorAxis.GetLowValue(System.Int32,System.Collections.Generic.IList{System.Double})">
            <summary>
            Gets the low value.
            </summary>
            <param name="paletteIndex">Index of the palette.</param>
            <param name="majorLabelValues">The major label values.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:OxyPlot.Axes.ColorAxisExtensions">
            <summary>
            Provides extension methods for <see cref="T:OxyPlot.Axes.IColorAxis" />.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.ColorAxisExtensions.GetColor(OxyPlot.Axes.IColorAxis,System.Double)">
            <summary>
            Gets the color for the specified value.
            </summary>
            <param name="axis">The axis.</param>
            <param name="value">The value.</param>
            <returns>The color.</returns>
        </member>
        <member name="T:OxyPlot.Axes.DateTimeAxis">
            <summary>
            Represents an axis presenting <see cref="T:System.DateTime" /> values.
            </summary>
            <remarks>The actual numeric values on the axis are days since 1900/01/01.
            Use the static ToDouble and ToDateTime to convert numeric values to and from DateTimes.
            The StringFormat value can be used to force formatting of the axis values
            <code>"yyyy-MM-dd"</code> shows date
            <code>"w"</code> or <code>"ww"</code> shows week number
            <code>"h:mm"</code> shows hours and minutes</remarks>
        </member>
        <member name="F:OxyPlot.Axes.DateTimeAxis.TimeOrigin">
            <summary>
            The time origin.
            </summary>
            <remarks>This gives the same numeric date values as Excel</remarks>
        </member>
        <member name="F:OxyPlot.Axes.DateTimeAxis.MaxDayValue">
            <summary>
            The maximum day value
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.DateTimeAxis.MinDayValue">
            <summary>
            The minimum day value
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.DateTimeAxis.actualIntervalType">
            <summary>
            The actual interval type.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.DateTimeAxis.actualMinorIntervalType">
            <summary>
            The actual minor interval type.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.DateTimeAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.Axes.DateTimeAxis" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.DateTimeAxis.CalendarWeekRule">
            <summary>
            Gets or sets CalendarWeekRule.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.DateTimeAxis.FirstDayOfWeek">
            <summary>
            Gets or sets FirstDayOfWeek.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.DateTimeAxis.IntervalType">
            <summary>
            Gets or sets IntervalType.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.DateTimeAxis.MinorIntervalType">
            <summary>
            Gets or sets MinorIntervalType.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.DateTimeAxis.TimeZone">
            <summary>
            Gets or sets the time zone (used when formatting date/time values).
            </summary>
            <value>The time zone info.</value>
            <remarks>No date/time conversion will be performed if this property is <c>null</c>.</remarks>
        </member>
        <member name="M:OxyPlot.Axes.DateTimeAxis.CreateDataPoint(System.DateTime,System.Double)">
            <summary>
            Creates a data point.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>A data point.</returns>
        </member>
        <member name="M:OxyPlot.Axes.DateTimeAxis.CreateDataPoint(System.DateTime,System.DateTime)">
            <summary>
            Creates a data point.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>A data point.</returns>
        </member>
        <member name="M:OxyPlot.Axes.DateTimeAxis.CreateDataPoint(System.Double,System.DateTime)">
            <summary>
            Creates a data point.
            </summary>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns>A data point.</returns>
        </member>
        <member name="M:OxyPlot.Axes.DateTimeAxis.ToDateTime(System.Double)">
            <summary>
            Converts a numeric representation of the date (number of days after the time origin) to a DateTime structure.
            </summary>
            <param name="value">The number of days after the time origin.</param>
            <returns>A <see cref="T:System.DateTime" /> structure. Ticks = 0 if the value is invalid.</returns>
        </member>
        <member name="M:OxyPlot.Axes.DateTimeAxis.ToDouble(System.DateTime)">
            <summary>
            Converts a DateTime to days after the time origin.
            </summary>
            <param name="value">The date/time structure.</param>
            <returns>The number of days after the time origin.</returns>
        </member>
        <member name="M:OxyPlot.Axes.DateTimeAxis.GetTickValues(System.Collections.Generic.IList{System.Double}@,System.Collections.Generic.IList{System.Double}@,System.Collections.Generic.IList{System.Double}@)">
            <summary>
            Gets the tick values.
            </summary>
            <param name="majorLabelValues">The major label values.</param>
            <param name="majorTickValues">The major tick values.</param>
            <param name="minorTickValues">The minor tick values.</param>
        </member>
        <member name="M:OxyPlot.Axes.DateTimeAxis.GetValue(System.Double)">
            <summary>
            Gets the value from an axis coordinate, converts from double to the correct data type if necessary.
            e.g. DateTimeAxis returns the DateTime and CategoryAxis returns category strings.
            </summary>
            <param name="x">The coordinate.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:OxyPlot.Axes.DateTimeAxis.UpdateIntervals(OxyPlot.OxyRect)">
            <summary>
            Updates the intervals.
            </summary>
            <param name="plotArea">The plot area.</param>
        </member>
        <member name="M:OxyPlot.Axes.DateTimeAxis.GetDefaultStringFormat">
            <summary>
            Gets the default string format.
            </summary>
            <returns>
            The format string.
            </returns>
        </member>
        <member name="M:OxyPlot.Axes.DateTimeAxis.FormatValueOverride(System.Double)">
            <summary>
            Formats the value to be used on the axis.
            </summary>
            <param name="x">The value to format.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:OxyPlot.Axes.DateTimeAxis.CalculateActualInterval(System.Double,System.Double)">
            <summary>
            Calculates the actual interval.
            </summary>
            <param name="availableSize">Size of the available area.</param>
            <param name="maxIntervalSize">Maximum length of the intervals.</param>
            <returns>The calculate actual interval.</returns>
        </member>
        <member name="M:OxyPlot.Axes.DateTimeAxis.CreateDateTickValues(System.Double,System.Double,System.Double,OxyPlot.Axes.DateTimeIntervalType)">
            <summary>
            Creates the date tick values.
            </summary>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <param name="step">The step.</param>
            <param name="intervalType">Type of the interval.</param>
            <returns>Date tick values.</returns>
        </member>
        <member name="M:OxyPlot.Axes.DateTimeAxis.CreateDateTimeTickValues(System.Double,System.Double,System.Double,OxyPlot.Axes.DateTimeIntervalType)">
            <summary>
            Creates <see cref="T:System.DateTime" /> tick values.
            </summary>
            <param name="min">The min.</param>
            <param name="max">The max.</param>
            <param name="interval">The interval.</param>
            <param name="intervalType">The interval type.</param>
            <returns>A list of <see cref="T:System.DateTime" /> tick values.</returns>
        </member>
        <member name="M:OxyPlot.Axes.DateTimeAxis.GetWeek(System.DateTime)">
            <summary>
            Gets the week number for the specified date.
            </summary>
            <param name="date">The date.</param>
            <returns>The week number for the current culture.</returns>
        </member>
        <member name="T:OxyPlot.Axes.DateTimeIntervalType">
            <summary>
            Specifies the interval for a <see cref="T:OxyPlot.Axes.DateTimeAxis" />.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.DateTimeIntervalType.Auto">
            <summary>
            Automatically determine interval.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.DateTimeIntervalType.Manual">
            <summary>
            Manual definition of intervals.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.DateTimeIntervalType.Milliseconds">
            <summary>
            Interval type is milliseconds.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.DateTimeIntervalType.Seconds">
            <summary>
            Interval type is seconds.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.DateTimeIntervalType.Minutes">
            <summary>
            Interval type is minutes.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.DateTimeIntervalType.Hours">
            <summary>
            Interval type is hours.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.DateTimeIntervalType.Days">
            <summary>
            Interval type is days.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.DateTimeIntervalType.Weeks">
            <summary>
            Interval type is weeks.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.DateTimeIntervalType.Months">
            <summary>
            Interval type is months.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.DateTimeIntervalType.Years">
            <summary>
            Interval type is years.
            </summary>
        </member>
        <member name="T:OxyPlot.Axes.IColorAxis">
            <summary>
            Specifies functionality for color axes.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.IColorAxis.GetColor(System.Int32)">
            <summary>
            Gets the color of the specified index in the color palette.
            </summary>
            <param name="paletteIndex">The color map index (less than NumberOfEntries).</param>
            <returns>The color.</returns>
        </member>
        <member name="M:OxyPlot.Axes.IColorAxis.GetPaletteIndex(System.Double)">
            <summary>
            Gets the palette index of the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>The palette index.</returns>
            <remarks>If the value is less than minimum, 0 is returned. If the value is greater than maximum, Palette.Colors.Count+1 is returned.</remarks>
        </member>
        <member name="T:OxyPlot.Axes.LinearAxis">
            <summary>
            Represents an axis with linear scale.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.LinearAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Axes.LinearAxis" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.LinearAxis.FormatAsFractions">
            <summary>
            Gets or sets a value indicating whether to format numbers as fractions.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.LinearAxis.FractionUnit">
            <summary>
            Gets or sets the fraction unit. Remember to set FormatAsFractions to <c>true</c>.
            </summary>
            <value>The fraction unit.</value>
        </member>
        <member name="P:OxyPlot.Axes.LinearAxis.FractionUnitSymbol">
            <summary>
            Gets or sets the fraction unit symbol. Use FractionUnit = Math.PI and FractionUnitSymbol = "π" if you want the axis to show "π/2,π,3π/2,2π" etc. Use FractionUnit = 1 and FractionUnitSymbol = "L" if you want the axis to show "0,L/2,L" etc. Remember to set FormatAsFractions to <c>true</c>.
            </summary>
            <value>The fraction unit symbol.</value>
        </member>
        <member name="M:OxyPlot.Axes.LinearAxis.IsXyAxis">
            <summary>
            Determines whether the axis is used for X/Y values.
            </summary>
            <returns><c>true</c> if it is an XY axis; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.Axes.LinearAxis.IsLogarithmic">
            <summary>
            Determines whether the axis is logarithmic.
            </summary>
            <returns><c>true</c> if it is a logarithmic axis; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.Axes.LinearAxis.FormatValueOverride(System.Double)">
            <summary>
            Formats the value to be used on the axis.
            </summary>
            <param name="x">The value to format.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="T:OxyPlot.Axes.LinearColorAxis">
            <summary>
            Represents a linear color axis.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.LinearColorAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Axes.LinearColorAxis" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.LinearColorAxis.InvalidNumberColor">
            <summary>
            Gets or sets the color used to represent NaN values.
            </summary>
            <value>A <see cref="T:OxyPlot.OxyColor" /> that defines the color. The default value is <c>OxyColors.Gray</c>.</value>
        </member>
        <member name="P:OxyPlot.Axes.LinearColorAxis.HighColor">
            <summary>
            Gets or sets the color of values above the maximum value.
            </summary>
            <value>The color of the high values.</value>
        </member>
        <member name="P:OxyPlot.Axes.LinearColorAxis.LowColor">
            <summary>
            Gets or sets the color of values below the minimum value.
            </summary>
            <value>The color of the low values.</value>
        </member>
        <member name="P:OxyPlot.Axes.LinearColorAxis.Palette">
            <summary>
            Gets or sets the palette.
            </summary>
            <value>The palette.</value>
        </member>
        <member name="P:OxyPlot.Axes.LinearColorAxis.RenderAsImage">
            <summary>
            Gets or sets a value indicating whether to render the colors as an image.
            </summary>
            <value><c>true</c> if the rendering should use an image; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:OxyPlot.Axes.LinearColorAxis.IsXyAxis">
            <summary>
            Determines whether the axis is used for X/Y values.
            </summary>
            <returns><c>true</c> if it is an XY axis; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.Axes.LinearColorAxis.GetColor(System.Int32)">
            <summary>
            Gets the color.
            </summary>
            <param name="paletteIndex">The color map index (less than NumberOfEntries).</param>
            <returns>The color.</returns>
        </member>
        <member name="M:OxyPlot.Axes.LinearColorAxis.GetColors">
            <summary>
            Gets the colors.
            </summary>
            <returns>The colors.</returns>
        </member>
        <member name="M:OxyPlot.Axes.LinearColorAxis.GetPaletteIndex(System.Double)">
            <summary>
            Gets the palette index of the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>The palette index.</returns>
            <remarks>If the value is less than minimum, 0 is returned. If the value is greater than maximum, Palette.Colors.Count+1 is returned.</remarks>
        </member>
        <member name="M:OxyPlot.Axes.LinearColorAxis.Render(OxyPlot.IRenderContext,System.Int32)">
            <summary>
            Renders the axis on the specified render context.
            </summary>
            <param name="rc">The render context.</param>
            <param name="pass">The render pass.</param>
        </member>
        <member name="M:OxyPlot.Axes.LinearColorAxis.GetHighValue(System.Int32)">
            <summary>
            Gets the high value of the specified palette index.
            </summary>
            <param name="paletteIndex">Index of the palette.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:OxyPlot.Axes.LinearColorAxis.GetLowValue(System.Int32)">
            <summary>
            Gets the low value of the specified palette index.
            </summary>
            <param name="paletteIndex">Index of the palette.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:OxyPlot.Axes.LinearColorAxis.GenerateColorAxisImage(System.Boolean)">
            <summary>
            Generates the image used to render the color axis.
            </summary>
            <param name="reverse">Reverse the colors if set to <c>true</c>.</param>
            <returns>An <see cref="T:OxyPlot.OxyImage" /> used to render the color axis.</returns>
        </member>
        <member name="T:OxyPlot.Axes.LogarithmicAxis">
            <summary>
            Represents an axis with logarithmic scale.
            </summary>
            <see href="http://en.wikipedia.org/wiki/Logarithmic_scale"/>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.Axes.LogarithmicAxis" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.LogarithmicAxis.Base">
            <summary>
            Gets or sets the logarithmic base (normally 10).
            </summary>
            <value>The logarithmic base.</value>
            <see href="http://en.wikipedia.org/wiki/Logarithm"/>
        </member>
        <member name="P:OxyPlot.Axes.LogarithmicAxis.PowerPadding">
            <summary>
            Gets or sets a value indicating whether the ActualMaximum and ActualMinimum values should be padded to the nearest power of the Base.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.LogarithmicAxis.LogActualMaximum">
            <summary>
            Gets or sets the logarithmic actual maximum value of the axis.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.LogarithmicAxis.LogActualMinimum">
            <summary>
            Gets or sets the logarithmic actual minimum value of the axis.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.LogarithmicAxis.LogClipMaximum">
            <summary>
            Gets or sets the logarithmic clip maximum value of the axis.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.LogarithmicAxis.LogClipMinimum">
            <summary>
            Gets or sets the logarithmic clip minimum value of the axis.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.GetTickValues(System.Collections.Generic.IList{System.Double}@,System.Collections.Generic.IList{System.Double}@,System.Collections.Generic.IList{System.Double}@)">
            <summary>
            Gets the coordinates used to draw ticks and tick labels (numbers or category names).
            </summary>
            <param name="majorLabelValues">The major label values.</param>
            <param name="majorTickValues">The major tick values.</param>
            <param name="minorTickValues">The minor tick values.</param>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.IsXyAxis">
            <summary>
            Determines whether the axis is used for X/Y values.
            </summary>
            <returns><c>true</c> if it is an XY axis; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.IsLogarithmic">
            <summary>
            Determines whether the axis is logarithmic.
            </summary>
            <returns><c>true</c> if it is a logarithmic axis; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.Pan(OxyPlot.ScreenPoint,OxyPlot.ScreenPoint)">
            <summary>
            Pans the specified axis.
            </summary>
            <param name="ppt">The previous point (screen coordinates).</param>
            <param name="cpt">The current point (screen coordinates).</param>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.InverseTransform(System.Double)">
            <summary>
            Inverse transforms the specified screen coordinate. This method can only be used with non-polar coordinate systems.
            </summary>
            <param name="sx">The screen coordinate.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.Transform(System.Double)">
            <summary>
            Transforms the specified coordinate to screen coordinates.
            </summary>
            <param name="x">The value.</param>
            <returns>The transformed value (screen coordinate).</returns>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.ZoomAt(System.Double,System.Double)">
            <summary>
            Zooms the axis at the specified coordinate.
            </summary>
            <param name="factor">The zoom factor.</param>
            <param name="x">The coordinate to zoom at.</param>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.PowList(System.Collections.Generic.IList{System.Double},System.Boolean)">
            <summary>
            Raises all elements of a List to the power of <c>this.Base</c>.
            </summary>
            <param name="logInput">The input values.</param>
            <param name="clip">If true, discards all values that are not in the axis range.</param>
            <returns>A new IList containing the resulting values.</returns>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.LogList(System.Collections.Generic.IList{System.Double},System.Boolean)">
            <summary>
            Applies the logarithm with <c>this.Base</c> to all elements of a List.
            </summary>
            <param name="input">The input values.</param>
            <param name="clip">If true, discards all values that are not in the axis range.</param>
            <returns>A new IList containing the resulting values.</returns>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.DecadeTicks(System.Double)">
            <summary>
            Calculates ticks of the decades in the axis range with a specified step size.
            </summary>
            <param name="step">The step size.</param>
            <returns>A new IList containing the decade ticks.</returns>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.LogDecadeTicks(System.Double)">
            <summary>
            Calculates logarithmic ticks of the decades in the axis range with a specified step size.
            </summary>
            <param name="step">The step size.</param>
            <returns>A new IList containing the logarithmic decade ticks.</returns>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.LogSubdividedDecadeTicks(System.Boolean)">
            <summary>
            Calculates logarithmic ticks of all decades in the axis range and their subdivisions.
            </summary>
            <param name="clip">If true (default), the lowest and highest decade are clipped to the axis range.</param>
            <returns>A new IList containing the logarithmic decade ticks.</returns>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.SubdividedDecadeTicks(System.Boolean)">
            <summary>
            Calculates ticks of all decades in the axis range and their subdivisions.
            </summary>
            <param name="clip">If true (default), the lowest and highest decade are clipped to the axis range.</param>
            <returns>A new IList containing the decade ticks.</returns>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.AlignTicksToCandidates(System.Collections.Generic.IList{System.Double},System.Double)">
            <summary>
            Chooses from a list of candidates so that the resulting List matches the <paramref name="logDesiredStepSize"/> as far as possible.
            </summary>
            <param name="logCandidates">The candidates.</param>
            <param name="logDesiredStepSize">The desired logarithmic step size.</param>
            <returns>A new IList containing the chosen candidates.</returns>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.LogAlignTicksToCandidates(System.Collections.Generic.IList{System.Double},System.Double)">
            <summary>
            Chooses from a list of candidates so that the resulting List matches the <paramref name="logDesiredStepSize"/> as far as possible.
            </summary>
            <param name="logCandidates">The candidates.</param>
            <param name="logDesiredStepSize">The desired logarithmic step size.</param>
            <returns>A new IList containing the chosen logarithmic candidates.</returns>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.LogCalculateMinorCandidates(System.Collections.Generic.IList{System.Double},System.Double)">
            <summary>
            Calculates minor tick candidates for a given set of major candidates.
            </summary>
            <param name="logMajorCandidates">The major candidates.</param>
            <param name="logDesiredMajorStepSize">The desired major step size.</param>
            <returns>A new IList containing the minor candidates.</returns>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.LogSubdivideInterval(System.Collections.Generic.IList{System.Double},System.Double,System.Double,System.Double)">
            <summary>
            Subdivides a logarithmic range into multiple, evenly-spaced (in linear scale!) ticks. The number of ticks and the tick intervals are adapted so 
            that the resulting steps are "nice" numbers.
            </summary>
            <param name="logTicks">The IList the computed steps will be added to.</param>
            <param name="steps">The minimum number of steps.</param>
            <param name="logFrom">The start of the range.</param>
            <param name="logTo">The end of the range.</param>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.UpdateActualMaxMin">
            <summary>
            Updates the <see cref="P:OxyPlot.Axes.Axis.ActualMaximum" /> and <see cref="P:OxyPlot.Axes.Axis.ActualMinimum" /> values.
            </summary>
            <remarks>
            If the user has zoomed/panned the axis, the internal ViewMaximum/ViewMinimum
            values will be used. If Maximum or Minimum have been set, these values will be used. Otherwise the maximum and minimum values
            of the series will be used, including the 'padding'.
            </remarks>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.ActualMaximumAndMinimumChangedOverride">
            <inheritdoc />
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.PostInverseTransform(System.Double)">
            <summary>
            Applies a transformation after the inverse transform of the value. This is used in logarithmic axis.
            </summary>
            <param name="x">The value to transform.</param>
            <returns>The transformed value.</returns>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.PreTransform(System.Double)">
            <summary>
            Applies a transformation before the transform the value. This is used in logarithmic axis.
            </summary>
            <param name="x">The value to transform.</param>
            <returns>The transformed value.</returns>
        </member>
        <member name="M:OxyPlot.Axes.LogarithmicAxis.CoerceActualMaxMin">
            <summary>
            Coerces the actual maximum and minimum values.
            </summary>
        </member>
        <member name="T:OxyPlot.Axes.MagnitudeAxis">
            <summary>
            Represents a magnitude axis for polar plots.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Axes.MagnitudeAxis" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.MagnitudeAxis.MidPoint">
            <summary>
            Gets or sets the midpoint (screen coordinates) of the plot area. This is used by polar coordinate systems.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxis.InverseTransform(System.Double,System.Double,OxyPlot.Axes.Axis)">
            <summary>
            Inverse transform the specified screen point.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="yaxis">The y-axis.</param>
            <returns>The data point.</returns>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxis.IsXyAxis">
            <summary>
            Determines whether the axis is used for X/Y values.
            </summary>
            <returns><c>true</c> if it is an XY axis; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxis.Render(OxyPlot.IRenderContext,System.Int32)">
            <summary>
            Renders the axis on the specified render context.
            </summary>
            <param name="rc">The render context.</param>
            <param name="pass">The rendering pass.</param>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxis.Transform(System.Double,System.Double,OxyPlot.Axes.Axis)">
            <summary>
            Transforms the specified point to screen coordinates.
            </summary>
            <param name="x">The x value (for the current axis).</param>
            <param name="y">The y value.</param>
            <param name="yaxis">The y axis.</param>
            <returns>The transformed point.</returns>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxis.UpdateTransform(OxyPlot.OxyRect)">
            <summary>
            Updates the scale and offset properties of the transform from the specified boundary rectangle.
            </summary>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="T:OxyPlot.Axes.MagnitudeAxisFullPlotArea">
            <summary>
            Represents a magnitude axis that covers the whole plot area.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.MagnitudeAxisFullPlotArea.MidshiftH">
            <summary>
            Portion to shift the center in horizontal direction relative to the plot area size (from -0.5 to +0.5 meaning +-50% of the width)
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.MagnitudeAxisFullPlotArea.MidshiftV">
            <summary>
            Portion to shift the center in vertical direction relative to the plot area size (from -0.5 to +0.5 meaning +-50% of the height)
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisFullPlotArea.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Axes.MagnitudeAxis" /> class.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisFullPlotArea.Render(OxyPlot.IRenderContext,System.Int32)">
            <summary>
            Renders the axis on the specified render context.
            </summary>
            <param name="rc">The render context.</param>
            <param name="pass">The rendering pass.</param>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisFullPlotArea.GetTickValues(System.Collections.Generic.IList{System.Double}@,System.Collections.Generic.IList{System.Double}@,System.Collections.Generic.IList{System.Double}@)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisFullPlotArea.UpdateTransform(OxyPlot.OxyRect)">
            <summary>
            Updates the scale and offset properties of the transform from the specified boundary rectangle.
            </summary>
            <param name="bounds">The bounds.</param>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisFullPlotArea.Pan(OxyPlot.ScreenPoint,OxyPlot.ScreenPoint)">
            <summary>
            Pans the specified axis.
            </summary>
            <param name="ppt">The previous point (screen coordinates).</param>
            <param name="cpt">The current point (screen coordinates).</param>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisFullPlotArea.ZoomAt(System.Double,System.Double)">
            <summary>
            Zooms the axis at the specified coordinate.
            </summary>
            <param name="factor">The zoom factor.</param>
            <param name="x">The coordinate to zoom at.</param>
        </member>
        <member name="T:OxyPlot.Axes.RangeColorAxis">
            <summary>
            Represents a color axis that contains colors for specified ranges.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.RangeColorAxis.ranges">
            <summary>
            The ranges
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.RangeColorAxis.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Axes.RangeColorAxis" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.RangeColorAxis.InvalidNumberColor">
            <summary>
            Gets or sets the color used to represent NaN values.
            </summary>
            <value>A <see cref="T:OxyPlot.OxyColor" /> that defines the color. The default value is <c>OxyColors.Gray</c>.</value>
        </member>
        <member name="P:OxyPlot.Axes.RangeColorAxis.HighColor">
            <summary>
            Gets or sets the color of values above the maximum value.
            </summary>
            <value>The color of the high values.</value>
        </member>
        <member name="P:OxyPlot.Axes.RangeColorAxis.LowColor">
            <summary>
            Gets or sets the color of values below the minimum value.
            </summary>
            <value>The color of the low values.</value>
        </member>
        <member name="M:OxyPlot.Axes.RangeColorAxis.AddRange(System.Double,System.Double,OxyPlot.OxyColor)">
            <summary>
            Adds a range.
            </summary>
            <param name="lowerBound">The lower bound.</param>
            <param name="upperBound">The upper bound.</param>
            <param name="color">The color.</param>
        </member>
        <member name="M:OxyPlot.Axes.RangeColorAxis.ClearRanges">
            <summary>
            Clears the ranges.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.RangeColorAxis.GetPaletteIndex(System.Double)">
            <summary>
            Gets the palette index of the specified value.
            </summary>
            <param name="value">The value.</param>
            <returns>The palette index.</returns>
            <remarks>If the value is less than minimum, 0 is returned. If the value is greater than maximum, Palette.Colors.Count+1 is returned.</remarks>
        </member>
        <member name="M:OxyPlot.Axes.RangeColorAxis.GetColor(System.Int32)">
            <summary>
            Gets the color.
            </summary>
            <param name="paletteIndex">The color map index.</param>
            <returns>The color.</returns>
        </member>
        <member name="M:OxyPlot.Axes.RangeColorAxis.Render(OxyPlot.IRenderContext,System.Int32)">
            <summary>
            Renders the axis on the specified render context.
            </summary>
            <param name="rc">The render context.</param>
            <param name="pass">The render pass.</param>
        </member>
        <member name="T:OxyPlot.Axes.RangeColorAxis.ColorRange">
            <summary>
            Defines a range.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.RangeColorAxis.ColorRange.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:OxyPlot.Axes.RangeColorAxis.ColorRange.LowerBound">
            <summary>
            Gets or sets the lower bound.
            </summary>
            <value>The lower bound.</value>
        </member>
        <member name="P:OxyPlot.Axes.RangeColorAxis.ColorRange.UpperBound">
            <summary>
            Gets or sets the upper bound.
            </summary>
            <value>The upper bound.</value>
        </member>
        <member name="T:OxyPlot.Axes.AngleAxisFullPlotAreaRenderer">
            <summary>
            Provides functionality to render <see cref="T:OxyPlot.Axes.AngleAxis" /> using the full plot area.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.AngleAxisFullPlotAreaRenderer.#ctor(OxyPlot.IRenderContext,OxyPlot.PlotModel)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Axes.AngleAxisFullPlotAreaRenderer" /> class.
            </summary>
            <param name="rc">The render context.</param>
            <param name="plot">The plot.</param>
        </member>
        <member name="M:OxyPlot.Axes.AngleAxisFullPlotAreaRenderer.Render(OxyPlot.Axes.Axis,System.Int32)">
            <summary>
            Renders the specified axis.
            </summary>
            <param name="axis">The axis.</param>
            <param name="pass">The render pass.</param>
            <exception cref="T:System.InvalidOperationException">Magnitude axis not defined.</exception>
        </member>
        <member name="M:OxyPlot.Axes.AngleAxisFullPlotAreaRenderer.TransformToClientRectangle(System.Double,System.Double,OxyPlot.Axes.Axis,OxyPlot.OxyRect,OxyPlot.ScreenPoint)">
            <summary>
            Transforms the specified point to screen coordinates.
            </summary>
            <param name="actualMaximum"></param>
            <param name="x"></param>
            <param name="axis"></param>
            <param name="plotArea"></param>
            <param name="midPoint"></param>
            <returns></returns>
        </member>
        <member name="T:OxyPlot.Axes.AngleAxisRenderer">
            <summary>
            Provides functionality to render <see cref="T:OxyPlot.Axes.AngleAxis" />.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.AngleAxisRenderer.#ctor(OxyPlot.IRenderContext,OxyPlot.PlotModel)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Axes.AngleAxisRenderer" /> class.
            </summary>
            <param name="rc">The render context.</param>
            <param name="plot">The plot.</param>
        </member>
        <member name="M:OxyPlot.Axes.AngleAxisRenderer.Render(OxyPlot.Axes.Axis,System.Int32)">
            <summary>
            Renders the specified axis.
            </summary>
            <param name="axis">The axis.</param>
            <param name="pass">The render pass.</param>
            <exception cref="T:System.InvalidOperationException">Magnitude axis not defined.</exception>
        </member>
        <member name="T:OxyPlot.Axes.AxisRendererBase">
            <summary>
            Provides an abstract base class for axis renderers.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.AxisRendererBase.plot">
            <summary>
            The plot.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.AxisRendererBase.rc">
            <summary>
            The render context.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.AxisRendererBase.majorLabelValues">
            <summary>
            The major label values
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.AxisRendererBase.majorTickValues">
            <summary>
            The major tick values
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.AxisRendererBase.minorTickValues">
            <summary>
            The minor tick values
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.AxisRendererBase.#ctor(OxyPlot.IRenderContext,OxyPlot.PlotModel)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Axes.AxisRendererBase" /> class.
            </summary>
            <param name="rc">The render context.</param>
            <param name="plot">The plot.</param>
        </member>
        <member name="P:OxyPlot.Axes.AxisRendererBase.Plot">
            <summary>
            Gets the plot.
            </summary>
            <value>The plot.</value>
        </member>
        <member name="P:OxyPlot.Axes.AxisRendererBase.RenderContext">
            <summary>
            Gets the render context.
            </summary>
            <value>The render context.</value>
        </member>
        <member name="P:OxyPlot.Axes.AxisRendererBase.AxislinePen">
            <summary>
            Gets or sets the axis lines pen.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.AxisRendererBase.ExtraPen">
            <summary>
            Gets or sets the extra grid lines pen.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.AxisRendererBase.MajorLabelValues">
            <summary>
            Gets or sets the major label values.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.AxisRendererBase.MajorPen">
            <summary>
            Gets or sets the major grid lines pen.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.AxisRendererBase.MajorTickPen">
            <summary>
            Gets or sets the major tick pen.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.AxisRendererBase.MajorTickValues">
            <summary>
            Gets or sets the major tick values.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.AxisRendererBase.MinorPen">
            <summary>
            Gets or sets the minor grid lines pen.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.AxisRendererBase.MinorTickPen">
            <summary>
            Gets or sets the minor tick pen.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.AxisRendererBase.MinorTickValues">
            <summary>
            Gets or sets the minor tick values.
            </summary>
        </member>
        <member name="P:OxyPlot.Axes.AxisRendererBase.ZeroPen">
            <summary>
            Gets or sets the zero grid line pen.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.AxisRendererBase.Render(OxyPlot.Axes.Axis,System.Int32)">
            <summary>
            Renders the specified axis.
            </summary>
            <param name="axis">The axis.</param>
            <param name="pass">The pass.</param>
        </member>
        <member name="M:OxyPlot.Axes.AxisRendererBase.CreatePens(OxyPlot.Axes.Axis)">
            <summary>
            Creates the pens.
            </summary>
            <param name="axis">The axis.</param>
        </member>
        <member name="M:OxyPlot.Axes.AxisRendererBase.GetTickPositions(OxyPlot.Axes.Axis,OxyPlot.Axes.TickStyle,System.Double,OxyPlot.Axes.AxisPosition,System.Double@,System.Double@)">
            <summary>
            Gets the tick positions.
            </summary>
            <param name="axis">The axis.</param>
            <param name="tickStyle">The tick style.</param>
            <param name="tickSize">The tick size.</param>
            <param name="position">The position.</param>
            <param name="x0">The x 0.</param>
            <param name="x1">The x 1.</param>
        </member>
        <member name="M:OxyPlot.Axes.AxisRendererBase.IsWithin(System.Double,System.Double,System.Double)">
            <summary>
            Determines whether the specified value is within the specified range.
            </summary>
            <param name="d">The value to check.</param>
            <param name="min">The minimum value of the range.</param>
            <param name="max">The maximum value of the range.</param>
            <returns><c>true</c> if the specified value is within the range; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OxyPlot.Axes.HorizontalAndVerticalAxisRenderer">
            <summary>
            Provides functionality to render horizontal and vertical axes.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.HorizontalAndVerticalAxisRenderer.#ctor(OxyPlot.IRenderContext,OxyPlot.PlotModel)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Axes.HorizontalAndVerticalAxisRenderer" /> class.
            </summary>
            <param name="rc">The render context.</param>
            <param name="plot">The plot.</param>
        </member>
        <member name="M:OxyPlot.Axes.HorizontalAndVerticalAxisRenderer.Render(OxyPlot.Axes.Axis,System.Int32)">
            <summary>
            Renders the specified axis.
            </summary>
            <param name="axis">The axis.</param>
            <param name="pass">The pass.</param>
        </member>
        <member name="M:OxyPlot.Axes.HorizontalAndVerticalAxisRenderer.Lerp(System.Double,System.Double,System.Double)">
            <summary>
            Interpolates linearly between two values.
            </summary>
            <param name="x0">The x0.</param>
            <param name="x1">The x1.</param>
            <param name="f">The interpolation factor.</param>
            <returns>The interpolated value.</returns>
        </member>
        <member name="M:OxyPlot.Axes.HorizontalAndVerticalAxisRenderer.SnapTo(System.Double,System.Double@,System.Double)">
            <summary>
            Snaps v to value if it is within the specified distance.
            </summary>
            <param name="target">The target value.</param>
            <param name="v">The value to snap.</param>
            <param name="eps">The distance tolerance.</param>
        </member>
        <member name="M:OxyPlot.Axes.HorizontalAndVerticalAxisRenderer.GetAxisTitlePositionAndAlignment(OxyPlot.Axes.Axis,System.Double,System.Double@,OxyPlot.HorizontalAlignment@,OxyPlot.VerticalAlignment@)">
            <summary>
            Gets the axis title position, rotation and alignment.
            </summary>
            <param name="axis">The axis.</param>
            <param name="titlePosition">The title position.</param>
            <param name="angle">The angle.</param>
            <param name="halign">The horizontal alignment.</param>
            <param name="valign">The vertical alignment.</param>
            <returns>The <see cref="T:OxyPlot.ScreenPoint" />.</returns>
        </member>
        <member name="M:OxyPlot.Axes.HorizontalAndVerticalAxisRenderer.RenderAxisTitle(OxyPlot.Axes.Axis,System.Double)">
            <summary>
            Renders the axis title.
            </summary>
            <param name="axis">The axis.</param>
            <param name="titlePosition">The title position.</param>
        </member>
        <member name="M:OxyPlot.Axes.HorizontalAndVerticalAxisRenderer.RenderMajorItems(OxyPlot.Axes.Axis,System.Double,System.Double,System.Boolean)">
            <summary>
            Renders the major items.
            </summary>
            <param name="axis">The axis.</param>
            <param name="axisPosition">The axis position.</param>
            <param name="titlePosition">The title position.</param>
            <param name="drawAxisLine">Draw the axis line if set to <c>true</c>.</param>
        </member>
        <member name="M:OxyPlot.Axes.HorizontalAndVerticalAxisRenderer.RenderMinorItems(OxyPlot.Axes.Axis,System.Double)">
            <summary>
            Renders the minor items.
            </summary>
            <param name="axis">The axis.</param>
            <param name="axisPosition">The axis position.</param>
        </member>
        <member name="M:OxyPlot.Axes.HorizontalAndVerticalAxisRenderer.AddSegments(System.Collections.Generic.List{OxyPlot.ScreenPoint},System.Collections.Generic.List{OxyPlot.Axes.Axis},System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds segments to <paramref name="segments"/> array. 
            If <paramref name="cropGridlines"/> is true, then lines will be cropped with <paramref name="perpAxes"/> lists axes.
            </summary>
            <param name="segments">The target segments.</param>
            <param name="perpAxes">Perpendicular axes list.</param>
            <param name="isHorizontal">True, if current axis is horizontal.</param>
            <param name="cropGridlines">True, if gridlines should be cropped.</param>
            <param name="transformedValue">Starting point position.</param>
            <param name="plotAreaLeft">Plot area left position.</param>
            <param name="plotAreaRight">Plot area right position.</param>
            <param name="plotAreaTop">Plot area top position.</param>
            <param name="plotAreaBottom">Plot area bottom position.</param>
        </member>
        <member name="M:OxyPlot.Axes.HorizontalAndVerticalAxisRenderer.GetRotatedAlignments(System.Double,System.Double,OxyPlot.HorizontalAlignment@,OxyPlot.VerticalAlignment@)">
            <summary>
            Gets the alignments given the specified rotation angle.
            </summary>
            <param name="boxAngle">The angle of a box to rotate (usually it is label angle).</param>
            <param name="axisAngle">
            The axis angle, the original angle belongs to. The Top axis should have 0, next angles are computed clockwise. 
            The angle should be in [-180, 180). (T, R, B, L) is (0, 90, -180, -90). 
            </param>
            <param name="ha">Horizontal alignment.</param>
            <param name="va">Vertical alignment.</param>
            <remarks>
            This method is supposed to compute the alignment of the labels that are put near axis. 
            Because such labels can have different angles, and the axis can have different angles as well,
            computing the alignment is not straightforward.
            </remarks>
        </member>
        <member name="T:OxyPlot.Axes.MagnitudeAxisFullPlotAreaRenderer">
            <summary>
            Provides functionality to render <see cref="T:OxyPlot.Axes.MagnitudeAxis" /> using the full plot area.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.MagnitudeAxisFullPlotAreaRenderer.degree">
            <summary>
            constants to simplify angular calculations
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.MagnitudeAxisFullPlotAreaRenderer.MaxSegments">
            <summary>
            this constant limit the number of segments to draw a tick arc
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisFullPlotAreaRenderer.#ctor(OxyPlot.IRenderContext,OxyPlot.PlotModel)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Axes.MagnitudeAxisFullPlotAreaRenderer" /> class.
            </summary>
            <param name="rc">The render context.</param>
            <param name="plot">The plot.</param>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisFullPlotAreaRenderer.Render(OxyPlot.Axes.Axis,System.Int32)">
            <summary>
            Renders the specified axis.
            </summary>
            <param name="axis">The axis.</param>
            <param name="pass">The pass.</param>
            <exception cref="T:System.NullReferenceException">Angle axis should not be <c>null</c>.</exception>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisFullPlotAreaRenderer.GetActualAngle(OxyPlot.Axes.Axis,OxyPlot.Axes.Axis)">
            <summary>
            Returns the angle (in radian) of the axis line in screen coordinate
            </summary>
            <param name="axis">The axis.</param>
            <param name="angleAxis">The angle axis.</param>
            <returns>The angle (in radians).</returns>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisFullPlotAreaRenderer.GetTickTextAligment(System.Double,OxyPlot.HorizontalAlignment@,OxyPlot.VerticalAlignment@)">
            <summary>
            Choose the most appropriate alignment for tick text
            </summary>
            <param name="actualAngle">The actual angle.</param>
            <param name="ha">The horizontal alignment.</param>
            <param name="va">The vertical alignment.</param>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisFullPlotAreaRenderer.RenderTickArc(OxyPlot.Axes.Axis,OxyPlot.Axes.AngleAxis,System.Double,OxyPlot.OxyPen,System.Double,System.Double)">
            <summary>
            Renders a tick by drawing an lot of segments
            </summary>
            <param name="axis">The axis.</param>
            <param name="angleAxis">The angle axis.</param>
            <param name="x">The x-value.</param>
            <param name="pen">The pen.</param>
            <param name="startAngle">The start angle.</param>
            <param name="endAngle">The end angle.</param>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisFullPlotAreaRenderer.RenderTickText(OxyPlot.Axes.Axis,System.Double,OxyPlot.Axes.Axis)">
            <summary>
            Renders major tick text
            </summary>
            <param name="axis">The axis.</param>
            <param name="x">The x-value.</param>
            <param name="angleAxis">The angle axis.</param>
        </member>
        <member name="T:OxyPlot.Axes.MagnitudeAxisRenderer">
            <summary>
            Provides functionality to render <see cref="T:OxyPlot.Axes.MagnitudeAxis" />.
            </summary>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisRenderer.#ctor(OxyPlot.IRenderContext,OxyPlot.PlotModel)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Axes.MagnitudeAxisRenderer" /> class.
            </summary>
            <param name="rc">The render context.</param>
            <param name="plot">The plot.</param>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisRenderer.Render(OxyPlot.Axes.Axis,System.Int32)">
            <summary>
            Renders the specified axis.
            </summary>
            <param name="axis">The axis.</param>
            <param name="pass">The pass.</param>
            <exception cref="T:System.NullReferenceException">Angle axis should not be <c>null</c>.</exception>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisRenderer.GetActualAngle(OxyPlot.Axes.Axis,OxyPlot.Axes.Axis)">
            <summary>
            Returns the angle (in radian) of the axis line in screen coordinate
            </summary>
            <param name="axis">The axis.</param>
            <param name="angleAxis">The angle axis.</param>
            <returns>The angle (in radians).</returns>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisRenderer.GetTickTextAligment(System.Double,OxyPlot.HorizontalAlignment@,OxyPlot.VerticalAlignment@)">
            <summary>
            Choose the most appropriate alignment for tick text
            </summary>
            <param name="actualAngle">The actual angle.</param>
            <param name="ha">The horizontal alignment.</param>
            <param name="va">The vertical alignment.</param>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisRenderer.RenderTick(OxyPlot.Axes.Axis,OxyPlot.Axes.AngleAxis,System.Double,OxyPlot.OxyPen)">
            <summary>
            Renders a tick, chooses the best implementation
            </summary>
            <param name="axis">The axis.</param>
            <param name="angleAxis">The angle axis.</param>
            <param name="x">The x-value.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisRenderer.RenderTickCircle(OxyPlot.Axes.Axis,OxyPlot.Axes.Axis,System.Double,OxyPlot.OxyPen)">
            <summary>
            Renders a tick by drawing an ellipse
            </summary>
            <param name="axis">The axis.</param>
            <param name="angleAxis">The angle axis.</param>
            <param name="x">The x-value.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisRenderer.RenderTickArc(OxyPlot.Axes.Axis,OxyPlot.Axes.AngleAxis,System.Double,OxyPlot.OxyPen)">
            <summary>
            Renders a tick by drawing an lot of segments
            </summary>
            <param name="axis">The axis.</param>
            <param name="angleAxis">The angle axis.</param>
            <param name="x">The x-value.</param>
            <param name="pen">The pen.</param>
        </member>
        <member name="M:OxyPlot.Axes.MagnitudeAxisRenderer.RenderTickText(OxyPlot.Axes.Axis,System.Double,OxyPlot.Axes.Axis)">
            <summary>
            Renders major tick text
            </summary>
            <param name="axis">The axis.</param>
            <param name="x">The x-value.</param>
            <param name="angleAxis">The angle axis.</param>
        </member>
        <member name="T:OxyPlot.Axes.TickStyle">
            <summary>
            Defines the style of axis ticks.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.TickStyle.Crossing">
            <summary>
            The ticks are rendered crossing the axis line.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.TickStyle.Inside">
            <summary>
            The ticks are rendered inside of the plot area.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.TickStyle.Outside">
            <summary>
            The ticks are rendered Outside the plot area.
            </summary>
        </member>
        <member name="F:OxyPlot.Axes.TickStyle.None">
            <summary>
            The ticks are not rendered.
            </summary>
        </member>
        <member name="T:OxyPlot.Axes.TimeSpanAxis">
            <summary>
            Represents an axis presenting <see cref="T:System.TimeSpan" /> values.
            </summary>
            <remarks>The values should be in seconds.
            The StringFormat value can be used to force formatting of the axis values
            <code>"h:mm"</code> shows hours and minutes
            <code>"m:ss"</code> shows minutes and seconds</remarks>
        </member>
        <member name="M:OxyPlot.Axes.TimeSpanAxis.ToDouble(System.TimeSpan)">
            <summary>
            Converts a time span to a double.
            </summary>
            <param name="s">The time span.</param>
            <returns>A double value.</returns>
        </member>
        <member name="M:OxyPlot.Axes.TimeSpanAxis.ToTimeSpan(System.Double)">
            <summary>
            Converts a double to a time span.
            </summary>
            <param name="value">The value.</param>
            <returns>A time span.</returns>
        </member>
        <member name="M:OxyPlot.Axes.TimeSpanAxis.GetValue(System.Double)">
            <summary>
            Gets the value from an axis coordinate, converts from double to the correct data type if necessary. e.g. DateTimeAxis returns the DateTime and CategoryAxis returns category strings.
            </summary>
            <param name="x">The coordinate.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:OxyPlot.Axes.TimeSpanAxis.GetDefaultStringFormat">
            <summary>
            Gets the default format string.
            </summary>
            <returns>
            The default format string.
            </returns>
        </member>
        <member name="M:OxyPlot.Axes.TimeSpanAxis.FormatValueOverride(System.Double)">
            <summary>
            Formats the value to be used on the axis.
            </summary>
            <param name="x">The value to format.</param>
            <returns>The formatted value.</returns>
        </member>
        <member name="M:OxyPlot.Axes.TimeSpanAxis.CalculateActualInterval(System.Double,System.Double)">
            <summary>
            Calculates the actual interval.
            </summary>
            <param name="availableSize">Size of the available area.</param>
            <param name="maxIntervalSize">Maximum length of the intervals.</param>
            <returns>The calculate actual interval.</returns>
        </member>
        <member name="T:OxyPlot.CodeGenerationAttribute">
            <summary>
            Specifies whether code should be generated for the property.
            </summary>
        </member>
        <member name="M:OxyPlot.CodeGenerationAttribute.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.CodeGenerationAttribute" /> class.
            </summary>
            <param name="generateCode">The generate code.</param>
        </member>
        <member name="P:OxyPlot.CodeGenerationAttribute.GenerateCode">
            <summary>
            Gets or sets a value indicating whether GenerateCode.
            </summary>
        </member>
        <member name="T:OxyPlot.CodeGenerator">
            <summary>
            Provides functionality to generate C# code for the specified <see cref="T:OxyPlot.PlotModel" />.
            </summary>
            <remarks>This is useful for creating examples or unit tests. Press Ctrl+Alt+C in a plot to copy code to the clipboard.
            Usage:
            <code>
            var cg = new CodeGenerator(myPlotModel);
            Clipboard.SetText(cg.ToCode());
            </code></remarks>
        </member>
        <member name="F:OxyPlot.CodeGenerator.sb">
            <summary>
            The string builder.
            </summary>
        </member>
        <member name="F:OxyPlot.CodeGenerator.variables">
            <summary>
            The variables.
            </summary>
        </member>
        <member name="F:OxyPlot.CodeGenerator.indentString">
            <summary>
            The indent string.
            </summary>
        </member>
        <member name="F:OxyPlot.CodeGenerator.indents">
            <summary>
            The current number of indents.
            </summary>
        </member>
        <member name="M:OxyPlot.CodeGenerator.#ctor(OxyPlot.PlotModel)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.CodeGenerator" /> class.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="P:OxyPlot.CodeGenerator.Indents">
            <summary>
            Gets or sets the number of indents.
            </summary>
        </member>
        <member name="M:OxyPlot.CodeGenerator.FormatCode(System.String,System.Object[])">
            <summary>
            Formats the code.
            </summary>
            <param name="format">The format.</param>
            <param name="values">The values.</param>
            <returns>The format code.</returns>
        </member>
        <member name="M:OxyPlot.CodeGenerator.FormatConstructor(System.Type,System.String,System.Object[])">
            <summary>
            Formats a constructor.
            </summary>
            <param name="type">The type.</param>
            <param name="format">The format of the constructor arguments.</param>
            <param name="values">The argument values.</param>
            <returns>The format constructor.</returns>
        </member>
        <member name="M:OxyPlot.CodeGenerator.ToCode">
            <summary>
            Returns the c# code for this model.
            </summary>
            <returns>C# code.</returns>
        </member>
        <member name="M:OxyPlot.CodeGenerator.Add(System.Object)">
            <summary>
            Adds the specified object to the generated code.
            </summary>
            <param name="obj">The object.</param>
            <returns>The variable name.</returns>
        </member>
        <member name="M:OxyPlot.CodeGenerator.AddChildren(System.String,System.String,System.Collections.IEnumerable)">
            <summary>
            Adds the children.
            </summary>
            <param name="name">The name.</param>
            <param name="collectionName">Name of the collection.</param>
            <param name="children">The children.</param>
        </member>
        <member name="M:OxyPlot.CodeGenerator.AddItems(System.String,System.Collections.IList)">
            <summary>
            Adds the items.
            </summary>
            <param name="name">The name.</param>
            <param name="list">The list.</param>
        </member>
        <member name="M:OxyPlot.CodeGenerator.AddArray(System.String,System.Array)">
            <summary>
            Creates and sets the elements of an array.
            </summary>
            <param name="name">The name.</param>
            <param name="array">The array.</param>
        </member>
        <member name="M:OxyPlot.CodeGenerator.AppendLine(System.String,System.Object[])">
            <summary>
            Appends the line.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:OxyPlot.CodeGenerator.AreListsEqual(System.Collections.IList,System.Collections.IList)">
            <summary>
            Determines if the two specified lists are equal.
            </summary>
            <param name="list1">The first list.</param>
            <param name="list2">The second list.</param>
            <returns>True if all items are equal.</returns>
        </member>
        <member name="M:OxyPlot.CodeGenerator.GetFirstAttribute``1(System.Reflection.PropertyInfo)">
            <summary>
            Get the first attribute of the specified type.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="pi">The property info.</param>
            <returns>The attribute, or <c>null</c> if no attribute was found.</returns>
        </member>
        <member name="M:OxyPlot.CodeGenerator.GetNewVariableName(System.Type)">
            <summary>
            Gets a new variable name of the specified type.
            </summary>
            <param name="type">The type.</param>
            <returns>The variable name.</returns>
        </member>
        <member name="M:OxyPlot.CodeGenerator.MakeValidVariableName(System.String)">
            <summary>
            Makes a valid variable name of a string. Invalid characters will simply be removed.
            </summary>
            <param name="title">The title.</param>
            <returns>A valid variable name.</returns>
        </member>
        <member name="M:OxyPlot.CodeGenerator.SetProperties(System.Object,System.String,System.Object)">
            <summary>
            The set properties.
            </summary>
            <param name="instance">The instance.</param>
            <param name="varName">The variable name.</param>
            <param name="defaultValues">The default values.</param>
        </member>
        <member name="M:OxyPlot.CodeGenerator.SetProperty(System.String,System.Object)">
            <summary>
            Sets the property.
            </summary>
            <param name="name">The property name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:OxyPlot.CodeGeneratorStringExtensions">
            <summary>
            Provides extension methods for code generation.
            </summary>
        </member>
        <member name="M:OxyPlot.CodeGeneratorStringExtensions.ToCode(System.String)">
            <summary>
            Converts the value of this instance to c# code.
            </summary>
            <param name="value">The instance.</param>
            <returns>C# code.</returns>
        </member>
        <member name="M:OxyPlot.CodeGeneratorStringExtensions.ToCode(System.Boolean)">
            <summary>
            Converts the value of this instance to c# code.
            </summary>
            <param name="value">The value.</param>
            <returns>C# code.</returns>
        </member>
        <member name="M:OxyPlot.CodeGeneratorStringExtensions.ToCode(System.Int32)">
            <summary>
            Converts the value of this instance to c# code.
            </summary>
            <param name="value">The instance.</param>
            <returns>C# code.</returns>
        </member>
        <member name="M:OxyPlot.CodeGeneratorStringExtensions.ToCode(System.Enum)">
            <summary>
            Converts the value of this instance to c# code.
            </summary>
            <param name="value">The instance.</param>
            <returns>C# code.</returns>
        </member>
        <member name="M:OxyPlot.CodeGeneratorStringExtensions.ToCode(System.Double)">
            <summary>
            Converts the value of this instance to c# code.
            </summary>
            <param name="value">The instance.</param>
            <returns>C# code.</returns>
        </member>
        <member name="M:OxyPlot.CodeGeneratorStringExtensions.ToCode(System.Object)">
            <summary>
            Converts the value of this instance to c# code.
            </summary>
            <param name="value">The instance.</param>
            <returns>C# code.</returns>
        </member>
        <member name="T:OxyPlot.ICodeGenerating">
            <summary>
            Provides functionality to generate C# code of an object.
            </summary>
        </member>
        <member name="M:OxyPlot.ICodeGenerating.ToCode">
            <summary>
            Returns C# code that generates this instance.
            </summary>
            <returns>The C# code.</returns>
        </member>
        <member name="T:OxyPlot.DataPoint">
            <summary>
            Represents a point in the data space.
            </summary>
            <remarks><see cref="T:OxyPlot.DataPoint" />s are transformed to <see cref="T:OxyPlot.ScreenPoint" />s.</remarks>
        </member>
        <member name="F:OxyPlot.DataPoint.Undefined">
            <summary>
            The undefined.
            </summary>
        </member>
        <member name="F:OxyPlot.DataPoint.x">
            <summary>
            The x-coordinate.
            </summary>
        </member>
        <member name="F:OxyPlot.DataPoint.y">
            <summary>
            The y-coordinate.
            </summary>
        </member>
        <member name="M:OxyPlot.DataPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.DataPoint" /> struct.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
        </member>
        <member name="P:OxyPlot.DataPoint.X">
            <summary>
            Gets the X-coordinate of the point.
            </summary>
            <value>The X-coordinate.</value>
        </member>
        <member name="P:OxyPlot.DataPoint.Y">
            <summary>
            Gets the Y-coordinate of the point.
            </summary>
            <value>The Y-coordinate.</value>
        </member>
        <member name="M:OxyPlot.DataPoint.ToCode">
            <summary>
            Returns C# code that generates this instance.
            </summary>
            <returns>The to code.</returns>
        </member>
        <member name="M:OxyPlot.DataPoint.Equals(OxyPlot.DataPoint)">
            <summary>
            Determines whether this instance and another specified <see cref="T:DataPoint" /> object have the same value.
            </summary>
            <param name="other">The point to compare to this instance.</param>
            <returns><c>true</c> if the value of the <paramref name="other" /> parameter is the same as the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OxyPlot.DataPoint.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:OxyPlot.DataPoint.IsDefined">
            <summary>
            Determines whether this point is defined.
            </summary>
            <returns><c>true</c> if this point is defined; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OxyPlot.IDataPointProvider">
            <summary>
            Specifies functionality to provide a <see cref="T:OxyPlot.DataPoint" />.
            </summary>
        </member>
        <member name="M:OxyPlot.IDataPointProvider.GetDataPoint">
            <summary>
            Gets the <see cref="T:OxyPlot.DataPoint" /> that represents the element.
            </summary>
            <returns>A <see cref="T:OxyPlot.DataPoint" />.</returns>
        </member>
        <member name="T:OxyPlot.IExporter">
            <summary>
            Defines functionality to export a <see cref="T:OxyPlot.PlotModel" />.
            </summary>
        </member>
        <member name="M:OxyPlot.IExporter.Export(OxyPlot.IPlotModel,System.IO.Stream)">
            <summary>
            Exports the specified <see cref="T:OxyPlot.PlotModel" /> to a <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="model">The model to export.</param>
            <param name="stream">The target stream.</param>
        </member>
        <member name="T:OxyPlot.MarkerType">
            <summary>
            Defines the marker type.
            </summary>
        </member>
        <member name="F:OxyPlot.MarkerType.None">
            <summary>
            Do not render markers.
            </summary>
        </member>
        <member name="F:OxyPlot.MarkerType.Circle">
            <summary>
            Render markers as circles.
            </summary>
        </member>
        <member name="F:OxyPlot.MarkerType.Square">
            <summary>
            Render markers as squares.
            </summary>
        </member>
        <member name="F:OxyPlot.MarkerType.Diamond">
            <summary>
            Render markers as diamonds.
            </summary>
        </member>
        <member name="F:OxyPlot.MarkerType.Triangle">
            <summary>
            Render markers as triangles.
            </summary>
        </member>
        <member name="F:OxyPlot.MarkerType.Cross">
            <summary>
            Render markers as crosses (note: this marker type requires the stroke color to be set).
            </summary>
            <remarks>This marker type requires the stroke color to be set.</remarks>
        </member>
        <member name="F:OxyPlot.MarkerType.Plus">
            <summary>
            Renders markers as plus signs (note: this marker type requires the stroke color to be set).
            </summary>
            <remarks>This marker type requires the stroke color to be set.</remarks>
        </member>
        <member name="F:OxyPlot.MarkerType.Star">
            <summary>
            Renders markers as stars (note: this marker type requires the stroke color to be set).
            </summary>
            <remarks>This marker type requires the stroke color to be set.</remarks>
        </member>
        <member name="F:OxyPlot.MarkerType.Custom">
            <summary>
            Render markers by a custom shape (defined by outline).
            </summary>
        </member>
        <member name="T:OxyPlot.PlotLength">
            <summary>
            Represents absolute or relative lengths in data or screen space.
            </summary>
        </member>
        <member name="F:OxyPlot.PlotLength.unit">
            <summary>
            The unit type
            </summary>
        </member>
        <member name="F:OxyPlot.PlotLength.value">
            <summary>
            The value
            </summary>
        </member>
        <member name="M:OxyPlot.PlotLength.#ctor(System.Double,OxyPlot.PlotLengthUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.PlotLength" /> struct.
            </summary>
            <param name="value">The value.</param>
            <param name="unit">The unit.</param>
        </member>
        <member name="P:OxyPlot.PlotLength.Value">
            <summary>
            Gets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:OxyPlot.PlotLength.Unit">
            <summary>
            Gets the type of the unit.
            </summary>
            <value>The type of the unit.</value>
        </member>
        <member name="M:OxyPlot.PlotLength.Equals(OxyPlot.PlotLength)">
            <summary>
            Determines whether this instance and another specified <see cref="T:PlotLength" /> object have the same value.
            </summary>
            <param name="other">The length to compare to this instance.</param>
            <returns><c>true</c> if the value of the <paramref name="other" /> parameter is the same as the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OxyPlot.PlotLengthUnit">
            <summary>
            Defines the kind of value that a <see cref="T:OxyPlot.PlotLength" /> object is holding.
            </summary>
        </member>
        <member name="F:OxyPlot.PlotLengthUnit.Data">
            <summary>
            The value is in data space (transformed by x/y axis)
            </summary>
        </member>
        <member name="F:OxyPlot.PlotLengthUnit.ScreenUnits">
            <summary>
            The value is in screen units
            </summary>
        </member>
        <member name="F:OxyPlot.PlotLengthUnit.RelativeToViewport">
            <summary>
            The value is relative to the plot viewport (0-1)
            </summary>
        </member>
        <member name="F:OxyPlot.PlotLengthUnit.RelativeToPlotArea">
            <summary>
            The value is relative to the plot area (0-1)
            </summary>
        </member>
        <member name="T:OxyPlot.ControllerBase">
            <summary>
            Provides functionality to handle input events.
            </summary>
        </member>
        <member name="F:OxyPlot.ControllerBase.syncRoot">
            <summary>
            A synchronization object that is used when the actual model in the current view is <c>null</c>.
            </summary>
        </member>
        <member name="M:OxyPlot.ControllerBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.ControllerBase" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.ControllerBase.InputCommandBindings">
            <summary>
            Gets the input bindings.
            </summary>
            <remarks>This collection is used to specify the customized input gestures (both key, mouse and touch).</remarks>
        </member>
        <member name="P:OxyPlot.ControllerBase.MouseDownManipulators">
            <summary>
            Gets the manipulators that are created by mouse down events. These manipulators are removed when the mouse button is released.
            </summary>
        </member>
        <member name="P:OxyPlot.ControllerBase.MouseHoverManipulators">
            <summary>
            Gets the manipulators that are created by mouse enter events. These manipulators are removed when the mouse leaves the control.
            </summary>
        </member>
        <member name="P:OxyPlot.ControllerBase.TouchManipulators">
            <summary>
            Gets the manipulators that are created by touch events. These manipulators are removed when the touch gesture is completed.
            </summary>
        </member>
        <member name="M:OxyPlot.ControllerBase.HandleGesture(OxyPlot.IView,OxyPlot.OxyInputGesture,OxyPlot.OxyInputEventArgs)">
            <summary>
            Handles the specified gesture.
            </summary>
            <param name="view">The plot view.</param>
            <param name="gesture">The gesture.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyInputEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.ControllerBase.HandleMouseDown(OxyPlot.IView,OxyPlot.OxyMouseDownEventArgs)">
            <summary>
            Handles mouse down events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.ControllerBase.HandleMouseEnter(OxyPlot.IView,OxyPlot.OxyMouseEventArgs)">
            <summary>
            Handles mouse enter events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.ControllerBase.HandleMouseLeave(OxyPlot.IView,OxyPlot.OxyMouseEventArgs)">
            <summary>
            Handles mouse leave events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.ControllerBase.HandleMouseMove(OxyPlot.IView,OxyPlot.OxyMouseEventArgs)">
            <summary>
            Handles mouse move events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.ControllerBase.HandleMouseUp(OxyPlot.IView,OxyPlot.OxyMouseEventArgs)">
            <summary>
            Handles mouse up events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.ControllerBase.HandleMouseWheel(OxyPlot.IView,OxyPlot.OxyMouseWheelEventArgs)">
            <summary>
            Handles mouse wheel events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseWheelEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.ControllerBase.HandleTouchStarted(OxyPlot.IView,OxyPlot.OxyTouchEventArgs)">
            <summary>
            Handles touch started events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.ControllerBase.HandleTouchDelta(OxyPlot.IView,OxyPlot.OxyTouchEventArgs)">
            <summary>
            Handles touch delta events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.ControllerBase.HandleTouchCompleted(OxyPlot.IView,OxyPlot.OxyTouchEventArgs)">
            <summary>
            Handles touch completed events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.ControllerBase.HandleKeyDown(OxyPlot.IView,OxyPlot.OxyKeyEventArgs)">
            <summary>
            Handles key down events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyKeyEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.ControllerBase.AddMouseManipulator(OxyPlot.IView,OxyPlot.ManipulatorBase{OxyPlot.OxyMouseEventArgs},OxyPlot.OxyMouseDownEventArgs)">
            <summary>
            Adds the specified mouse manipulator and invokes the <see cref="M:OxyPlot.MouseManipulator.Started(OxyPlot.OxyMouseEventArgs)" /> method with the specified mouse down event arguments.
            </summary>
            <param name="view">The plot view.</param>
            <param name="manipulator">The manipulator to add.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseDownEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.ControllerBase.AddHoverManipulator(OxyPlot.IView,OxyPlot.ManipulatorBase{OxyPlot.OxyMouseEventArgs},OxyPlot.OxyMouseEventArgs)">
            <summary>
            Adds the specified mouse hover manipulator and invokes the <see cref="M:OxyPlot.MouseManipulator.Started(OxyPlot.OxyMouseEventArgs)" /> method with the specified mouse event arguments.
            </summary>
            <param name="view">The plot view.</param>
            <param name="manipulator">The manipulator.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.ControllerBase.AddTouchManipulator(OxyPlot.IView,OxyPlot.ManipulatorBase{OxyPlot.OxyTouchEventArgs},OxyPlot.OxyTouchEventArgs)">
            <summary>
            Adds the specified mouse hover manipulator and invokes the <see cref="M:OxyPlot.TouchManipulator.Started(OxyPlot.OxyTouchEventArgs)" /> method with the specified mouse event arguments.
            </summary>
            <param name="view">The plot view.</param>
            <param name="manipulator">The manipulator.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.ControllerBase.Bind(OxyPlot.OxyMouseDownGesture,OxyPlot.IViewCommand{OxyPlot.OxyMouseDownEventArgs})">
            <summary>
            Binds the specified command to the specified mouse gesture. Removes old bindings to the gesture.
            </summary>
            <param name="gesture">The gesture.</param>
            <param name="command">The command. If <c>null</c>, the binding will be removed.</param>
        </member>
        <member name="M:OxyPlot.ControllerBase.Bind(OxyPlot.OxyMouseEnterGesture,OxyPlot.IViewCommand{OxyPlot.OxyMouseEventArgs})">
            <summary>
            Binds the specified command to the specified mouse enter gesture. Removes old bindings to the gesture.
            </summary>
            <param name="gesture">The gesture.</param>
            <param name="command">The command. If <c>null</c>, the binding will be removed.</param>
        </member>
        <member name="M:OxyPlot.ControllerBase.Bind(OxyPlot.OxyMouseWheelGesture,OxyPlot.IViewCommand{OxyPlot.OxyMouseWheelEventArgs})">
            <summary>
            Binds the specified command to the specified mouse wheel gesture. Removes old bindings to the gesture.
            </summary>
            <param name="gesture">The gesture.</param>
            <param name="command">The command. If <c>null</c>, the binding will be removed.</param>
        </member>
        <member name="M:OxyPlot.ControllerBase.Bind(OxyPlot.OxyTouchGesture,OxyPlot.IViewCommand{OxyPlot.OxyTouchEventArgs})">
            <summary>
            Binds the specified command to the specified touch gesture. Removes old bindings to the gesture.
            </summary>
            <param name="gesture">The gesture.</param>
            <param name="command">The command. If <c>null</c>, the binding will be removed.</param>
        </member>
        <member name="M:OxyPlot.ControllerBase.Bind(OxyPlot.OxyKeyGesture,OxyPlot.IViewCommand{OxyPlot.OxyKeyEventArgs})">
            <summary>
            Binds the specified command to the specified key gesture. Removes old bindings to the gesture.
            </summary>
            <param name="gesture">The gesture.</param>
            <param name="command">The command. If <c>null</c>, the binding will be removed.</param>
        </member>
        <member name="M:OxyPlot.ControllerBase.Unbind(OxyPlot.OxyInputGesture)">
            <summary>
            Unbinds the specified gesture.
            </summary>
            <param name="gesture">The gesture to unbind.</param>
        </member>
        <member name="M:OxyPlot.ControllerBase.Unbind(OxyPlot.IViewCommand)">
            <summary>
            Unbinds the specified command from all gestures.
            </summary>
            <param name="command">The command to unbind.</param>
        </member>
        <member name="M:OxyPlot.ControllerBase.UnbindAll">
            <summary>
            Unbinds all commands.
            </summary>
        </member>
        <member name="M:OxyPlot.ControllerBase.BindCore(OxyPlot.OxyInputGesture,OxyPlot.IViewCommand)">
            <summary>
            Binds the specified command to the specified gesture. Removes old bindings to the gesture.
            </summary>
            <param name="gesture">The gesture.</param>
            <param name="command">The command. If <c>null</c>, the binding will be removed.</param>
            <remarks>This method was created to avoid calling a virtual method in the constructor.</remarks>
        </member>
        <member name="M:OxyPlot.ControllerBase.GetCommand(OxyPlot.OxyInputGesture)">
            <summary>
            Gets the command for the specified <see cref="T:OxyPlot.OxyInputGesture" />.
            </summary>
            <param name="gesture">The input gesture.</param>
            <returns>A command.</returns>
        </member>
        <member name="M:OxyPlot.ControllerBase.HandleCommand(OxyPlot.IViewCommand,OxyPlot.IView,OxyPlot.OxyInputEventArgs)">
            <summary>
            Handles a command triggered by an input gesture.
            </summary>
            <param name="command">The command.</param>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyInputEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the command was handled.</returns>
        </member>
        <member name="M:OxyPlot.ControllerBase.GetSyncRoot(OxyPlot.IView)">
            <summary>
            Gets the synchronization object for the specified view.
            </summary>
            <param name="view">The view.</param>
            <returns>An object that can be used to synchronize access to the actual model of the view.</returns>
            <remarks>This object is used to ensure that events are not handled when the model is being updated.</remarks>
        </member>
        <member name="T:OxyPlot.ControllerExtensions">
            <summary>
            Provides extension methods for the <see cref="T:OxyPlot.IController" />.
            </summary>
        </member>
        <member name="M:OxyPlot.ControllerExtensions.BindKeyDown(OxyPlot.IController,OxyPlot.OxyKey,OxyPlot.IViewCommand{OxyPlot.OxyKeyEventArgs})">
            <summary>
            Binds the specified key to the specified command.
            </summary>
            <param name="controller">The plot controller.</param>
            <param name="key">The key.</param>
            <param name="command">A plot controller command that takes key event arguments.</param>
        </member>
        <member name="M:OxyPlot.ControllerExtensions.BindKeyDown(OxyPlot.IController,OxyPlot.OxyKey,OxyPlot.OxyModifierKeys,OxyPlot.IViewCommand{OxyPlot.OxyKeyEventArgs})">
            <summary>
            Binds the specified modifier+key to the specified command.
            </summary>
            <param name="controller">The plot controller.</param>
            <param name="key">The key.</param>
            <param name="modifiers">The key modifiers.</param>
            <param name="command">A plot controller command that takes key event arguments.</param>
        </member>
        <member name="M:OxyPlot.ControllerExtensions.BindMouseDown(OxyPlot.IController,OxyPlot.OxyMouseButton,OxyPlot.IViewCommand{OxyPlot.OxyMouseDownEventArgs})">
            <summary>
            Binds the specified mouse button to the specified command.
            </summary>
            <param name="controller">The plot controller.</param>
            <param name="mouseButton">The mouse button.</param>
            <param name="command">A plot controller command that takes mouse event arguments.</param>
        </member>
        <member name="M:OxyPlot.ControllerExtensions.BindMouseDown(OxyPlot.IController,OxyPlot.OxyMouseButton,OxyPlot.OxyModifierKeys,OxyPlot.IViewCommand{OxyPlot.OxyMouseDownEventArgs})">
            <summary>
            Binds the specified modifier+mouse button gesture to the specified command.
            </summary>
            <param name="controller">The plot controller.</param>
            <param name="mouseButton">The mouse button.</param>
            <param name="modifiers">The modifiers.</param>
            <param name="command">A plot controller command that takes mouse event arguments.</param>
        </member>
        <member name="M:OxyPlot.ControllerExtensions.BindMouseDown(OxyPlot.IController,OxyPlot.OxyMouseButton,OxyPlot.OxyModifierKeys,System.Int32,OxyPlot.IViewCommand{OxyPlot.OxyMouseDownEventArgs})">
            <summary>
            Binds the specified modifiers+mouse button+click count gesture to the specified command.
            </summary>
            <param name="controller">The plot controller.</param>
            <param name="mouseButton">The mouse button.</param>
            <param name="modifiers">The modifiers.</param>
            <param name="clickCount">The click count.</param>
            <param name="command">A plot controller command that takes mouse event arguments.</param>
        </member>
        <member name="M:OxyPlot.ControllerExtensions.BindTouchDown(OxyPlot.IController,OxyPlot.IViewCommand{OxyPlot.OxyTouchEventArgs})">
            <summary>
            Binds the touch down event to the specified command.
            </summary>
            <param name="controller">The plot controller.</param>
            <param name="command">A plot controller command that takes touch event arguments.</param>
        </member>
        <member name="M:OxyPlot.ControllerExtensions.BindMouseEnter(OxyPlot.IController,OxyPlot.IViewCommand{OxyPlot.OxyMouseEventArgs})">
            <summary>
            Binds the mouse enter event to the specified command.
            </summary>
            <param name="controller">The plot controller.</param>
            <param name="command">A plot controller command that takes mouse event arguments.</param>
        </member>
        <member name="M:OxyPlot.ControllerExtensions.BindMouseWheel(OxyPlot.IController,OxyPlot.IViewCommand{OxyPlot.OxyMouseWheelEventArgs})">
            <summary>
            Binds the mouse wheel event to the specified command.
            </summary>
            <param name="controller">The plot controller.</param>
            <param name="command">A plot controller command that takes mouse wheel event arguments.</param>
        </member>
        <member name="M:OxyPlot.ControllerExtensions.BindMouseWheel(OxyPlot.IController,OxyPlot.OxyModifierKeys,OxyPlot.IViewCommand{OxyPlot.OxyMouseWheelEventArgs})">
            <summary>
            Binds the modifier+mouse wheel event to the specified command.
            </summary>
            <param name="controller">The plot controller.</param>
            <param name="modifiers">The modifier key(s).</param>
            <param name="command">A plot controller command that takes mouse wheel event arguments.</param>
        </member>
        <member name="M:OxyPlot.ControllerExtensions.UnbindMouseDown(OxyPlot.IController,OxyPlot.OxyMouseButton,OxyPlot.OxyModifierKeys,System.Int32)">
            <summary>
            Unbinds the specified mouse down gesture.
            </summary>
            <param name="controller">The controller.</param>
            <param name="mouseButton">The mouse button.</param>
            <param name="modifiers">The modifier keys.</param>
            <param name="clickCount">The click count.</param>
        </member>
        <member name="M:OxyPlot.ControllerExtensions.UnbindKeyDown(OxyPlot.IController,OxyPlot.OxyKey,OxyPlot.OxyModifierKeys)">
            <summary>
            Unbinds the specified key down gesture.
            </summary>
            <param name="controller">The controller.</param>
            <param name="key">The key.</param>
            <param name="modifiers">The modifier keys.</param>
        </member>
        <member name="M:OxyPlot.ControllerExtensions.UnbindMouseEnter(OxyPlot.IController)">
            <summary>
            Unbinds the mouse enter gesture.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:OxyPlot.ControllerExtensions.UnbindTouchDown(OxyPlot.IController)">
            <summary>
            Unbinds the touch down gesture.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="M:OxyPlot.ControllerExtensions.UnbindMouseWheel(OxyPlot.IController)">
            <summary>
            Unbinds the mouse wheel gesture.
            </summary>
            <param name="controller">The controller.</param>
        </member>
        <member name="T:OxyPlot.CursorType">
            <summary>
            Defines the cursor type.
            </summary>
        </member>
        <member name="F:OxyPlot.CursorType.Default">
            <summary>
            The default cursor
            </summary>
        </member>
        <member name="F:OxyPlot.CursorType.Pan">
            <summary>
            The pan cursor
            </summary>
        </member>
        <member name="F:OxyPlot.CursorType.ZoomRectangle">
            <summary>
            The zoom rectangle cursor
            </summary>
        </member>
        <member name="F:OxyPlot.CursorType.ZoomHorizontal">
            <summary>
            The horizontal zoom cursor
            </summary>
        </member>
        <member name="F:OxyPlot.CursorType.ZoomVertical">
            <summary>
            The vertical zoom cursor
            </summary>
        </member>
        <member name="T:OxyPlot.DelegateViewCommand`1">
            <summary>
            Provides a <see cref="T:OxyPlot.IViewCommand" /> implemented by a delegate.
            </summary>
            <typeparam name="T">The type of the event arguments.</typeparam>
        </member>
        <member name="F:OxyPlot.DelegateViewCommand`1.handler">
            <summary>
            The handler
            </summary>
        </member>
        <member name="M:OxyPlot.DelegateViewCommand`1.#ctor(System.Action{OxyPlot.IView,OxyPlot.IController,`0})">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.DelegateViewCommand`1" /> class.
            </summary>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:OxyPlot.DelegateViewCommand`1.Execute(OxyPlot.IView,OxyPlot.IController,`0)">
            <summary>
            Executes the command on the specified plot.
            </summary>
            <param name="view">The plot view.</param>
            <param name="controller">The plot controller.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyInputEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.DelegateViewCommand`1.Execute(OxyPlot.IView,OxyPlot.IController,OxyPlot.OxyInputEventArgs)">
            <summary>
            Executes the command on the specified plot.
            </summary>
            <param name="view">The plot view.</param>
            <param name="controller">The plot controller.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyInputEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:OxyPlot.Element">
            <summary>
            Provides an abstract base class for graphics elements.
            </summary>
            <summary>
            Provides an abstract base class for graphics elements.
            </summary>
            <summary>
            Provides an abstract base class for graphics elements.
            </summary>
        </member>
        <member name="P:OxyPlot.Element.Parent">
            <summary>
            Gets the parent model of the element.
            </summary>
            <value>
            The <see cref="T:OxyPlot.Model" /> that is the parent of the element.
            </value>
        </member>
        <member name="M:OxyPlot.Element.HitTest(OxyPlot.HitTestArguments)">
            <summary>
            Tests if the plot element is hit by the specified point.
            </summary>
            <param name="args">The hit test arguments.</param>
            <returns>
            A hit test result.
            </returns>
        </member>
        <member name="M:OxyPlot.Element.HitTestOverride(OxyPlot.HitTestArguments)">
            <summary>
            When overridden in a derived class, tests if the plot element is hit by the specified point.
            </summary>
            <param name="args">The hit test arguments.</param>
            <returns>
            The result of the hit test.
            </returns>
        </member>
        <member name="E:OxyPlot.Element.KeyDown">
            <summary>
            Occurs when a key is pressed down when the plot view is in focus.
            </summary>
        </member>
        <member name="E:OxyPlot.Element.MouseDown">
            <summary>
            Occurs when a mouse button is pressed down on the model.
            </summary>
        </member>
        <member name="E:OxyPlot.Element.MouseMove">
            <summary>
            Occurs when the mouse is moved on the plot element (only occurs after MouseDown).
            </summary>
        </member>
        <member name="E:OxyPlot.Element.MouseUp">
            <summary>
            Occurs when the mouse button is released on the plot element.
            </summary>
        </member>
        <member name="E:OxyPlot.Element.TouchStarted">
            <summary>
            Occurs when a touch gesture starts.
            </summary>
        </member>
        <member name="E:OxyPlot.Element.TouchDelta">
            <summary>
            Occurs when a touch gesture is changed.
            </summary>
        </member>
        <member name="E:OxyPlot.Element.TouchCompleted">
            <summary>
            Occurs when the touch gesture is completed.
            </summary>
        </member>
        <member name="M:OxyPlot.Element.OnMouseDown(OxyPlot.OxyMouseDownEventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Element.MouseDown" /> event.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Element.OnMouseMove(OxyPlot.OxyMouseEventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Element.MouseMove" /> event.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Element.OnKeyDown(OxyPlot.OxyKeyEventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Element.KeyDown" /> event.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyKeyEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Element.OnMouseUp(OxyPlot.OxyMouseEventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Element.MouseUp" /> event.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Element.OnTouchStarted(OxyPlot.OxyTouchEventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Element.TouchStarted" /> event.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Element.OnTouchDelta(OxyPlot.OxyTouchEventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Element.TouchDelta" /> event.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Element.OnTouchCompleted(OxyPlot.OxyTouchEventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Element.MouseUp" /> event.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="F:OxyPlot.Element.selection">
            <summary>
            The selection
            </summary>
        </member>
        <member name="E:OxyPlot.Element.SelectionChanged">
            <summary>
            Occurs when the selected items is changed.
            </summary>
        </member>
        <member name="P:OxyPlot.Element.Selectable">
            <summary>
            Gets or sets a value indicating whether this element can be selected. The default is <c>true</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Element.SelectionMode">
            <summary>
            Gets or sets the selection mode of items in this element. The default is <c>SelectionMode.All</c>.
            </summary>
            <value>The selection mode.</value>
            <remarks>This is only used by the select/unselect functionality, not by the rendering.</remarks>
        </member>
        <member name="P:OxyPlot.Element.ActualSelectedColor">
            <summary>
            Gets the actual selection color.
            </summary>
            <value>The actual selection color.</value>
        </member>
        <member name="M:OxyPlot.Element.IsSelected">
            <summary>
            Determines whether any part of this element is selected.
            </summary>
            <returns><c>true</c> if this element is selected; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OxyPlot.Element.GetSelectedItems">
            <summary>
            Gets the indices of the selected items in this element.
            </summary>
            <returns>Enumerator of item indices.</returns>
        </member>
        <member name="M:OxyPlot.Element.ClearSelection">
            <summary>
            Clears the selection.
            </summary>
        </member>
        <member name="M:OxyPlot.Element.Unselect">
            <summary>
            Unselects all items in this element.
            </summary>
        </member>
        <member name="M:OxyPlot.Element.IsItemSelected(System.Int32)">
            <summary>
            Determines whether the specified item is selected.
            </summary>
            <param name="index">The index of the item.</param>
            <returns><c>true</c> if the item is selected; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OxyPlot.Element.Select">
            <summary>
            Selects all items in this element.
            </summary>
        </member>
        <member name="M:OxyPlot.Element.SelectItem(System.Int32)">
            <summary>
            Selects the specified item.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:OxyPlot.Element.UnselectItem(System.Int32)">
            <summary>
            Unselects the specified item.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:OxyPlot.Element.GetSelectableColor(OxyPlot.OxyColor,System.Int32)">
            <summary>
            Gets the selection color if the item is selected, or the specified color if it is not.
            </summary>
            <param name="originalColor">The unselected color of the element.</param>
            <param name="index">The index of the item to check (use -1 for all items).</param>
            <returns>A color.</returns>
        </member>
        <member name="M:OxyPlot.Element.GetSelectableFillColor(OxyPlot.OxyColor,System.Int32)">
            <summary>
            Gets the selection fill color it the element is selected, or the specified fill color if it is not.
            </summary>
            <param name="originalColor">The unselected fill color of the element.</param>
            <param name="index">The index of the item to check (use -1 for all items).</param>
            <returns>A fill color.</returns>
        </member>
        <member name="M:OxyPlot.Element.EnsureSelection">
            <summary>
            Ensures that the selection field is not <c>null</c>.
            </summary>
        </member>
        <member name="M:OxyPlot.Element.OnSelectionChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Element.SelectionChanged" /> event.
            </summary>
            <param name="args">The <see cref="T:System.EventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:OxyPlot.ElementCollectionChangedEventArgs`1">
            <summary>
            The element collection changed event args.
            </summary>
            <typeparam name="T">The type.</typeparam>
        </member>
        <member name="M:OxyPlot.ElementCollectionChangedEventArgs`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.ElementCollectionChangedEventArgs`1"/> class.
            </summary>
            <param name="addedItems">The added items.</param>
            <param name="removedItems">The removed items.</param>
        </member>
        <member name="P:OxyPlot.ElementCollectionChangedEventArgs`1.AddedItems">
            <summary>
            Gets the added items.
            </summary>
            <value>The added items.</value>
        </member>
        <member name="P:OxyPlot.ElementCollectionChangedEventArgs`1.RemovedItems">
            <summary>
            Gets the removed items.
            </summary>
            <value>The removed items.</value>
        </member>
        <member name="T:OxyPlot.ElementCollection`1">
            <summary>
            Represents a collection of <see cref="T:OxyPlot.Element" /> objects.
            </summary>
            <typeparam name="T">The type of the elements.</typeparam>
        </member>
        <member name="F:OxyPlot.ElementCollection`1.parent">
            <summary>
            The parent <see cref="T:OxyPlot.Model" />.
            </summary>
        </member>
        <member name="F:OxyPlot.ElementCollection`1.internalList">
            <summary>
            The internal list.
            </summary>
        </member>
        <member name="M:OxyPlot.ElementCollection`1.#ctor(OxyPlot.Model)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.ElementCollection`1" /> class.
            </summary>
            <param name="parent">The parent <see cref="T:OxyPlot.PlotModel" />.</param>
        </member>
        <member name="E:OxyPlot.ElementCollection`1.CollectionChanged">
            <summary>
            Raised when the collection changes.
            </summary>
        </member>
        <member name="P:OxyPlot.ElementCollection`1.Count">
            <summary>
            Gets the number of elements contained in the collection.
            </summary>
            <returns>The number of elements contained in the collection.</returns>
        </member>
        <member name="P:OxyPlot.ElementCollection`1.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
            <returns><c>true</c> if the collection is read-only; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:OxyPlot.ElementCollection`1.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The element.</returns>
        </member>
        <member name="M:OxyPlot.ElementCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>A <see cref="T:System.Collections.Generic.IEnumerator{T}" /> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:OxyPlot.ElementCollection`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:OxyPlot.ElementCollection`1.Add(`0)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="item">The object to add to the collection.</param>
            <exception cref="T:System.InvalidOperationException">The element cannot be added, it already belongs to a PlotModel.</exception>
        </member>
        <member name="M:OxyPlot.ElementCollection`1.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:OxyPlot.ElementCollection`1.Contains(`0)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns><c>true</c> if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OxyPlot.ElementCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies to.
            </summary>
            <param name="array">The array.</param>
            <param name="arrayIndex">Index of the array.</param>
        </member>
        <member name="M:OxyPlot.ElementCollection`1.Remove(`0)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns><c>true</c> if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <c>false</c>. This method also returns <c>false</c> if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="M:OxyPlot.ElementCollection`1.IndexOf(`0)">
            <summary>
            Determines the index of a specific item in the collection.
            </summary>
            <param name="item">The object to locate in the collection.</param>
            <returns>The index of <paramref name="item" /> if found in the list; otherwise, -1.</returns>
        </member>
        <member name="M:OxyPlot.ElementCollection`1.Insert(System.Int32,`0)">
            <summary>
            Inserts an item to the collection at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the collection.</param>
            <exception cref="T:System.InvalidOperationException">The element cannot be inserted, it already belongs to a PlotModel.</exception>
        </member>
        <member name="M:OxyPlot.ElementCollection`1.RemoveAt(System.Int32)">
            <summary>
            Removes the collection item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:OxyPlot.ElementCollection`1.RaiseCollectionChanged(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Raises the collection changed event.
            </summary>
            <param name="addedItems">The added items.</param>
            <param name="removedItems">The removed items.</param>
        </member>
        <member name="T:OxyPlot.HitTestArguments">
            <summary>
            Represents arguments for the hit test.
            </summary>
        </member>
        <member name="M:OxyPlot.HitTestArguments.#ctor(OxyPlot.ScreenPoint,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.HitTestArguments"/> class.
            </summary>
            <param name="point">The point.</param>
            <param name="tolerance">The tolerance.</param>
        </member>
        <member name="P:OxyPlot.HitTestArguments.Point">
            <summary>
            Gets the point to hit test.
            </summary>
        </member>
        <member name="P:OxyPlot.HitTestArguments.Tolerance">
            <summary>
            Gets the hit test tolerance.
            </summary>
        </member>
        <member name="T:OxyPlot.HitTestResult">
            <summary>
            Represents a hit test result.
            </summary>
        </member>
        <member name="M:OxyPlot.HitTestResult.#ctor(OxyPlot.Element,OxyPlot.ScreenPoint,System.Object,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.HitTestResult" /> class.
            </summary>
            <param name="element">The element that was hit.</param>
            <param name="nearestHitPoint">The nearest hit point.</param>
            <param name="item">The item.</param>
            <param name="index">The index.</param>
        </member>
        <member name="P:OxyPlot.HitTestResult.Index">
            <summary>
            Gets the index of the hit (if available).
            </summary>
            <value>The index.</value>
            <remarks>If the hit was in the middle between point 1 and 2, index = 1.5.</remarks>
        </member>
        <member name="P:OxyPlot.HitTestResult.Item">
            <summary>
            Gets the item of the hit (if available).
            </summary>
            <value>The item.</value>
        </member>
        <member name="P:OxyPlot.HitTestResult.Element">
            <summary>
            Gets the element that was hit.
            </summary>
            <value>
            The element.
            </value>
        </member>
        <member name="P:OxyPlot.HitTestResult.NearestHitPoint">
            <summary>
            Gets the position of the nearest hit point.
            </summary>
            <value>The nearest hit point.</value>
        </member>
        <member name="T:OxyPlot.IController">
            <summary>
            Specifies functionality to interact with a graphics view.
            </summary>
        </member>
        <member name="M:OxyPlot.IController.HandleMouseDown(OxyPlot.IView,OxyPlot.OxyMouseDownEventArgs)">
            <summary>
            Handles mouse down events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.IController.HandleMouseMove(OxyPlot.IView,OxyPlot.OxyMouseEventArgs)">
            <summary>
            Handles mouse move events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.IController.HandleMouseUp(OxyPlot.IView,OxyPlot.OxyMouseEventArgs)">
            <summary>
            Handles mouse up events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.IController.HandleMouseEnter(OxyPlot.IView,OxyPlot.OxyMouseEventArgs)">
            <summary>
            Handles mouse enter events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.IController.HandleMouseLeave(OxyPlot.IView,OxyPlot.OxyMouseEventArgs)">
            <summary>
            Handles mouse leave events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.IController.HandleMouseWheel(OxyPlot.IView,OxyPlot.OxyMouseWheelEventArgs)">
            <summary>
            Handles mouse wheel events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseWheelEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.IController.HandleTouchStarted(OxyPlot.IView,OxyPlot.OxyTouchEventArgs)">
            <summary>
            Handles touch started events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.IController.HandleTouchDelta(OxyPlot.IView,OxyPlot.OxyTouchEventArgs)">
            <summary>
            Handles touch delta events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.IController.HandleTouchCompleted(OxyPlot.IView,OxyPlot.OxyTouchEventArgs)">
            <summary>
            Handles touch completed events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.IController.HandleKeyDown(OxyPlot.IView,OxyPlot.OxyKeyEventArgs)">
            <summary>
            Handles key down events.
            </summary>
            <param name="view">The plot view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyKeyEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.IController.HandleGesture(OxyPlot.IView,OxyPlot.OxyInputGesture,OxyPlot.OxyInputEventArgs)">
            <summary>
            Handles the specified gesture.
            </summary>
            <param name="view">The plot view.</param>
            <param name="gesture">The gesture.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyInputEventArgs" /> instance containing the event data.</param>
            <returns><c>true</c> if the event was handled.</returns>
        </member>
        <member name="M:OxyPlot.IController.AddMouseManipulator(OxyPlot.IView,OxyPlot.ManipulatorBase{OxyPlot.OxyMouseEventArgs},OxyPlot.OxyMouseDownEventArgs)">
            <summary>
            Adds the specified mouse manipulator and invokes the <see cref="M:OxyPlot.MouseManipulator.Started(OxyPlot.OxyMouseEventArgs)" /> method with the specified mouse event arguments.
            </summary>
            <param name="view">The plot view.</param>
            <param name="manipulator">The manipulator to add.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.IController.AddHoverManipulator(OxyPlot.IView,OxyPlot.ManipulatorBase{OxyPlot.OxyMouseEventArgs},OxyPlot.OxyMouseEventArgs)">
            <summary>
            Adds the specified mouse hover manipulator and invokes the <see cref="M:OxyPlot.MouseManipulator.Started(OxyPlot.OxyMouseEventArgs)" /> method with the specified mouse event arguments.
            </summary>
            <param name="view">The view.</param>
            <param name="manipulator">The manipulator.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.IController.AddTouchManipulator(OxyPlot.IView,OxyPlot.ManipulatorBase{OxyPlot.OxyTouchEventArgs},OxyPlot.OxyTouchEventArgs)">
            <summary>
            Adds the specified touch manipulator and invokes the <see cref="M:OxyPlot.MouseManipulator.Started(OxyPlot.OxyMouseEventArgs)" /> method with the specified mouse event arguments.
            </summary>
            <param name="view">The view.</param>
            <param name="manipulator">The manipulator.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.IController.Bind(OxyPlot.OxyMouseDownGesture,OxyPlot.IViewCommand{OxyPlot.OxyMouseDownEventArgs})">
            <summary>
            Binds the specified command to the specified mouse down gesture. Removes old bindings to the gesture.
            </summary>
            <param name="gesture">The mouse down gesture.</param>
            <param name="command">The command. If <c>null</c>, the binding will be removed.</param>
        </member>
        <member name="M:OxyPlot.IController.Bind(OxyPlot.OxyMouseEnterGesture,OxyPlot.IViewCommand{OxyPlot.OxyMouseEventArgs})">
            <summary>
            Binds the specified command to the specified mouse enter gesture. Removes old bindings to the gesture.
            </summary>
            <param name="gesture">The mouse enter gesture.</param>
            <param name="command">The command. If <c>null</c>, the binding will be removed.</param>
        </member>
        <member name="M:OxyPlot.IController.Bind(OxyPlot.OxyMouseWheelGesture,OxyPlot.IViewCommand{OxyPlot.OxyMouseWheelEventArgs})">
            <summary>
            Binds the specified command to the specified mouse wheel gesture. Removes old bindings to the gesture.
            </summary>
            <param name="gesture">The mouse wheel gesture.</param>
            <param name="command">The command. If <c>null</c>, the binding will be removed.</param>
        </member>
        <member name="M:OxyPlot.IController.Bind(OxyPlot.OxyTouchGesture,OxyPlot.IViewCommand{OxyPlot.OxyTouchEventArgs})">
            <summary>
            Binds the specified command to the specified touch gesture. Removes old bindings to the gesture.
            </summary>
            <param name="gesture">The touch gesture.</param>
            <param name="command">The command. If <c>null</c>, the binding will be removed.</param>
        </member>
        <member name="M:OxyPlot.IController.Bind(OxyPlot.OxyKeyGesture,OxyPlot.IViewCommand{OxyPlot.OxyKeyEventArgs})">
            <summary>
            Binds the specified command to the specified key gesture. Removes old bindings to the gesture.
            </summary>
            <param name="gesture">The key gesture.</param>
            <param name="command">The command. If <c>null</c>, the binding will be removed.</param>
        </member>
        <member name="M:OxyPlot.IController.Unbind(OxyPlot.OxyInputGesture)">
            <summary>
            Unbinds the specified gesture.
            </summary>
            <param name="gesture">The gesture to unbind.</param>
        </member>
        <member name="M:OxyPlot.IController.Unbind(OxyPlot.IViewCommand)">
            <summary>
            Unbinds the specified command from all gestures.
            </summary>
            <param name="command">The command to unbind.</param>
        </member>
        <member name="M:OxyPlot.IController.UnbindAll">
            <summary>
            Unbinds all commands.
            </summary>
        </member>
        <member name="T:OxyPlot.InputCommandBinding">
            <summary>
            Represents an binding by an input gesture and a command binding.
            </summary>
        </member>
        <member name="M:OxyPlot.InputCommandBinding.#ctor(OxyPlot.OxyInputGesture,OxyPlot.IViewCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.InputCommandBinding" /> class by a gesture.
            </summary>
            <param name="gesture">The gesture.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:OxyPlot.InputCommandBinding.#ctor(OxyPlot.OxyKey,OxyPlot.OxyModifierKeys,OxyPlot.IViewCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.InputCommandBinding" /> class by a key gesture.
            </summary>
            <param name="key">The key.</param>
            <param name="modifiers">The modifiers.</param>
            <param name="command">The command.</param>
        </member>
        <member name="M:OxyPlot.InputCommandBinding.#ctor(OxyPlot.OxyMouseButton,OxyPlot.OxyModifierKeys,OxyPlot.IViewCommand)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.InputCommandBinding" /> class by a mouse gesture.
            </summary>
            <param name="mouseButton">The mouse button.</param>
            <param name="modifiers">The modifiers.</param>
            <param name="command">The command.</param>
        </member>
        <member name="P:OxyPlot.InputCommandBinding.Gesture">
            <summary>
            Gets the gesture.
            </summary>
        </member>
        <member name="P:OxyPlot.InputCommandBinding.Command">
            <summary>
            Gets the command.
            </summary>
        </member>
        <member name="T:OxyPlot.IView">
            <summary>
            Specifies common functionality for the views.
            </summary>
        </member>
        <member name="P:OxyPlot.IView.ActualModel">
            <summary>
            Gets the actual model in the view.
            </summary>
            <value>
            The actual <see cref="T:OxyPlot.Model" />.
            </value>
        </member>
        <member name="P:OxyPlot.IView.ActualController">
            <summary>
            Gets the actual controller.
            </summary>
            <value>
            The actual <see cref="T:OxyPlot.IController" />.
            </value>
        </member>
        <member name="P:OxyPlot.IView.ClientArea">
            <summary>
            Gets the coordinates of the client area of the view.
            </summary>
            <value>
            The client area rectangle.
            </value>
        </member>
        <member name="M:OxyPlot.IView.SetCursorType(OxyPlot.CursorType)">
            <summary>
            Sets the cursor type.
            </summary>
            <param name="cursorType">The cursor type.</param>
        </member>
        <member name="M:OxyPlot.IView.HideZoomRectangle">
            <summary>
            Hides the zoom rectangle.
            </summary>
        </member>
        <member name="M:OxyPlot.IView.ShowZoomRectangle(OxyPlot.OxyRect)">
            <summary>
            Shows the zoom rectangle.
            </summary>
            <param name="rectangle">The rectangle.</param>
        </member>
        <member name="T:OxyPlot.IViewCommand">
            <summary>
            Specifies functionality to execute a command on a view.
            </summary>
        </member>
        <member name="M:OxyPlot.IViewCommand.Execute(OxyPlot.IView,OxyPlot.IController,OxyPlot.OxyInputEventArgs)">
            <summary>
            Executes the command on the specified plot.
            </summary>
            <param name="view">The view.</param>
            <param name="controller">The controller.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyInputEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:OxyPlot.IViewCommand`1">
            <summary>
            Specifies functionality to execute a command on a view.
            </summary>
            <typeparam name="T">The type of the event arguments.</typeparam>
        </member>
        <member name="M:OxyPlot.IViewCommand`1.Execute(OxyPlot.IView,OxyPlot.IController,`0)">
            <summary>
            Executes the command on the specified plot.
            </summary>
            <param name="view">The view.</param>
            <param name="controller">The controller.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyInputEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:OxyPlot.ManipulatorBase`1">
            <summary>
            Provides an abstract base class for controller manipulators.
            </summary>
            <typeparam name="T">The type of the event arguments.</typeparam>
        </member>
        <member name="M:OxyPlot.ManipulatorBase`1.#ctor(OxyPlot.IView)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.ManipulatorBase`1" /> class.
            </summary>
            <param name="view">The view.</param>
        </member>
        <member name="P:OxyPlot.ManipulatorBase`1.View">
            <summary>
            Gets the plot view where the event was raised.
            </summary>
            <value>The plot view.</value>
        </member>
        <member name="M:OxyPlot.ManipulatorBase`1.Completed(`0)">
            <summary>
            Occurs when a manipulation is complete.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyInputEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.ManipulatorBase`1.Delta(`0)">
            <summary>
            Occurs when the input device changes position during a manipulation.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyInputEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.ManipulatorBase`1.Started(`0)">
            <summary>
            Occurs when an input device begins a manipulation on the plot.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyInputEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:OxyPlot.Model">
            <summary>
            Provides an abstract base class for graphics models.
            </summary>
            <summary>
            Provides an abstract base class for graphics models.
            </summary>
        </member>
        <member name="F:OxyPlot.Model.DefaultSelectionColor">
            <summary>
            The default selection color.
            </summary>
        </member>
        <member name="F:OxyPlot.Model.syncRoot">
            <summary>
            The synchronization root object.
            </summary>
        </member>
        <member name="M:OxyPlot.Model.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Model"/> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Model.SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to the <see cref="T:OxyPlot.Model" />.
            </summary>
            <value>A synchronization object.</value>
            <remarks>This property can be used when modifying the <see cref="T:OxyPlot.Model" /> on a separate thread (not the thread updating or rendering the model).</remarks>
        </member>
        <member name="P:OxyPlot.Model.SelectionColor">
            <summary>
            Gets or sets the color of the selection.
            </summary>
            <value>The color of the selection.</value>
        </member>
        <member name="M:OxyPlot.Model.HitTest(OxyPlot.HitTestArguments)">
            <summary>
            Returns the elements that are hit at the specified position.
            </summary>
            <param name="args">The hit test arguments.</param>
            <returns>
            A sequence of hit results.
            </returns>
        </member>
        <member name="M:OxyPlot.Model.GetHitTestElements">
            <summary>
            Gets all elements of the model, top-level elements first.
            </summary>
            <returns>An enumerator of the elements.</returns>
        </member>
        <member name="F:OxyPlot.Model.MouseHitTolerance">
            <summary>
            The mouse hit tolerance.
            </summary>
        </member>
        <member name="F:OxyPlot.Model.currentMouseEventElement">
            <summary>
            The element that receives mouse move events.
            </summary>
        </member>
        <member name="F:OxyPlot.Model.currentTouchEventElement">
            <summary>
            The element that receives touch delta events.
            </summary>
        </member>
        <member name="E:OxyPlot.Model.KeyDown">
            <summary>
            Occurs when a key is pressed down when the plot view is focused.
            </summary>
        </member>
        <member name="E:OxyPlot.Model.MouseDown">
            <summary>
            Occurs when a mouse button is pressed down on the model.
            </summary>
        </member>
        <member name="E:OxyPlot.Model.MouseMove">
            <summary>
            Occurs when the mouse is moved on the plot element (only occurs after MouseDown).
            </summary>
        </member>
        <member name="E:OxyPlot.Model.MouseUp">
            <summary>
            Occurs when the mouse button is released on the plot element.
            </summary>
        </member>
        <member name="E:OxyPlot.Model.MouseEnter">
            <summary>
            Occurs when the mouse cursor enters the plot area.
            </summary>
        </member>
        <member name="E:OxyPlot.Model.MouseLeave">
            <summary>
            Occurs when the mouse cursor leaves the plot area.
            </summary>
        </member>
        <member name="E:OxyPlot.Model.TouchStarted">
            <summary>
            Occurs when a touch gesture is started.
            </summary>
        </member>
        <member name="E:OxyPlot.Model.TouchDelta">
            <summary>
            Occurs when a touch gesture is changed.
            </summary>
        </member>
        <member name="E:OxyPlot.Model.TouchCompleted">
            <summary>
            Occurs when a touch gesture is completed.
            </summary>
        </member>
        <member name="M:OxyPlot.Model.HandleMouseDown(System.Object,OxyPlot.OxyMouseDownEventArgs)">
            <summary>
            Handles the mouse down event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Model.HandleMouseMove(System.Object,OxyPlot.OxyMouseEventArgs)">
            <summary>
            Handles the mouse move event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Model.HandleMouseUp(System.Object,OxyPlot.OxyMouseEventArgs)">
            <summary>
            Handles the mouse up event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Model.HandleMouseEnter(System.Object,OxyPlot.OxyMouseEventArgs)">
            <summary>
            Handles the mouse enter event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Model.HandleMouseLeave(System.Object,OxyPlot.OxyMouseEventArgs)">
            <summary>
            Handles the mouse leave event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Model.HandleTouchStarted(System.Object,OxyPlot.OxyTouchEventArgs)">
            <summary>
            Handles the touch started event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">A <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Model.HandleTouchDelta(System.Object,OxyPlot.OxyTouchEventArgs)">
            <summary>
            Handles the touch delta event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">A <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Model.HandleTouchCompleted(System.Object,OxyPlot.OxyTouchEventArgs)">
            <summary>
            Handles the touch completed event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">A <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Model.HandleKeyDown(System.Object,OxyPlot.OxyKeyEventArgs)">
            <summary>
            Handles key down events.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:OxyPlot.OxyKeyEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Model.OnKeyDown(System.Object,OxyPlot.OxyKeyEventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Model.KeyDown" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Model.OnMouseDown(System.Object,OxyPlot.OxyMouseDownEventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Model.MouseDown" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Model.OnMouseMove(System.Object,OxyPlot.OxyMouseEventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Model.MouseMove" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Model.OnMouseUp(System.Object,OxyPlot.OxyMouseEventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Model.MouseUp" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Model.OnMouseEnter(System.Object,OxyPlot.OxyMouseEventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Model.MouseEnter" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Model.OnMouseLeave(System.Object,OxyPlot.OxyMouseEventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Model.MouseLeave" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Model.OnTouchStarted(System.Object,OxyPlot.OxyTouchEventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Model.MouseDown" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Model.OnTouchDelta(System.Object,OxyPlot.OxyTouchEventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Model.MouseMove" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.Model.OnTouchCompleted(System.Object,OxyPlot.OxyTouchEventArgs)">
            <summary>
            Raises the <see cref="E:OxyPlot.Model.MouseUp" /> event.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:OxyPlot.Selection">
            <summary>
            Represents a selection of items (by index) and features (by enumeration type).
            </summary>
        </member>
        <member name="F:OxyPlot.Selection.EverythingSelection">
            <summary>
            Static instance representing everything (all items and all features) selected.
            </summary>
        </member>
        <member name="F:OxyPlot.Selection.selection">
            <summary>
            The selection (cannot use HashSet{T} in PCL)
            </summary>
        </member>
        <member name="P:OxyPlot.Selection.Everything">
            <summary>
            Gets the everything selected.
            </summary>
            <value>The everything.</value>
        </member>
        <member name="M:OxyPlot.Selection.IsEverythingSelected">
            <summary>
            Determines whether everything is selected.
            </summary>
            <returns><c>true</c> if everything is selected; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OxyPlot.Selection.GetSelectedItems">
            <summary>
            Gets the indices of the selected items in this selection.
            </summary>
            <returns>Enumerator of indices.</returns>
        </member>
        <member name="M:OxyPlot.Selection.GetSelectedItems(System.Enum)">
            <summary>
            Gets the selected items by the specified feature.
            </summary>
            <param name="feature">The feature.</param>
            <returns>Enumerator of indices.</returns>
        </member>
        <member name="M:OxyPlot.Selection.Clear">
            <summary>
            Clears the selected items.
            </summary>
        </member>
        <member name="M:OxyPlot.Selection.IsItemSelected(System.Int32,System.Enum)">
            <summary>
            Determines whether the specified item and feature is selected.
            </summary>
            <param name="index">The index of the item.</param>
            <param name="feature">The feature.</param>
            <returns><c>true</c> if the item is selected; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OxyPlot.Selection.Select(System.Int32,System.Enum)">
            <summary>
            Selects the specified item/feature.
            </summary>
            <param name="index">The index.</param>
            <param name="feature">The feature.</param>
        </member>
        <member name="M:OxyPlot.Selection.Unselect(System.Int32,System.Enum)">
            <summary>
            Unselects the specified item.
            </summary>
            <param name="index">The index of the item.</param>
            <param name="feature">The feature.</param>
        </member>
        <member name="T:OxyPlot.Selection.SelectionItem">
            <summary>
            Represents an item in a <see cref="T:OxyPlot.Selection" />.
            </summary>
        </member>
        <member name="F:OxyPlot.Selection.SelectionItem.index">
            <summary>
            The index
            </summary>
        </member>
        <member name="F:OxyPlot.Selection.SelectionItem.feature">
            <summary>
            The feature
            </summary>
        </member>
        <member name="M:OxyPlot.Selection.SelectionItem.#ctor(System.Int32,System.Enum)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Selection.SelectionItem" /> struct.
            </summary>
            <param name="index">The index.</param>
            <param name="feature">The feature.</param>
        </member>
        <member name="P:OxyPlot.Selection.SelectionItem.Index">
            <summary>
            Gets the index.
            </summary>
            <value>The index.</value>
        </member>
        <member name="P:OxyPlot.Selection.SelectionItem.Feature">
            <summary>
            Gets the feature.
            </summary>
            <value>The feature.</value>
        </member>
        <member name="M:OxyPlot.Selection.SelectionItem.Equals(OxyPlot.Selection.SelectionItem)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OxyPlot.Selection.SelectionItem.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:OxyPlot.SelectionMode">
            <summary>
            Defines the mode of selection used by <see cref="P:OxyPlot.Element.SelectionMode" />.
            </summary>
        </member>
        <member name="F:OxyPlot.SelectionMode.All">
            <summary>
            All the elements will be selected
            </summary>
        </member>
        <member name="F:OxyPlot.SelectionMode.Single">
            <summary>
            A single element will be selected
            </summary>
        </member>
        <member name="F:OxyPlot.SelectionMode.Multiple">
            <summary>
            Multiple elements can be selected
            </summary>
        </member>
        <member name="T:OxyPlot.BmpDecoder">
            <summary>
            Implements support for decoding bmp images.
            </summary>
        </member>
        <member name="M:OxyPlot.BmpDecoder.GetImageInfo(System.Byte[])">
            <summary>
            Gets information about the image in the specified byte array.
            </summary>
            <param name="bytes">The image data.</param>
            <returns>
            An <see cref="T:OxyPlot.OxyImageInfo" /> structure.
            </returns>
        </member>
        <member name="M:OxyPlot.BmpDecoder.Decode(System.Byte[])">
            <summary>
            Decodes an image from the specified byte array.
            </summary>
            <param name="bytes">The image data.</param>
            <returns>
            The 32-bit pixel data.
            </returns>
        </member>
        <member name="T:OxyPlot.BmpEncoder">
            <summary>
            Implements support for encoding bmp images.
            </summary>
        </member>
        <member name="F:OxyPlot.BmpEncoder.options">
            <summary>
            The options
            </summary>
        </member>
        <member name="M:OxyPlot.BmpEncoder.#ctor(OxyPlot.BmpEncoderOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.BmpEncoder" /> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:OxyPlot.BmpEncoder.Encode(OxyPlot.OxyColor[0:,0:])">
            <summary>
            Encodes the specified image data to png.
            </summary>
            <param name="pixels">The pixel data (bottom line first).</param>
            <returns>The png image data.</returns>
        </member>
        <member name="M:OxyPlot.BmpEncoder.Encode(System.Byte[0:,0:],OxyPlot.OxyColor[])">
            <summary>
            Encodes the specified 8-bit indexed pixels.
            </summary>
            <param name="pixels">The pixels.</param>
            <param name="palette">The palette.</param>
            <returns>The image data.</returns>
        </member>
        <member name="M:OxyPlot.BmpEncoder.WriteBitmapInfoHeader(System.IO.BinaryWriter,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double,System.Int32)">
            <summary>
            Writes the bitmap info header.
            </summary>
            <param name="w">The writer.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="bitsPerPixel">The number of bits per pixel.</param>
            <param name="length">The length of the pixel data.</param>
            <param name="dpix">The horizontal resolution (dpi).</param>
            <param name="dpiy">The vertical resolution (dpi).</param>
            <param name="colors">The number of colors.</param>
        </member>
        <member name="M:OxyPlot.BmpEncoder.WriteBitmapV4Header(System.IO.BinaryWriter,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Writes the bitmap V4 header.
            </summary>
            <param name="w">The writer.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="bitsPerPixel">The number of bits per pixel.</param>
            <param name="length">The length.</param>
            <param name="dpi">The resolution.</param>
            <param name="colors">The number of colors.</param>
        </member>
        <member name="T:OxyPlot.BmpEncoderOptions">
            <summary>
            Represents options for the <see cref="T:OxyPlot.BmpEncoder" />.
            </summary>
        </member>
        <member name="T:OxyPlot.Arrays">
            <summary>
            Provides utilities for <see cref="T:System.Array" />s.
            </summary>
        </member>
        <member name="M:OxyPlot.Arrays.CopyOfRange``1(``0[],System.Int32,System.Int32)">
            <summary>
            Copies a range of the specified <see cref="T:System.Array" />.
            </summary>
            <typeparam name="T">The type of the array items.</typeparam>
            <param name="source">The source array.</param>
            <param name="from">The start index.</param>
            <param name="to">The end index.</param>
            <returns>An <see cref="T:System.Array" /> containing the items from index <paramref name="from" /> to index <paramref name="to" />.</returns>
        </member>
        <member name="M:OxyPlot.Arrays.CopyOf``1(``0[],System.Int32)">
            <summary>
            Copies the first items of the specified <see cref="T:System.Array" />.
            </summary>
            <typeparam name="T">The type of the array items.</typeparam>
            <param name="source">The source array.</param>
            <param name="newLength">The number of items to copy.</param>
            <returns>An <see cref="T:System.Array" /> containing the items from index 0 to index <paramref name="newLength" />.</returns>
        </member>
        <member name="M:OxyPlot.Arrays.Fill``1(``0[],System.Int32,System.Int32,``0)">
            <summary>
            Fills the specified array with values in the specified range.
            </summary>
            <typeparam name="T">The type of the array items.</typeparam>
            <param name="source">The source array.</param>
            <param name="i0">The start index.</param>
            <param name="i1">The end index.</param>
            <param name="v">The value to fill.</param>
        </member>
        <member name="T:OxyPlot.BitReader">
            <summary>
            Implements a binary reader that can read bits.
            </summary>
        </member>
        <member name="M:OxyPlot.BitReader.Read">
            <summary>
            Reads a byte from the stream.
            </summary>
            <returns>The byte.</returns>
        </member>
        <member name="M:OxyPlot.BitReader.ReadNoEof">
            <summary>
            Reads a bit from the stream.
            </summary>
            <returns>Returns 0 or 1 if a bit is available, or throws an EOFException if the end of stream is reached.</returns>
        </member>
        <member name="M:OxyPlot.BitReader.Close">
            <summary>
            Closes this stream and the underlying InputStream.
            </summary>
        </member>
        <member name="M:OxyPlot.BitReader.GetBitPosition">
            <summary>
            Returns the current bit position, which is between 0 and 7 inclusive. The number of bits remaining in the current byte is 8 minus this number.
            </summary>
            <returns>The bit position.</returns>
        </member>
        <member name="M:OxyPlot.BitReader.ReadByte">
            <summary>
            Discards the remainder of the current byte and reads the next byte from the stream.
            </summary>
            <returns>The byte.</returns>
        </member>
        <member name="M:OxyPlot.BitReader.ReadBits(System.Int32)">
            <summary>
            Reads the specified number of bits.
            </summary>
            <param name="bits">The number of bits.</param>
            <returns>The bits.</returns>
            <exception cref="T:System.IO.IOException">Reading past EOF.</exception>
        </member>
        <member name="T:OxyPlot.ByteBitReader">
            <summary>
            The byte bit reader.
            </summary>
        </member>
        <member name="F:OxyPlot.ByteBitReader.input">
            <summary>
            The input.
            </summary>
        </member>
        <member name="F:OxyPlot.ByteBitReader.bitPosition">
            <summary>
            The bit position.
            </summary>
            <remarks>Either in the range 0x00 to 0xFF, or -1 if the end of stream is reached</remarks>
        </member>
        <member name="F:OxyPlot.ByteBitReader.disposed">
            <summary>
            The disposed flag.
            </summary>
        </member>
        <member name="F:OxyPlot.ByteBitReader.isEndOfStream">
            <summary>
            The is end of stream.
            </summary>
            <remarks>Always between 1 and 8, inclusive</remarks>
        </member>
        <member name="F:OxyPlot.ByteBitReader.nextBits">
            <summary>
            The next bits.
            </summary>
            <remarks>Underlying byte stream to read from</remarks>
        </member>
        <member name="M:OxyPlot.ByteBitReader.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.ByteBitReader" /> class.
            </summary>
            <param name="s">The arguments.</param>
            <exception cref="T:System.ArgumentException">Argument is <c>null</c></exception>
        </member>
        <member name="M:OxyPlot.ByteBitReader.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:OxyPlot.ByteBitReader.Read">
            <summary>
            Reads a bit from the stream. Returns 0 or 1 if a bit is available, or -1 if the end of stream is reached. The end of stream always occurs on a byte boundary.
            </summary>
            <returns>The <see cref="T:System.Int32" />.</returns>
        </member>
        <member name="M:OxyPlot.ByteBitReader.ReadNoEof">
            <summary>
            Reads a bit from the stream. Returns 0 or 1 if a bit is available, or throws an EOFException if the end of stream is reached.
            </summary>
            <returns>The <see cref="T:System.Int32" />.</returns>
        </member>
        <member name="M:OxyPlot.ByteBitReader.GetBitPosition">
            <summary>
            Gets the bit position.
            </summary>
            <returns>The <see cref="T:System.Int32" />.</returns>
        </member>
        <member name="M:OxyPlot.ByteBitReader.ReadByte">
            <summary>
            Discards the remainder of the current byte and reads the next byte from the stream.
            </summary>
            <returns>The <see cref="T:System.Int32" />.</returns>
        </member>
        <member name="M:OxyPlot.ByteBitReader.Close">
            <summary>
            Closes this stream and the underlying InputStream.
            </summary>
        </member>
        <member name="M:OxyPlot.ByteBitReader.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:OxyPlot.CanonicalCode">
            <summary>
            A canonical Huffman code. Immutable. Code length 0 means no code.
            </summary>
            <remarks><p>
            The code is a c# port of the DEFLATE project by Nayuki Minase at <a href="https://github.com/nayuki/DEFLATE">github</a>.
            Original source code: <a href="https://github.com/nayuki/DEFLATE/blob/master/src/nayuki/deflate/CircularDictionary.java">CircularDictionary.java</a>.
            </p>
            <p>
            A canonical Huffman code only describes the code length of each symbol. The codes can be reconstructed from this information. In this implementation, symbols with lower code lengths, breaking ties by lower symbols, are assigned lexicographically lower codes.
            Example:
            Code lengths (canonical code):
            Symbol A: 1
            Symbol B: 3
            Symbol C: 0 (no code)
            Symbol D: 2
            Symbol E: 3
            Huffman codes (generated from canonical code):
            Symbol A: 0
            Symbol B: 110
            Symbol C: None
            Symbol D: 10
            Symbol E: 111
            </p></remarks>
        </member>
        <member name="F:OxyPlot.CanonicalCode.codeLengths">
            <summary>
            The code lengths
            </summary>
        </member>
        <member name="M:OxyPlot.CanonicalCode.#ctor(System.Int32[])">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.CanonicalCode" /> class.
            </summary>
            <param name="codeLengths">The code lengths.</param>
            <remarks>The constructor does not check that the array of code lengths results in a complete Huffman tree, being neither underfilled nor overfilled.</remarks>
        </member>
        <member name="M:OxyPlot.CanonicalCode.#ctor(OxyPlot.CodeTree,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.CanonicalCode" /> class based on the given code tree.
            </summary>
            <param name="tree">The tree.</param>
            <param name="symbolLimit">The symbol limit.</param>
        </member>
        <member name="M:OxyPlot.CanonicalCode.GetSymbolLimit">
            <summary>
            Gets the symbol limit.
            </summary>
            <returns>The limit.</returns>
        </member>
        <member name="M:OxyPlot.CanonicalCode.GetCodeLength(System.Int32)">
            <summary>
            Gets the length of the code.
            </summary>
            <param name="symbol">The symbol.</param>
            <returns>The length.</returns>
            <exception cref="T:System.Exception">Symbol out of range</exception>
        </member>
        <member name="M:OxyPlot.CanonicalCode.ToCodeTree">
            <summary>
            Converts the canonical code to a code tree.
            </summary>
            <returns>The code tree.</returns>
            <exception cref="T:System.Exception">This canonical code does not represent a Huffman code tree
            or
            This canonical code does not represent a Huffman code tree</exception>
        </member>
        <member name="M:OxyPlot.CanonicalCode.BuildCodeLengths(OxyPlot.Node,System.Int32)">
            <summary>
            Builds the code lengths.
            </summary>
            <param name="node">The node.</param>
            <param name="depth">The depth.</param>
            <exception cref="T:System.Exception">Symbol has more than one code
            or
            Symbol exceeds symbol limit
            or
            Illegal node type</exception>
        </member>
        <member name="T:OxyPlot.CircularDictionary">
            <summary>
            Provides a circular dictionary.
            </summary>
            <remarks>The code is a c# port of the DEFLATE project by Nayuki Minase at <a href="https://github.com/nayuki/DEFLATE">github</a>.
            Original source code: <a href="https://github.com/nayuki/DEFLATE/blob/master/src/nayuki/deflate/CircularDictionary.java">CircularDictionary.java</a>.</remarks>
        </member>
        <member name="F:OxyPlot.CircularDictionary.data">
            <summary>
            The data
            </summary>
        </member>
        <member name="F:OxyPlot.CircularDictionary.mask">
            <summary>
            The mask
            </summary>
        </member>
        <member name="F:OxyPlot.CircularDictionary.index">
            <summary>
            The index
            </summary>
        </member>
        <member name="M:OxyPlot.CircularDictionary.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.CircularDictionary" /> class.
            </summary>
            <param name="size">The size of the dictionary.</param>
        </member>
        <member name="M:OxyPlot.CircularDictionary.Append(System.Int32)">
            <summary>
            Appends the specified byte.
            </summary>
            <param name="b">The byte.</param>
        </member>
        <member name="M:OxyPlot.CircularDictionary.Copy(System.Int32,System.Int32,System.IO.BinaryWriter)">
            <summary>
            Copies the specified bytes to the output writer.
            </summary>
            <param name="dist">The distance?</param>
            <param name="len">The length.</param>
            <param name="w">The writer.</param>
        </member>
        <member name="T:OxyPlot.CodeTree">
            <summary>
            The code tree.
            </summary>
            <remarks>The code is a c# port of Nayuki Minase's DEFLATE project at <a href="https://github.com/nayuki/DEFLATE">GitHub</a>.
            Original source code: <a href="https://github.com/nayuki/DEFLATE/blob/master/src/nayuki/deflate/CodeTree.java">CodeTree.java</a>.</remarks>
        </member>
        <member name="F:OxyPlot.CodeTree.codes">
            <summary>
            Stores the code for each symbol, or <c>null</c> if the symbol has no code.
            For example, if symbol 5 has code 10011, then codes.get(5) is the list [1, 0, 0, 1, 1].
            </summary>
        </member>
        <member name="M:OxyPlot.CodeTree.#ctor(OxyPlot.InternalNode,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.CodeTree" /> class. Every symbol in the tree 'root' must be strictly less than 'symbolLimit'.
            </summary>
            <param name="root">The root.</param>
            <param name="symbolLimit">The symbol limit.</param>
        </member>
        <member name="P:OxyPlot.CodeTree.Root">
            <summary>
            Gets the root.
            </summary>
        </member>
        <member name="M:OxyPlot.CodeTree.GetCode(System.Int32)">
            <summary>
            Gets the code for the specified symbol.
            </summary>
            <param name="symbol">The symbol.</param>
            <returns>A <see cref="T:System.Collections.Generic.List`1" /> of codes.</returns>
        </member>
        <member name="M:OxyPlot.CodeTree.ToString">
            <summary>
            Returns a string showing all the codes in this tree. The format is subject to change. Useful for debugging.
            </summary>
            <returns>The <see cref="T:System.String" />.</returns>
        </member>
        <member name="M:OxyPlot.CodeTree.NodeString(System.String,OxyPlot.Node,System.Text.StringBuilder)">
            <summary>
            Appends the code of the specified node to the specified <see cref="T:System.Text.StringBuilder" />.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="node">The node.</param>
            <param name="sb">The string builder.</param>
            <exception cref="T:System.Exception">Illegal node type</exception>
        </member>
        <member name="M:OxyPlot.CodeTree.BuildCodeList(OxyPlot.Node,System.Collections.Generic.List{System.Int32})">
            <summary>
            Builds the code list.
            </summary>
            <param name="node">The node.</param>
            <param name="prefix">The prefix.</param>
        </member>
        <member name="T:OxyPlot.Deflate">
            <summary>
            Implements DEFLATE decompression.
            </summary>
            <remarks>The code is a c# port of the DEFLATE project by Nayuki Minase at <a href="https://github.com/nayuki/DEFLATE">github</a>.
            Original source code: <a href="https://github.com/nayuki/DEFLATE/blob/master/src/nayuki/deflate/Decompressor.java"><c>Decompressor.java</c></a>.</remarks>
        </member>
        <member name="F:OxyPlot.Deflate.FixedLiteralLengthCode">
            <summary>
            The fixed literal length code.
            </summary>
        </member>
        <member name="F:OxyPlot.Deflate.FixedDistanceCode">
            <summary>
            The fixed distance code.
            </summary>
        </member>
        <member name="F:OxyPlot.Deflate.dictionary">
            <summary>
            The dictionary.
            </summary>
        </member>
        <member name="F:OxyPlot.Deflate.input">
            <summary>
            The input.
            </summary>
        </member>
        <member name="F:OxyPlot.Deflate.output">
            <summary>
            The output.
            </summary>
        </member>
        <member name="F:OxyPlot.Deflate.outputStream">
            <summary>
            The output stream.
            </summary>
        </member>
        <member name="F:OxyPlot.Deflate.disposed">
            <summary>
            The disposed flag.
            </summary>
        </member>
        <member name="M:OxyPlot.Deflate.#cctor">
            <summary>
            Initializes static members of the <see cref="T:OxyPlot.Deflate" /> class.
            </summary>
        </member>
        <member name="M:OxyPlot.Deflate.#ctor(OxyPlot.BitReader)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Deflate" /> class.
            </summary>
            <param name="reader">The reader.</param>
        </member>
        <member name="M:OxyPlot.Deflate.Decompress(System.IO.Stream)">
            <summary>
            Decompresses the data from the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="input">The input.</param>
            <returns>An array of <see cref="T:System.Byte" />.</returns>
        </member>
        <member name="M:OxyPlot.Deflate.Decompress(OxyPlot.BitReader)">
            <summary>
            Decompresses the data from the specified <see cref="T:OxyPlot.BitReader" />.
            </summary>
            <param name="input">The input.</param>
            <returns>An array of <see cref="T:System.Byte" />.</returns>
        </member>
        <member name="M:OxyPlot.Deflate.Decompress(System.Byte[])">
            <summary>
            Decompresses the specified data.
            </summary>
            <param name="input">The input.</param>
            <returns>An array of <see cref="T:System.Byte" />.</returns>
        </member>
        <member name="M:OxyPlot.Deflate.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:OxyPlot.Deflate.DecodeHuffmanCodes">
            <summary>
            For handling dynamic Huffman codes.
            </summary>
            <returns>A sequence of <see cref="T:OxyPlot.CodeTree" /> items.</returns>
        </member>
        <member name="M:OxyPlot.Deflate.DecompressUncompressedBlock">
            <summary>
            Decompress an uncompressed block.
            </summary>
        </member>
        <member name="M:OxyPlot.Deflate.DecompressHuffmanBlock(OxyPlot.CodeTree,OxyPlot.CodeTree)">
            <summary>
            Decompresses a Huffman block.
            </summary>
            <param name="litLenCode">The litLen code.</param>
            <param name="distCode">The distance code.</param>
        </member>
        <member name="M:OxyPlot.Deflate.DecodeSymbol(OxyPlot.CodeTree)">
            <summary>
            Decodes the specified symbol.
            </summary>
            <param name="code">The code.</param>
            <returns>The <see cref="T:System.Int32" />.</returns>
        </member>
        <member name="M:OxyPlot.Deflate.DecodeRunLength(System.Int32)">
            <summary>
            Decodes the run length.
            </summary>
            <param name="sym">The symbol.</param>
            <returns>The <see cref="T:System.Int32" />.</returns>
        </member>
        <member name="M:OxyPlot.Deflate.DecodeDistance(System.Int32)">
            <summary>
            Decodes distance.
            </summary>
            <param name="sym">The symbol.</param>
            <returns>The <see cref="T:System.Int32" />.</returns>
        </member>
        <member name="M:OxyPlot.Deflate.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:OxyPlot.Deflate.ReadInt(System.Int32)">
            <summary>
            Reads the specified number of bits.
            </summary>
            <param name="numBits">The number of bits to read.</param>
            <returns>The <see cref="T:System.Int32" />.</returns>
        </member>
        <member name="T:OxyPlot.InternalNode">
            <summary>
            Represents an internal node.
            </summary>
        </member>
        <member name="M:OxyPlot.InternalNode.#ctor(OxyPlot.Node,OxyPlot.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.InternalNode" /> class.
            </summary>
            <param name="leftChild">The left child.</param>
            <param name="rightChild">The right child.</param>
        </member>
        <member name="P:OxyPlot.InternalNode.LeftChild">
            <summary>
            Gets the left child.
            </summary>
        </member>
        <member name="P:OxyPlot.InternalNode.RightChild">
            <summary>
            Gets the right child.
            </summary>
        </member>
        <member name="T:OxyPlot.Leaf">
            <summary>
            Represents a leaf.
            </summary>
        </member>
        <member name="M:OxyPlot.Leaf.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Leaf" /> class.
            </summary>
            <param name="symbol">The symbol.</param>
            <exception cref="T:System.ArgumentException">Illegal symbol value;symbol</exception>
        </member>
        <member name="P:OxyPlot.Leaf.Symbol">
            <summary>
            Gets the symbol.
            </summary>
            <value>The symbol.</value>
        </member>
        <member name="T:OxyPlot.Node">
            <summary>
            Defines the node abstract class.
            </summary>
            <remarks>Package-private (internal) to prevent accidental sub-classing outside of this package</remarks>
        </member>
        <member name="T:OxyPlot.IImageDecoder">
            <summary>
            Specifies functionality to decode an image.
            </summary>
        </member>
        <member name="M:OxyPlot.IImageDecoder.GetImageInfo(System.Byte[])">
            <summary>
            Gets information about the image in the specified byte array.
            </summary>
            <param name="bytes">The image data.</param>
            <returns>An <see cref="T:OxyPlot.OxyImageInfo" /> structure.</returns>
        </member>
        <member name="M:OxyPlot.IImageDecoder.Decode(System.Byte[])">
            <summary>
            Decodes an image from the specified byte array.
            </summary>
            <param name="bytes">The image data.</param>
            <returns>The 32-bit pixel data. The indexing is [x,y] where [0,0] is top-left.</returns>
        </member>
        <member name="T:OxyPlot.IImageEncoder">
            <summary>
            Specifies functionality to encode an image.
            </summary>
        </member>
        <member name="M:OxyPlot.IImageEncoder.Encode(OxyPlot.OxyColor[0:,0:])">
            <summary>
            Encodes the specified pixels.
            </summary>
            <param name="pixels">The pixel data. The indexing is [x,y] where [0,0] is top-left.</param>
            <returns>The image data.</returns>
        </member>
        <member name="M:OxyPlot.IImageEncoder.Encode(System.Byte[0:,0:],OxyPlot.OxyColor[])">
            <summary>
            Encodes the specified 8-bit indexed pixels.
            </summary>
            <param name="pixels">The indexed pixel data. The indexing is [x,y] where [0,0] is top-left.</param>
            <param name="palette">The palette.</param>
            <returns>The image data.</returns>
        </member>
        <member name="T:OxyPlot.ImageEncoderOptions">
            <summary>
            Provides an abstract base class for image encoder options.
            </summary>
        </member>
        <member name="M:OxyPlot.ImageEncoderOptions.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.ImageEncoderOptions" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.ImageEncoderOptions.DpiX">
            <summary>
            Gets or sets the horizontal resolution (in dots per inch).
            </summary>
            <value>The resolution. The default value is 96 dpi.</value>
        </member>
        <member name="P:OxyPlot.ImageEncoderOptions.DpiY">
            <summary>
            Gets or sets the vertical resolution (in dots per inch).
            </summary>
            <value>The resolution. The default value is 96 dpi.</value>
        </member>
        <member name="T:OxyPlot.ImageFormat">
            <summary>
            Defines the image format.
            </summary>
        </member>
        <member name="F:OxyPlot.ImageFormat.Png">
            <summary>
            The image is a PNG image.
            </summary>
        </member>
        <member name="F:OxyPlot.ImageFormat.Bmp">
            <summary>
            The image is a bitmap image.
            </summary>
        </member>
        <member name="F:OxyPlot.ImageFormat.Jpeg">
            <summary>
            The image is a JPEG image.
            </summary>
        </member>
        <member name="F:OxyPlot.ImageFormat.Unknown">
            <summary>
            The image format is unknown.
            </summary>
        </member>
        <member name="T:OxyPlot.JpegDecoder">
            <summary>
            Implements support for decoding jpeg images.
            </summary>
        </member>
        <member name="T:OxyPlot.JpegDecoder.ExifTags">
            <summary>
            Defines the EXIF tags.
            </summary>
        </member>
        <member name="M:OxyPlot.JpegDecoder.GetImageInfo(System.Byte[])">
            <summary>
            Gets information about the image in the specified byte array.
            </summary>
            <param name="bytes">The image data.</param>
            <returns>An <see cref="T:OxyPlot.OxyImageInfo" /> structure.</returns>
            <exception cref="T:System.FormatException">Invalid SOI
            or
            Invalid APP0 marker
            or
            Invalid marker
            or
            Invalid Exif identifier
            or
            Invalid TIFF identifier</exception>
        </member>
        <member name="M:OxyPlot.JpegDecoder.Decode(System.Byte[])">
            <summary>
            Decodes an image from the specified stream.
            </summary>
            <param name="bytes">The data to decode.</param>
            <returns>The 32-bit pixel data.</returns>
        </member>
        <member name="T:OxyPlot.OxyImage">
            <summary>
            Represents an image.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyImage.data">
            <summary>
            The image data.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyImage.pixels">
            <summary>
            The pixels
            </summary>
        </member>
        <member name="M:OxyPlot.OxyImage.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyImage" /> class from the specified stream.
            </summary>
            <param name="s">A stream that provides the image data.</param>
        </member>
        <member name="M:OxyPlot.OxyImage.#ctor(System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyImage" /> class from a byte array.
            </summary>
            <param name="bytes">The image bytes.</param>
        </member>
        <member name="P:OxyPlot.OxyImage.Format">
            <summary>
            Gets the image format.
            </summary>
            <value>The format.</value>
        </member>
        <member name="P:OxyPlot.OxyImage.Width">
            <summary>
            Gets the width of the image.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:OxyPlot.OxyImage.Height">
            <summary>
            Gets the height of the image.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:OxyPlot.OxyImage.BitsPerPixel">
            <summary>
            Gets the number of bits per pixel.
            </summary>
            <value>The bits per pixel.</value>
        </member>
        <member name="P:OxyPlot.OxyImage.DpiX">
            <summary>
            Gets the horizontal resolution of the image.
            </summary>
            <value>The resolution in dots per inch (dpi).</value>
        </member>
        <member name="P:OxyPlot.OxyImage.DpiY">
            <summary>
            Gets the vertical resolution of the image.
            </summary>
            <value>The resolution in dots per inch (dpi).</value>
        </member>
        <member name="M:OxyPlot.OxyImage.Create(System.Byte[0:,0:],OxyPlot.OxyColor[],OxyPlot.ImageFormat,OxyPlot.ImageEncoderOptions)">
            <summary>
            Creates an image from 8-bit indexed pixels.
            </summary>
            <param name="pixels">The pixels indexed as [x,y]. [0,0] is top-left.</param>
            <param name="palette">The palette.</param>
            <param name="format">The image format.</param>
            <param name="encoderOptions">The encoder options.</param>
            <returns>An <see cref="T:OxyPlot.OxyImage" /></returns>
        </member>
        <member name="M:OxyPlot.OxyImage.Create(OxyPlot.OxyColor[0:,0:],OxyPlot.ImageFormat,OxyPlot.ImageEncoderOptions)">
            <summary>
            Creates an image from 32-bit <c>true</c>-color pixels.
            </summary>
            <param name="pixels">The pixels indexed as [x,y]. [0,0] is top-left.</param>
            <param name="format">The image format.</param>
            <param name="encoderOptions">The encoder options.</param>
            <returns>An <see cref="T:OxyPlot.OxyImage" /></returns>
        </member>
        <member name="M:OxyPlot.OxyImage.GetData">
            <summary>
            Gets the image data.
            </summary>
            <returns>The image data as a byte array.</returns>
        </member>
        <member name="M:OxyPlot.OxyImage.GetPixels">
            <summary>
            Gets the pixels of the image.
            </summary>
            <returns>The pixels in an array [width,height]. [0,0] is top-left.</returns>
        </member>
        <member name="M:OxyPlot.OxyImage.GetDecoder(OxyPlot.ImageFormat)">
            <summary>
            Gets the <see cref="T:OxyPlot.IImageDecoder" /> for the specified format.
            </summary>
            <param name="format">The image format.</param>
            <returns>The <see cref="T:OxyPlot.IImageDecoder" />.</returns>
        </member>
        <member name="M:OxyPlot.OxyImage.GetEncoder(OxyPlot.ImageFormat,OxyPlot.ImageEncoderOptions)">
            <summary>
            Gets the <see cref="T:OxyPlot.IImageEncoder" /> for the specified format.
            </summary>
            <param name="format">The image format.</param>
            <param name="encoderOptions">The image encoder options.</param>
            <returns>The <see cref="T:OxyPlot.IImageEncoder" />.</returns>
        </member>
        <member name="M:OxyPlot.OxyImage.GetImageFormat(System.Byte[])">
            <summary>
            Gets the image format.
            </summary>
            <param name="bytes">The image bytes.</param>
            <returns>The <see cref="T:OxyPlot.ImageFormat" /></returns>
        </member>
        <member name="M:OxyPlot.OxyImage.GetBytes(System.IO.Stream)">
            <summary>
            Gets the byte array from the specified stream.
            </summary>
            <param name="s">The stream.</param>
            <returns>A byte array.</returns>
        </member>
        <member name="M:OxyPlot.OxyImage.UpdateImageInfo">
            <summary>
            Updates the image information.
            </summary>
        </member>
        <member name="T:OxyPlot.OxyImageInfo">
            <summary>
            Provides information about an <see cref="T:OxyPlot.OxyImage" />.
            </summary>
        </member>
        <member name="P:OxyPlot.OxyImageInfo.Width">
            <summary>
            Gets or sets the width in pixels.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:OxyPlot.OxyImageInfo.Height">
            <summary>
            Gets or sets the height in pixels.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:OxyPlot.OxyImageInfo.BitsPerPixel">
            <summary>
            Gets or sets the bits per pixel.
            </summary>
            <value>The bits per pixel.</value>
        </member>
        <member name="P:OxyPlot.OxyImageInfo.DpiX">
            <summary>
            Gets or sets the horizontal resolution of the image.
            </summary>
            <value>The resolution in dots per inch (dpi).</value>
        </member>
        <member name="P:OxyPlot.OxyImageInfo.DpiY">
            <summary>
            Gets or sets the vertical resolution of the image.
            </summary>
            <value>The resolution in dots per inch (dpi).</value>
        </member>
        <member name="T:OxyPlot.PngDecoder">
            <summary>
            Implements support for decoding png images.
            </summary>
        </member>
        <member name="M:OxyPlot.PngDecoder.GetImageInfo(System.Byte[])">
            <summary>
            Gets information about the image in the specified byte array.
            </summary>
            <param name="bytes">The image data.</param>
            <returns>An <see cref="T:OxyPlot.OxyImageInfo" /> structure.</returns>
            <exception cref="T:System.FormatException">Wrong length of pHYs chunk.</exception>
        </member>
        <member name="M:OxyPlot.PngDecoder.Decode(System.Byte[])">
            <summary>
            Decodes an image from the specified byte array.
            </summary>
            <param name="bytes">The image data.</param>
            <returns>The 32-bit pixel data, indexed as [x,y].</returns>
        </member>
        <member name="M:OxyPlot.PngDecoder.Deflate(System.Byte[])">
            <summary>
            Deflates the specified bytes.
            </summary>
            <param name="bytes">The bytes.</param>
            <returns>The deflated bytes.</returns>
        </member>
        <member name="T:OxyPlot.ColorType">
            <summary>
            Defines the color type
            </summary>
        </member>
        <member name="F:OxyPlot.ColorType.GrayScale">
            <summary>
            Gray scale
            </summary>
        </member>
        <member name="F:OxyPlot.ColorType.TrueColor">
            <summary>
            True color
            </summary>
        </member>
        <member name="F:OxyPlot.ColorType.IndexedColor">
            <summary>
            Indexed color
            </summary>
        </member>
        <member name="F:OxyPlot.ColorType.GrayScaleWithAlpha">
            <summary>
            Gray scale with alpha
            </summary>
        </member>
        <member name="F:OxyPlot.ColorType.TrueColorWithAlpha">
            <summary>
            True color with alpha
            </summary>
        </member>
        <member name="T:OxyPlot.CompressionMethod">
            <summary>
            Defines the compression method.
            </summary>
        </member>
        <member name="F:OxyPlot.CompressionMethod.Deflate">
            <summary>
            DEFLATE compression
            </summary>
        </member>
        <member name="T:OxyPlot.FilterMethod">
            <summary>
            Defines the filter method.
            </summary>
        </member>
        <member name="F:OxyPlot.FilterMethod.None">
            <summary>
            No filter.
            </summary>
        </member>
        <member name="F:OxyPlot.FilterMethod.Sub">
            <summary>
            Sub filter
            </summary>
        </member>
        <member name="F:OxyPlot.FilterMethod.Up">
            <summary>
            Up filter
            </summary>
        </member>
        <member name="F:OxyPlot.FilterMethod.Avg">
            <summary>
            Average filter
            </summary>
        </member>
        <member name="F:OxyPlot.FilterMethod.Paeth">
            <summary>
            Paeth filter
            </summary>
        </member>
        <member name="T:OxyPlot.InterlaceMethod">
            <summary>
            Defines interlace methods (chapter 8.2)
            </summary>
        </member>
        <member name="F:OxyPlot.InterlaceMethod.None">
            <summary>
            The <c>null</c> method, pixels are extracted sequentially from left to right, and scan lines sequentially from top to bottom.
            </summary>
        </member>
        <member name="F:OxyPlot.InterlaceMethod.Adam7">
            <summary>
            Adam7, defines seven distinct passes over the image. Each pass transmits a subset of the pixels in the reference image.
            The pass in which each pixel is transmitted (numbered from 1 to 7) is defined by replicating a 8-by-8 pattern over the
            entire image, starting at the upper left corner.
            </summary>
        </member>
        <member name="T:OxyPlot.PngEncoder">
            <summary>
            Implements support for encoding png images.
            </summary>
        </member>
        <member name="F:OxyPlot.PngEncoder.CrcTable">
            <summary>
            The CRC table
            </summary>
        </member>
        <member name="F:OxyPlot.PngEncoder.options">
            <summary>
            The options
            </summary>
        </member>
        <member name="M:OxyPlot.PngEncoder.#cctor">
            <summary>
            Initializes static members of the <see cref="T:OxyPlot.PngEncoder" /> class.
            </summary>
        </member>
        <member name="M:OxyPlot.PngEncoder.#ctor(OxyPlot.PngEncoderOptions)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.PngEncoder" /> class.
            </summary>
            <param name="options">The options.</param>
        </member>
        <member name="M:OxyPlot.PngEncoder.Encode(OxyPlot.OxyColor[0:,0:])">
            <summary>
            Encodes the specified image data to png.
            </summary>
            <param name="pixels">The pixel data indexed as [x,y] (bottom line first).</param>
            <returns>The png image data.</returns>
        </member>
        <member name="M:OxyPlot.PngEncoder.Encode(System.Byte[0:,0:],OxyPlot.OxyColor[])">
            <summary>
            Encodes the specified 8-bit indexed pixels.
            </summary>
            <param name="pixels">The pixels.</param>
            <param name="palette">The palette.</param>
            <returns>The image data.</returns>
        </member>
        <member name="M:OxyPlot.PngEncoder.Adler32(System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Calculates the Adler-32 check sum.
            </summary>
            <param name="data">The data.</param>
            <returns>The check sum.</returns>
        </member>
        <member name="M:OxyPlot.PngEncoder.CreateHeaderData(System.Int32,System.Int32)">
            <summary>
            Creates the header data.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <returns>The header.</returns>
        </member>
        <member name="M:OxyPlot.PngEncoder.CreatePhysicalDimensionsData(System.Double,System.Double)">
            <summary>
            Creates the physical dimensions data.
            </summary>
            <param name="dpix">The horizontal resolution.</param>
            <param name="dpiy">The vertical resolution.</param>
            <returns>The data.</returns>
        </member>
        <member name="M:OxyPlot.PngEncoder.CreateUncompressedBlocks(System.Byte[])">
            <summary>
            Creates the uncompressed blocks.
            </summary>
            <param name="bytes">The data.</param>
            <returns>The output data.</returns>
        </member>
        <member name="M:OxyPlot.PngEncoder.UpdateCrc(System.UInt64,System.Collections.Generic.IEnumerable{System.Byte})">
            <summary>
            Updates the CRC check sum.
            </summary>
            <param name="crc">The input CRC.</param>
            <param name="data">The data.</param>
            <returns>The updated CRC.</returns>
        </member>
        <member name="M:OxyPlot.PngEncoder.WriteBigEndian(System.IO.BinaryWriter,System.Int32)">
            <summary>
            Writes the integer value with big endian byte order.
            </summary>
            <param name="w">The writer.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:OxyPlot.PngEncoder.WriteBigEndian(System.IO.BinaryWriter,System.UInt32)">
            <summary>
            Writes the unsigned integer value with big endian byte order.
            </summary>
            <param name="w">The writer.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:OxyPlot.PngEncoder.WriteChunk(System.IO.BinaryWriter,System.String,System.Byte[])">
            <summary>
            Writes a png chunk.
            </summary>
            <param name="w">The writer.</param>
            <param name="type">The chunk type.</param>
            <param name="data">The chunk data.</param>
        </member>
        <member name="T:OxyPlot.PngEncoder.MemoryWriter">
            <summary>
            Provides a binary writer that writes to memory.
            </summary>
        </member>
        <member name="M:OxyPlot.PngEncoder.MemoryWriter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.PngEncoder.MemoryWriter" /> class.
            </summary>
        </member>
        <member name="M:OxyPlot.PngEncoder.MemoryWriter.ToArray">
            <summary>
            Gets the content as a byte array.
            </summary>
            <returns>The byte array.</returns>
        </member>
        <member name="T:OxyPlot.PngEncoderOptions">
            <summary>
            Represents options for the <see cref="T:OxyPlot.PngEncoder" />.
            </summary>
        </member>
        <member name="T:OxyPlot.OxyInputGesture">
            <summary>
            Provides an abstract base class for input device gestures.
            </summary>
            <remarks>The input gesture can be bound to a command in a <see cref="T:OxyPlot.PlotController" />.</remarks>
        </member>
        <member name="M:OxyPlot.OxyInputGesture.Equals(OxyPlot.OxyInputGesture)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OxyPlot.OxyKeyGesture">
            <summary>
            Represents a keyboard input gesture.
            </summary>
            <remarks>The input gesture can be bound to a command in a <see cref="T:OxyPlot.PlotController" />.</remarks>
        </member>
        <member name="M:OxyPlot.OxyKeyGesture.#ctor(OxyPlot.OxyKey,OxyPlot.OxyModifierKeys)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyKeyGesture" /> class.
            </summary>
            <param name="key">The key.</param>
            <param name="modifiers">The modifier keys.</param>
        </member>
        <member name="P:OxyPlot.OxyKeyGesture.Modifiers">
            <summary>
            Gets or sets the modifier keys.
            </summary>
        </member>
        <member name="P:OxyPlot.OxyKeyGesture.Key">
            <summary>
            Gets or sets the key.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyKeyGesture.Equals(OxyPlot.OxyInputGesture)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OxyPlot.OxyMouseDownGesture">
            <summary>
            Represents a mouse down input gesture.
            </summary>
            <remarks>The input gesture can be bound to a command in a <see cref="T:OxyPlot.PlotController" />.</remarks>
        </member>
        <member name="M:OxyPlot.OxyMouseDownGesture.#ctor(OxyPlot.OxyMouseButton,OxyPlot.OxyModifierKeys,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyMouseDownGesture" /> class.
            </summary>
            <param name="mouseButton">The mouse button.</param>
            <param name="modifiers">The modifiers.</param>
            <param name="clickCount">The click count.</param>
        </member>
        <member name="P:OxyPlot.OxyMouseDownGesture.Modifiers">
            <summary>
            Gets the modifier keys.
            </summary>
        </member>
        <member name="P:OxyPlot.OxyMouseDownGesture.MouseButton">
            <summary>
            Gets the mouse button.
            </summary>
        </member>
        <member name="P:OxyPlot.OxyMouseDownGesture.ClickCount">
            <summary>
            Gets the click count.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyMouseDownGesture.Equals(OxyPlot.OxyInputGesture)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OxyPlot.OxyMouseEnterGesture">
            <summary>
            Represents a mouse enter gesture.
            </summary>
            <remarks>The input gesture can be bound to a command in a <see cref="T:OxyPlot.PlotController" />.</remarks>
        </member>
        <member name="M:OxyPlot.OxyMouseEnterGesture.#ctor(OxyPlot.OxyModifierKeys)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyMouseEnterGesture" /> class.
            </summary>
            <param name="modifiers">The modifiers.</param>
        </member>
        <member name="P:OxyPlot.OxyMouseEnterGesture.Modifiers">
            <summary>
            Gets the modifier keys.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyMouseEnterGesture.Equals(OxyPlot.OxyInputGesture)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OxyPlot.OxyMouseWheelGesture">
            <summary>
            Represents a mouse wheel gesture.
            </summary>
            <remarks>The input gesture can be bound to a command in a <see cref="T:OxyPlot.PlotController" />.</remarks>
        </member>
        <member name="M:OxyPlot.OxyMouseWheelGesture.#ctor(OxyPlot.OxyModifierKeys)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyMouseWheelGesture" /> class.
            </summary>
            <param name="modifiers">The modifiers.</param>
        </member>
        <member name="P:OxyPlot.OxyMouseWheelGesture.Modifiers">
            <summary>
            Gets the modifier keys.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyMouseWheelGesture.Equals(OxyPlot.OxyInputGesture)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OxyPlot.OxyShakeGesture">
            <summary>
            Represents a shake input gesture.
            </summary>
            <remarks>The input gesture can be bound to a command in a <see cref="T:OxyPlot.PlotController" />. The shake gesture applies primarily to mobile devices.</remarks>
        </member>
        <member name="M:OxyPlot.OxyShakeGesture.Equals(OxyPlot.OxyInputGesture)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OxyPlot.OxyTouchGesture">
            <summary>
            Represents a touch input gesture.
            </summary>
            <remarks>The input gesture can be bound to a command in a <see cref="T:OxyPlot.PlotController" />.</remarks>
        </member>
        <member name="M:OxyPlot.OxyTouchGesture.Equals(OxyPlot.OxyInputGesture)">
            <summary>
            Indicates whether the current object is equal to another object of the same type.
            </summary>
            <param name="other">An object to compare with this object.</param>
            <returns><c>true</c> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OxyPlot.OxyKey">
            <summary>
            Defines the possible key values on a keyboard.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Space">
            <summary>
            The Space key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Enter">
            <summary>
            The Enter key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Escape">
            <summary>
            The Esc key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Tab">
            <summary>
            The Tab key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Backspace">
            <summary>
            The Backspace key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Insert">
            <summary>
            The Insert key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Delete">
            <summary>
            The Delete key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Home">
            <summary>
            The Home key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.End">
            <summary>
            The End key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Up">
            <summary>
            The Up arrow key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Down">
            <summary>
            The Down arrow key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Left">
            <summary>
            The Left arrow key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Right">
            <summary>
            The Right arrow key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.PageUp">
            <summary>
            The Page up key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.PageDown">
            <summary>
            The Page down key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.A">
            <summary>
            The A key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.B">
            <summary>
            The B key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.C">
            <summary>
            The C key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.D">
            <summary>
            The D key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.E">
            <summary>
            The E key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.F">
            <summary>
            The F key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.G">
            <summary>
            The G key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.H">
            <summary>
            The H key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.I">
            <summary>
            The I key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.J">
            <summary>
            The J key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.K">
            <summary>
            The K key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.L">
            <summary>
            The L key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.M">
            <summary>
            The M key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.N">
            <summary>
            The N key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.O">
            <summary>
            The O key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.P">
            <summary>
            The P key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Q">
            <summary>
            The Q key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.R">
            <summary>
            The R key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.S">
            <summary>
            The S key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.T">
            <summary>
            The T key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.U">
            <summary>
            The U key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.V">
            <summary>
            The V key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.W">
            <summary>
            The W key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.X">
            <summary>
            The X key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Y">
            <summary>
            The Y key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Z">
            <summary>
            The Z key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.D0">
            <summary>
            The 0 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.D1">
            <summary>
            The 1 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.D2">
            <summary>
            The 2 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.D3">
            <summary>
            The 3 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.D4">
            <summary>
            The 4 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.D5">
            <summary>
            The 5 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.D6">
            <summary>
            The 6 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.D7">
            <summary>
            The 7 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.D8">
            <summary>
            The 8 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.D9">
            <summary>
            The 9 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.NumPad0">
            <summary>
            The 0 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.NumPad1">
            <summary>
            The 1 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.NumPad2">
            <summary>
            The 2 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.NumPad3">
            <summary>
            The 3 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.NumPad4">
            <summary>
            The 4 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.NumPad5">
            <summary>
            The 5 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.NumPad6">
            <summary>
            The 6 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.NumPad7">
            <summary>
            The 7 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.NumPad8">
            <summary>
            The 8 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.NumPad9">
            <summary>
            The 9 key on the numeric keypad.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Add">
            <summary>
            The add key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Subtract">
            <summary>
            The subtract key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Multiply">
            <summary>
            The multiply key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Divide">
            <summary>
            The divide key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Decimal">
            <summary>
            The decimal key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.F1">
            <summary>
            The F1 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.F2">
            <summary>
            The F2 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.F3">
            <summary>
            The F3 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.F4">
            <summary>
            The F4 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.F5">
            <summary>
            The F5 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.F6">
            <summary>
            The F6 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.F7">
            <summary>
            The F7 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.F8">
            <summary>
            The F8 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.F9">
            <summary>
            The F9 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.F10">
            <summary>
            The F10 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.F11">
            <summary>
            The F11 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.F12">
            <summary>
            The F12 key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyKey.Unknown">
            <summary>
            Unknown/not supported key.
            </summary>
        </member>
        <member name="T:OxyPlot.OxyModifierKeys">
            <summary>
            Defines the set of modifier keys.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyModifierKeys.None">
            <summary>
            No modifiers are pressed.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyModifierKeys.Control">
            <summary>
            The Control key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyModifierKeys.Alt">
            <summary>
            The Alt/Menu key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyModifierKeys.Shift">
            <summary>
            The Shift key.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyModifierKeys.Windows">
            <summary>
            The Windows key.
            </summary>
        </member>
        <member name="T:OxyPlot.OxyMouseButton">
            <summary>
            Defines values that specify the buttons on a mouse device.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyMouseButton.None">
            <summary>
            No mouse button.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyMouseButton.Left">
            <summary>
            The left mouse button.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyMouseButton.Middle">
            <summary>
            The middle mouse button.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyMouseButton.Right">
            <summary>
            The right mouse button.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyMouseButton.XButton1">
            <summary>
            The first extended mouse button.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyMouseButton.XButton2">
            <summary>
            The second extended mouse button.
            </summary>
        </member>
        <member name="T:OxyPlot.Legends.Legend">
            <summary>
            Represents a Legend.
            </summary>
        </member>
        <member name="M:OxyPlot.Legends.Legend.#ctor">
            <summary>
            Initializes a new insance of the Legend class.
            </summary>
        </member>
        <member name="M:OxyPlot.Legends.Legend.LegendHitTest(OxyPlot.HitTestArguments)">
            <summary>
            Override for legend hit test.
            </summary>
            <param name="args">Arguments passe to the hit test</param>
            <returns>The hit test results.</returns>
        </member>
        <member name="P:OxyPlot.Legends.Legend.GroupNameFont">
            <summary>
            Gets or sets the group name font.
            </summary>
        </member>
        <member name="P:OxyPlot.Legends.Legend.GroupNameFontSize">
            <summary>
            Gets or sets the group name font size.
            </summary>
        </member>
        <member name="P:OxyPlot.Legends.Legend.GroupNameFontWeight">
            <summary>
            Gets or sets the group name font weight.
            </summary>
        </member>
        <member name="P:OxyPlot.Legends.Legend.SeriesInvisibleTextColor">
            <summary>
            Gets or sets the textcolor of invisible series.
            </summary>
        </member>
        <member name="M:OxyPlot.Legends.Legend.IsPointInLegend(OxyPlot.ScreenPoint)">
            <summary>
            Checks if a screen point is within the legend boundaries.
            </summary>
            <param name="point">A screen point.</param>
            <returns>A value indicating whether the point is inside legend boundaries or not.</returns>
        </member>
        <member name="M:OxyPlot.Legends.Legend.EnsureLegendProperties">
            <summary>
            Makes the LegendOrientation property safe.
            </summary>
            <remarks>If Legend is positioned left or right, force it to vertical orientation</remarks>
        </member>
        <member name="M:OxyPlot.Legends.Legend.RenderLegends(OxyPlot.IRenderContext)">
            <summary>
            Renders or measures the legends.
            </summary>
            <param name="rc">The render context.</param>
        </member>
        <member name="M:OxyPlot.Legends.Legend.GetLegendSize(OxyPlot.IRenderContext,OxyPlot.OxySize)">
            <summary>
            Measures the legend area and gets the legend size.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="availableLegendArea">The area available to legend.</param>
        </member>
        <member name="M:OxyPlot.Legends.Legend.GetLegendRectangle(OxyPlot.OxySize)">
            <summary>
            Gets the rectangle of the legend box.
            </summary>
            <param name="legendSize">Size of the legend box.</param>
            <returns>A rectangle.</returns>
        </member>
        <member name="M:OxyPlot.Legends.Legend.RenderLegend(OxyPlot.IRenderContext,OxyPlot.Series.Series,OxyPlot.OxyRect)">
            <summary>
            Renders the legend for the specified series.
            </summary>
            <param name="rc">The render context.</param>
            <param name="s">The series.</param>
            <param name="rect">The position and size of the legend.</param>
        </member>
        <member name="M:OxyPlot.Legends.Legend.MeasureLegends(OxyPlot.IRenderContext,OxyPlot.OxySize)">
            <summary>
            Measures the legends.
            </summary>
            <param name="rc">The render context.</param>
            <param name="availableSize">The available size for the legend box.</param>
            <returns>The size of the legend box.</returns>
        </member>
        <member name="M:OxyPlot.Legends.Legend.RenderOrMeasureLegends(OxyPlot.IRenderContext,OxyPlot.OxyRect,System.Boolean)">
            <summary>
            Renders or measures the legends.
            </summary>
            <param name="rc">The render context.</param>
            <param name="rect">Provides the available size if measuring, otherwise it provides the position and size of the legend.</param>
            <param name="measureOnly">Specify if the size of the legend box should be measured only (not rendered).</param>
            <returns>The size of the legend box.</returns>
        </member>
        <member name="T:OxyPlot.Legends.LegendPlacement">
            <summary>
            Specifies the placement of the legend box.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendPlacement.Inside">
            <summary>
            Place the legends inside the plot area.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendPlacement.Outside">
            <summary>
            Place the legends outside the plot area.
            </summary>
        </member>
        <member name="T:OxyPlot.Legends.LegendPosition">
            <summary>
            Specifies the position of the legend box.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendPosition.TopLeft">
            <summary>
            Place the legend box in the top-left corner.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendPosition.TopCenter">
            <summary>
            Place the legend box centered at the top.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendPosition.TopRight">
            <summary>
            Place the legend box in the top-right corner.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendPosition.BottomLeft">
            <summary>
            Place the legend box in the bottom-left corner.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendPosition.BottomCenter">
            <summary>
            Place the legend box centered at the bottom.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendPosition.BottomRight">
            <summary>
            Place the legend box in the bottom-right corner.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendPosition.LeftTop">
            <summary>
            Place the legend box in the left-top corner.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendPosition.LeftMiddle">
            <summary>
            Place the legend box centered at the left.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendPosition.LeftBottom">
            <summary>
            Place the legend box in the left-bottom corner.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendPosition.RightTop">
            <summary>
            Place the legend box in the right-top corner.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendPosition.RightMiddle">
            <summary>
            Place the legend box centered at the right.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendPosition.RightBottom">
            <summary>
            Place the legend box in the right-bottom corner.
            </summary>
        </member>
        <member name="T:OxyPlot.Legends.LegendOrientation">
            <summary>
            Specifies the orientation of the items in the legend box.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendOrientation.Horizontal">
            <summary>
            Orient the items horizontally.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendOrientation.Vertical">
            <summary>
            Orient the items vertically.
            </summary>
        </member>
        <member name="T:OxyPlot.Legends.LegendItemOrder">
            <summary>
            Specifies the item order of the legends.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendItemOrder.Normal">
            <summary>
            Render the items in the normal order.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendItemOrder.Reverse">
            <summary>
            Render the items in the reverse order.
            </summary>
        </member>
        <member name="T:OxyPlot.Legends.LegendSymbolPlacement">
            <summary>
            Specifies the placement of the legend symbols.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendSymbolPlacement.Left">
            <summary>
            Render symbols to the left of the labels.
            </summary>
        </member>
        <member name="F:OxyPlot.Legends.LegendSymbolPlacement.Right">
            <summary>
            Render symbols to the right of the labels.
            </summary>
        </member>
        <member name="T:OxyPlot.Legends.LegendBase">
            <summary>
            The abstract Legend class.
            </summary>
        </member>
        <member name="M:OxyPlot.Legends.LegendBase.HitTestOverride(OxyPlot.HitTestArguments)">
            <summary>
            Override for legend hit test.
            </summary>
            <param name="args">Arguments passe to the hit test</param>
            <returns>The hit test results.</returns>
        </member>
        <member name="M:OxyPlot.Legends.LegendBase.LegendHitTest(OxyPlot.HitTestArguments)">
            <summary>
            Defines the legend hit test behaviour.
            </summary>
            <param name="args">The hit test arguments.</param>
            <returns>The hit test result.</returns>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.Key">
            <summary>
            Gets or sets a key to identify this legend. The default is <c>null</c>.
            </summary>
            The key is used to identify which series to show in the legends by comparing with the Series.LegendKey property.
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.IsLegendVisible">
            <summary>
            Gets or sets a value indicating whether the legend is visible. The titles of the series must be set to use the legend.
            </summary>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendOrientation">
            <summary>
            Gets or sets the legend orientation.
            </summary>
            <value>The legend orientation.</value>
            <remarks>Horizontal orientation is reverted to Vertical if Legend is positioned Left or Right of the plot.</remarks>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendPadding">
            <summary>
            Gets or sets the legend padding.
            </summary>
            <value>The legend padding.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendSymbolLength">
            <summary>
            Gets or sets the length of the legend symbols (the default value is 16).
            </summary>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendSymbolMargin">
            <summary>
            Gets or sets the legend symbol margins (distance between the symbol and the text).
            </summary>
            <value>The legend symbol margin.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendSymbolPlacement">
            <summary>
            Gets or sets the legend symbol placement.
            </summary>
            <value>The legend symbol placement.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendTitle">
            <summary>
            Gets or sets the legend title.
            </summary>
            <value>The legend title.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendTitleColor">
            <summary>
            Gets or sets the color of the legend title.
            </summary>
            <value>The color of the legend title.</value>
            <remarks>If this value is <c>null</c>, the TextColor will be used.</remarks>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendTitleFont">
            <summary>
            Gets or sets the legend title font.
            </summary>
            <value>The legend title font.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendTitleFontSize">
            <summary>
            Gets or sets the size of the legend title font.
            </summary>
            <value>The size of the legend title font.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendTitleFontWeight">
            <summary>
            Gets or sets the legend title font weight.
            </summary>
            <value>The legend title font weight.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendArea">
            <summary>
            Gets the legend area.
            </summary>
            <value>The legend area.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendSize">
            <summary>
            Gets or sets the size of the legend.
            </summary>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendBackground">
            <summary>
            Gets or sets the background color of the legend. Use <c>null</c> for no background.
            </summary>
            <value>The legend background.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendBorder">
            <summary>
            Gets or sets the border color of the legend.
            </summary>
            <value>The legend border.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendBorderThickness">
            <summary>
            Gets or sets the thickness of the legend border. Use 0 for no border.
            </summary>
            <value>The legend border thickness.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendColumnSpacing">
            <summary>
            Gets or sets the spacing between columns of legend items (only for vertical orientation).
            </summary>
            <value>The spacing in device independent units.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendFont">
            <summary>
            Gets or sets the legend font.
            </summary>
            <value>The legend font.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendFontSize">
            <summary>
            Gets or sets the size of the legend font.
            </summary>
            <value>The size of the legend font.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendTextColor">
            <summary>
            Gets or sets the color of the legend text.
            </summary>
            <value>The color of the legend text.</value>
            <remarks>If this value is <c>null</c>, the TextColor will be used.</remarks>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendFontWeight">
            <summary>
            Gets or sets the legend font weight.
            </summary>
            <value>The legend font weight.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendItemAlignment">
            <summary>
            Gets or sets the legend item alignment.
            </summary>
            <value>The legend item alignment.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendItemOrder">
            <summary>
            Gets or sets the legend item order.
            </summary>
            <value>The legend item order.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendItemSpacing">
            <summary>
            Gets or sets the horizontal spacing between legend items when the orientation is horizontal.
            </summary>
            <value>The horizontal distance between items in device independent units.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendLineSpacing">
            <summary>
            Gets or sets the vertical spacing between legend items.
            </summary>
            <value>The spacing in device independent units.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendMargin">
            <summary>
            Gets or sets the legend margin.
            </summary>
            <value>The legend margin.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendMaxWidth">
            <summary>
            Gets or sets the max width of the legend.
            </summary>
            <value>The max width of the legend.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendMaxHeight">
            <summary>
            Gets or sets the max height of the legend.
            </summary>
            <value>The max height of the legend.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendPlacement">
            <summary>
            Gets or sets the legend placement.
            </summary>
            <value>The legend placement.</value>
        </member>
        <member name="P:OxyPlot.Legends.LegendBase.LegendPosition">
            <summary>
            Gets or sets the legend position.
            </summary>
            <value>The legend position.</value>
        </member>
        <member name="M:OxyPlot.Legends.LegendBase.EnsureLegendProperties">
            <summary>
            Makes the LegendOrientation property safe.
            </summary>
            <remarks>If Legend is positioned left or right, force it to vertical orientation</remarks>
        </member>
        <member name="M:OxyPlot.Legends.LegendBase.GetLegendSize(OxyPlot.IRenderContext,OxyPlot.OxySize)">
            <summary>
            Measures the legend area and gets the legend size.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="availableLegendArea">The area available to legend.</param>
        </member>
        <member name="M:OxyPlot.Legends.LegendBase.GetLegendRectangle(OxyPlot.OxySize)">
            <summary>
            Gets the rectangle of the legend box.
            </summary>
            <param name="legendSize">Size of the legend box.</param>
            <returns>The legend area rectangle.</returns>
        </member>
        <member name="M:OxyPlot.Legends.LegendBase.RenderLegends(OxyPlot.IRenderContext)">
            <summary>
            Renders or measures the legends.
            </summary>
            <param name="rc">The render context.</param>
        </member>
        <member name="T:OxyPlot.CompatibilityExtensions">
            <summary>
            Provides extension methods facilitating compatibility with .NET 4.0.
            </summary>
        </member>
        <member name="M:OxyPlot.CompatibilityExtensions.AsReadOnlyList``1(System.Collections.Generic.List{``0})">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> corresponding to the specified <see cref="T:System.Collections.Generic.List`1"/>.
            </summary>
            <typeparam name="T">The type of the list.</typeparam>
            <param name="list">The list.</param>
            <returns>
            On .NET4.0, this returns a wrapper around the <paramref name="list"/> which implements <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> and <see cref="T:System.Collections.Generic.IList`1"/>.
            On .NET4.5 and later, this directly returns the <paramref name="list"/>.
            </returns>
        </member>
        <member name="M:OxyPlot.CompatibilityExtensions.AsReadOnlyList``1(``0[])">
            <summary>
            Returns a <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> corresponding to the specified array.
            </summary>
            <typeparam name="T">The type of the array.</typeparam>
            <param name="array">The array.</param>
            <returns>
            On .NET4.0, this returns a wrapper around the <paramref name="array"/> which implements <see cref="T:System.Collections.Generic.IReadOnlyList`1"/> and <see cref="T:System.Collections.Generic.IList`1"/>.
            On .NET4.5 and later, this directly returns the <paramref name="array"/>.
            </returns>
        </member>
        <member name="T:OxyPlot.PageSize">
            <summary>
            Defines the page size.
            </summary>
        </member>
        <member name="F:OxyPlot.PageSize.A4">
            <summary>
            ISO A4 size (595pt x 842pt).
            </summary>
        </member>
        <member name="F:OxyPlot.PageSize.A3">
            <summary>
            ISO A3 size (842pt x 1190pt).
            </summary>
        </member>
        <member name="F:OxyPlot.PageSize.Letter">
            <summary>
            American letter size (612pt x 792pt).
            </summary>
        </member>
        <member name="T:OxyPlot.PageOrientation">
            <summary>
            Defines the page orientation.
            </summary>
        </member>
        <member name="F:OxyPlot.PageOrientation.Portrait">
            <summary>
            Portrait orientation (where the height is greater than the width).
            </summary>
        </member>
        <member name="F:OxyPlot.PageOrientation.Landscape">
            <summary>
            Landscape orientation (where the width is greater than the height).
            </summary>
        </member>
        <member name="T:OxyPlot.LineCap">
            <summary>
            Defines the line cap type.
            </summary>
        </member>
        <member name="F:OxyPlot.LineCap.Butt">
            <summary>
            Butt cap. The stroke is squared off at the endpoint of the path. There is no projection beyond the end of the path.
            </summary>
        </member>
        <member name="F:OxyPlot.LineCap.Round">
            <summary>
            Round cap. A semicircular arc with a diameter equal to the line width is drawn around the endpoint and filled in.
            </summary>
        </member>
        <member name="F:OxyPlot.LineCap.ProjectingSquare">
            <summary>
            Projecting square cap. The stroke continues beyond the endpoint of the path for a distance equal to half the line width and is squared off.
            </summary>
        </member>
        <member name="T:OxyPlot.ColorSpace">
            <summary>
            Defines the color space.
            </summary>
        </member>
        <member name="F:OxyPlot.ColorSpace.DeviceRGB">
            <summary>
            The colors are defined by intensities of red, green and blue light, the three additive primary colors used in displays.
            </summary>
        </member>
        <member name="T:OxyPlot.FontEncoding">
            <summary>
            Defines the font encoding.
            </summary>
        </member>
        <member name="F:OxyPlot.FontEncoding.WinAnsiEncoding">
            <summary>
            Windows Code Page 1252, often called the “Windows ANSI” encoding. This is the standard Windows encoding for Latin text in
            Western writing systems. PDF has a predefined encoding named WinAnsiEncoding that can be used with both Type 1 and TrueType fonts.
            </summary>
        </member>
        <member name="T:OxyPlot.FontSubType">
            <summary>
            Defines the font subtype
            </summary>
        </member>
        <member name="F:OxyPlot.FontSubType.Type1">
            <summary>
            Adobe type 1 font.
            </summary>
        </member>
        <member name="F:OxyPlot.FontSubType.TrueType">
            <summary>
            TrueType font.
            </summary>
        </member>
        <member name="T:OxyPlot.PdfExporter">
            <summary>
            Provides functionality to export plots to pdf.
            </summary>
        </member>
        <member name="P:OxyPlot.PdfExporter.Width">
            <summary>
            Gets or sets the width (in points, 1/72 inch) of the output document.
            </summary>
        </member>
        <member name="P:OxyPlot.PdfExporter.Height">
            <summary>
            Gets or sets the height (in points, 1/72 inch) of the output document.
            </summary>
        </member>
        <member name="M:OxyPlot.PdfExporter.Export(OxyPlot.IPlotModel,System.IO.Stream,System.Double,System.Double)">
            <summary>
            Exports the specified model to a stream.
            </summary>
            <param name="model">The model.</param>
            <param name="stream">The output stream.</param>
            <param name="width">The width (points).</param>
            <param name="height">The height (points).</param>
        </member>
        <member name="M:OxyPlot.PdfExporter.Export(OxyPlot.IPlotModel,System.IO.Stream)">
            <summary>
            Exports the specified <see cref="T:OxyPlot.PlotModel" /> to the specified <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="model">The model.</param>
            <param name="stream">The stream.</param>
        </member>
        <member name="T:OxyPlot.PdfRenderContext">
            <summary>
            Implements an <see cref="T:OxyPlot.IRenderContext" /> producing PDF documents by <see cref="T:OxyPlot.PortableDocument" />.
            </summary>
        </member>
        <member name="F:OxyPlot.PdfRenderContext.doc">
            <summary>
            The current document.
            </summary>
        </member>
        <member name="F:OxyPlot.PdfRenderContext.images">
            <summary>
            The image cache.
            </summary>
        </member>
        <member name="M:OxyPlot.PdfRenderContext.#ctor(System.Double,System.Double,OxyPlot.OxyColor)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.PdfRenderContext" /> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="background">The background.</param>
        </member>
        <member name="M:OxyPlot.PdfRenderContext.Save(System.IO.Stream)">
            <summary>
            Saves the output to the specified stream.
            </summary>
            <param name="s">The stream.</param>
        </member>
        <member name="M:OxyPlot.PdfRenderContext.DrawEllipse(OxyPlot.OxyRect,OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="rect">The rectangle.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The thickness.</param>
            <param name="edgeRenderingMode">The edge rendering mode. This is not supported and will be ignored.</param>
        </member>
        <member name="M:OxyPlot.PdfRenderContext.DrawLine(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Double[],OxyPlot.LineJoin)">
            <summary>
            Draws a polyline.
            </summary>
            <param name="points">The points.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness.</param>
            <param name="edgeRenderingMode">The edge rendering mode. This is not supported and will be ignored.</param>
            <param name="dashArray">The dash array.</param>
            <param name="lineJoin">The line join type.</param>
        </member>
        <member name="M:OxyPlot.PdfRenderContext.DrawPolygon(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Double[],OxyPlot.LineJoin)">
            <summary>
            Draws a polygon. The polygon can have stroke and/or fill.
            </summary>
            <param name="points">The points.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness.</param>
            <param name="edgeRenderingMode">The edge rendering mode. This is not supported and will be ignored.</param>
            <param name="dashArray">The dash array.</param>
            <param name="lineJoin">The line join type.</param>
        </member>
        <member name="M:OxyPlot.PdfRenderContext.DrawRectangle(OxyPlot.OxyRect,OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="rect">The rectangle.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness.</param>
            <param name="edgeRenderingMode">The edge rendering mode. This is not supported and will be ignored.</param>
        </member>
        <member name="M:OxyPlot.PdfRenderContext.DrawText(OxyPlot.ScreenPoint,System.String,OxyPlot.OxyColor,System.String,System.Double,System.Double,System.Double,OxyPlot.HorizontalAlignment,OxyPlot.VerticalAlignment,System.Nullable{OxyPlot.OxySize})">
            <summary>
            Draws the text.
            </summary>
            <param name="p">The position of the text.</param>
            <param name="text">The text.</param>
            <param name="fill">The fill color.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="rotate">The rotation angle.</param>
            <param name="halign">The horizontal alignment.</param>
            <param name="valign">The vertical alignment.</param>
            <param name="maxSize">The maximum size of the text.</param>
        </member>
        <member name="M:OxyPlot.PdfRenderContext.MeasureText(System.String,System.String,System.Double,System.Double)">
            <summary>
            Measures the text.
            </summary>
            <param name="text">The text.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontWeight">The font weight.</param>
            <returns>The text size.</returns>
        </member>
        <member name="M:OxyPlot.PdfRenderContext.DrawImage(OxyPlot.OxyImage,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Draws the specified portion of the specified <see cref="T:OxyPlot.OxyImage" /> at the specified location and with the specified size.
            </summary>
            <param name="source">The source.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="destX">The x-coordinate of the upper-left corner of drawn image.</param>
            <param name="destY">The y-coordinate of the upper-left corner of drawn image.</param>
            <param name="destWidth">The width of the drawn image.</param>
            <param name="destHeight">The height of the drawn image.</param>
            <param name="opacity">The opacity.</param>
            <param name="interpolate">Interpolate if set to <c>true</c>.</param>
        </member>
        <member name="M:OxyPlot.PdfRenderContext.SetClip(OxyPlot.OxyRect)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.PdfRenderContext.ResetClip">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.PdfRenderContext.Convert(OxyPlot.LineJoin)">
            <summary>
            Converts the specified <see cref="T:OxyPlot.LineJoin" /> to a <see cref="T:OxyPlot.LineJoin" />.
            </summary>
            <param name="lineJoin">The value to convert.</param>
            <returns>The converted value.</returns>
        </member>
        <member name="M:OxyPlot.PdfRenderContext.SetLineWidth(System.Double)">
            <summary>
            Sets the width of the line.
            </summary>
            <param name="thickness">The thickness (in 1/96 inch units).</param>
        </member>
        <member name="M:OxyPlot.PdfRenderContext.SetLineDashPattern(System.Double[],System.Double)">
            <summary>
            Sets the line dash pattern.
            </summary>
            <param name="dashArray">The dash array (in 1/96 inch units).</param>
            <param name="dashPhase">The dash phase (in 1/96 inch units).</param>
        </member>
        <member name="T:OxyPlot.PdfWriter">
            <summary>
            Provides a low-level PDF writer.
            </summary>
        </member>
        <member name="F:OxyPlot.PdfWriter.w">
            <summary>
            The output writer.
            </summary>
        </member>
        <member name="M:OxyPlot.PdfWriter.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.PdfWriter" /> class.
            </summary>
            <param name="s">The s.</param>
        </member>
        <member name="T:OxyPlot.PdfWriter.ObjectType">
            <summary>
            Specifies the object type.
            </summary>
        </member>
        <member name="F:OxyPlot.PdfWriter.ObjectType.Catalog">
            <summary>
            The Catalog type.
            </summary>
        </member>
        <member name="F:OxyPlot.PdfWriter.ObjectType.Pages">
            <summary>
            The Pages type.
            </summary>
        </member>
        <member name="F:OxyPlot.PdfWriter.ObjectType.Page">
            <summary>
            The Page type.
            </summary>
        </member>
        <member name="F:OxyPlot.PdfWriter.ObjectType.Font">
            <summary>
            The Font type.
            </summary>
        </member>
        <member name="F:OxyPlot.PdfWriter.ObjectType.XObject">
            <summary>
            The XObject type.
            </summary>
        </member>
        <member name="F:OxyPlot.PdfWriter.ObjectType.ExtGState">
            <summary>
            The ExtGState type.
            </summary>
        </member>
        <member name="F:OxyPlot.PdfWriter.ObjectType.FontDescriptor">
            <summary>
            The FontDescriptor type.
            </summary>
        </member>
        <member name="T:OxyPlot.PdfWriter.IPortableDocumentObject">
            <summary>
            Specifies a document object.
            </summary>
        </member>
        <member name="P:OxyPlot.PdfWriter.IPortableDocumentObject.ObjectNumber">
            <summary>
            Gets the object number.
            </summary>
        </member>
        <member name="P:OxyPlot.PdfWriter.Position">
            <summary>
            Gets the position in the stream.
            </summary>
        </member>
        <member name="M:OxyPlot.PdfWriter.Write(System.String,System.Object[])">
            <summary>
            Writes a formatted string.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:OxyPlot.PdfWriter.WriteLine(System.String,System.Object[])">
            <summary>
            Writes a formatted line.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:OxyPlot.PdfWriter.Write(System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            Writes a dictionary.
            </summary>
            <param name="dictionary">The dictionary.</param>
        </member>
        <member name="M:OxyPlot.PdfWriter.Write(System.Byte[])">
            <summary>
            Writes a byte array.
            </summary>
            <param name="bytes">The byte array.</param>
        </member>
        <member name="M:OxyPlot.PdfWriter.WriteLine">
            <summary>
            Writes an empty line.
            </summary>
        </member>
        <member name="M:OxyPlot.PdfWriter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:OxyPlot.PdfWriter.WriteCore(System.Object)">
            <summary>
            Writes an object.
            </summary>
            <param name="o">The object to write.</param>
        </member>
        <member name="M:OxyPlot.PdfWriter.WriteList(System.Collections.IList)">
            <summary>
            Writes a list.
            </summary>
            <param name="list">The list.</param>
        </member>
        <member name="T:OxyPlot.PortableDocument">
            <summary>
            Represents a document that can be output to PDF.
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.objects">
            <summary>
            The objects.
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.strokeAlphaCache">
            <summary>
            The stroke alpha cache.
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.fillAlphaCache">
            <summary>
            The fill alpha cache.
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.fontCache">
            <summary>
            The font cache.
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.imageCache">
            <summary>
            The image cache.
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.catalog">
            <summary>
            The catalog object.
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.pages">
            <summary>
            The pages object.
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.metadata">
            <summary>
            The metadata object.
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.resources">
            <summary>
            The resources object.
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.fonts">
            <summary>
            The fonts dictionary.
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.xobjects">
            <summary>
            The x objects dictionary.
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.extgstate">
            <summary>
            The ext g state dictionary.
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.pageReferences">
            <summary>
            The page reference objects.
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.currentPageContents">
            <summary>
            The current page contents
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.currentFont">
            <summary>
            The current font
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.currentFontSize">
            <summary>
            The current font size
            </summary>
        </member>
        <member name="M:OxyPlot.PortableDocument.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.PortableDocument" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocument.PageWidth">
            <summary>
            Gets the width of the current page.
            </summary>
            <value>The width measured in points (1/72 inch).</value>
        </member>
        <member name="P:OxyPlot.PortableDocument.PageHeight">
            <summary>
            Gets the height of the current page.
            </summary>
            <value>The height measured in points (1/72 inch).</value>
        </member>
        <member name="P:OxyPlot.PortableDocument.Title">
            <summary>
            Sets the title property.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocument.Author">
            <summary>
            Sets the author property.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocument.Subject">
            <summary>
            Sets the subject property.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocument.Keywords">
            <summary>
            Sets the keywords property.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocument.Creator">
            <summary>
            Sets the creator property.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocument.Producer">
            <summary>
            Sets the producer property.
            </summary>
        </member>
        <member name="M:OxyPlot.PortableDocument.SetLineWidth(System.Double)">
            <summary>
            Sets the current line width.
            </summary>
            <param name="w">The line width in points.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.SetLineCap(OxyPlot.LineCap)">
            <summary>
            Sets the line cap type.
            </summary>
            <param name="cap">The cap type.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.SetLineJoin(OxyPlot.LineJoin)">
            <summary>
            Sets the line join type.
            </summary>
            <param name="lineJoin">The line join.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.SetMiterLimit(System.Double)">
            <summary>
            Sets the miter limit.
            </summary>
            <param name="ml">The limit.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.SetLineDashPattern(System.Double[],System.Double)">
            <summary>
            Sets the line dash pattern.
            </summary>
            <param name="dashArray">The dash array specifies the lengths of alternating dashes and gaps; the numbers must be nonnegative and not all zero.</param>
            <param name="dashPhase">The dash phase specifies the distance into dash pattern at which to start the dash.</param>
            <remarks>Before beginning to stroke a path, the dash array is cycled through, adding up the lengths of
            dashes and gaps. When the accumulated length equals the value specified by the dash phase, stroking
            of the path begins, and the dash array is used cyclically from that point onward.
            Table 4.6 shows examples of line dash patterns. As can be seen from the table, an empty dash array
            and zero phase can be used to restore the dash pattern to a solid line.</remarks>
        </member>
        <member name="M:OxyPlot.PortableDocument.ResetLineDashPattern">
            <summary>
            Resets the line dash pattern.
            </summary>
        </member>
        <member name="M:OxyPlot.PortableDocument.MoveTo(System.Double,System.Double)">
            <summary>
            Moves to the specified coordinate.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <remarks>Begin a new subpath by moving the current point to coordinates (x, y), omitting any connecting line segment.
            If the previous path construction operator in the current path was also m, the new m overrides it;
            no vestige of the previous m operation remains in the path.</remarks>
        </member>
        <member name="M:OxyPlot.PortableDocument.LineTo(System.Double,System.Double)">
            <summary>
            Appends a straight line segment to the current path.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <remarks>Append a straight line segment from the current point to the point (x, y). The new current point is (x, y).</remarks>
        </member>
        <member name="M:OxyPlot.PortableDocument.AppendCubicBezier(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Appends a cubic Bézier curve to the current path.
            </summary>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="x2">The x2.</param>
            <param name="y2">The y2.</param>
            <param name="x3">The x3.</param>
            <param name="y3">The y3.</param>
            <remarks>The curve extends from the current point to the point (x3 , y3 ), using (x1 , y1 ) and (x2 , y2 )
            as the Bézier control points (see “Cubic Bézier Curves,” below). The new current point is (x3 , y3 ).</remarks>
        </member>
        <member name="M:OxyPlot.PortableDocument.SaveState">
            <summary>
            Saves the current graphics state.
            </summary>
        </member>
        <member name="M:OxyPlot.PortableDocument.RestoreState">
            <summary>
            Restores the graphics state.
            </summary>
        </member>
        <member name="M:OxyPlot.PortableDocument.Translate(System.Double,System.Double)">
            <summary>
            Translates the current transformation matrix.
            </summary>
            <param name="x">The x-translation.</param>
            <param name="y">The y-translation.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.Scale(System.Double,System.Double)">
            <summary>
            Scales the current transformation matrix.
            </summary>
            <param name="sx">The x-scale.</param>
            <param name="sy">The y-scale.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.Transform(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Modifies the current transformation matrix (CTM).
            </summary>
            <param name="a">The a.</param>
            <param name="b">The b.</param>
            <param name="c">The c.</param>
            <param name="d">The d.</param>
            <param name="e">The e.</param>
            <param name="f">The f.</param>
            <remarks>Modify the current transformation matrix (CTM) by concatenating the specified matrix
            (see Section 4.2.1, “Coordinate Spaces”). Although the operands specify a matrix, they
            are written as six separate numbers, not as an array.</remarks>
        </member>
        <member name="M:OxyPlot.PortableDocument.SetHorizontalTextScaling(System.Double)">
            <summary>
            Sets the vertical text scaling.
            </summary>
            <param name="scale">A number specifying the percentage of the normal height.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.RotateAt(System.Double,System.Double,System.Double)">
            <summary>
            Rotates by the specified angle around the specified point.
            </summary>
            <param name="x">The x-coordinate of the rotation centre.</param>
            <param name="y">The y-coordinate of the rotation centre.</param>
            <param name="angle">The rotation angle in degrees.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.Rotate(System.Double)">
            <summary>
            Rotates by the specified angle.
            </summary>
            <param name="angle">The rotation angle in degrees.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.SetStrokeAlpha(System.Double)">
            <summary>
            Sets the stroke alpha.
            </summary>
            <param name="alpha">The alpha value [0,1].</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.SetFillAlpha(System.Double)">
            <summary>
            Sets the fill alpha.
            </summary>
            <param name="alpha">The alpha value [0,1].</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.Stroke(System.Boolean)">
            <summary>
            Strokes the path.
            </summary>
            <param name="close">Closes the path if set to <c>true</c>.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.Fill(System.Boolean)">
            <summary>
            Fills the path.
            </summary>
            <param name="evenOddRule">Use the even-odd fill rule if set to <c>true</c>. Use the nonzero winding number rule if set to <c>false</c>.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.FillAndStroke(System.Boolean,System.Boolean)">
            <summary>
            Fills and strokes the path.
            </summary>
            <param name="close">Closes the path if set to <c>true</c>.</param>
            <param name="evenOddRule">Use the even-odd fill rule if set to <c>true</c>. Use the nonzero winding number rule if set to <c>false</c>.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.SetClippingPath(System.Boolean)">
            <summary>
            Sets the clipping path.
            </summary>
            <param name="evenOddRule">Use the even-odd fill rule if set to <c>true</c>. Use the nonzero winding number rule if set to <c>false</c>.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.EndPath">
            <summary>
            Ends the path.
            </summary>
            <remarks>End the path object without filling or stroking it. This operator is a path-painting no-op,
            used primarily for the side effect of changing the current clipping path (see Section 4.4.3, “Clipping Path Operators”).</remarks>
        </member>
        <member name="M:OxyPlot.PortableDocument.CloseSubPath">
            <summary>
            Closes the subpath.
            </summary>
            <remarks>Close the current subpath by appending a straight line segment from the current point
            to the starting point of the subpath. If the current subpath is already closed, h does nothing.
            This operator terminates the current subpath. Appending another segment to the current
            path begins a new subpath, even if the new segment begins at the endpoint reached by the h operation.</remarks>
        </member>
        <member name="M:OxyPlot.PortableDocument.AppendRectangle(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Appends a rectangle to the current path.
            </summary>
            <param name="x">The x-coordinate of the lower-left corner.</param>
            <param name="y">The y-coordinate of the lower-left corner.</param>
            <param name="w">The width.</param>
            <param name="h">The height.</param>
            <remarks>Append a rectangle to the current path as a complete subpath,
            with lower-left corner (x, y) and dimensions width and height in user space.</remarks>
        </member>
        <member name="M:OxyPlot.PortableDocument.DrawLine(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Draws a line connecting the two points specified by the coordinate pairs.
            </summary>
            <param name="x1">The x-coordinate of the first point.</param>
            <param name="y1">The y-coordinate of the first point.</param>
            <param name="x2">The x-coordinate of the second point.</param>
            <param name="y2">The y-coordinate of the second point.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.DrawRectangle(System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="x">The x-coordinate of the lower-left corner.</param>
            <param name="y">The y-coordinate of the lower-left corner.</param>
            <param name="w">The width.</param>
            <param name="h">The height.</param>
            <param name="fill">Fill the rectangle if set to <c>true</c>.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.SetClippingRectangle(System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Sets the clipping rectangle.
            </summary>
            <param name="x">The x-coordinate of the lower-left corner.</param>
            <param name="y">The y-coordinate of the lower-left corner.</param>
            <param name="w">The width.</param>
            <param name="h">The height.</param>
            <param name="evenOddRule">Use the even-odd region rule if set to <c>true</c>.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.FillRectangle(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fills a rectangle.
            </summary>
            <param name="x">The x-coordinate of the lower-left corner.</param>
            <param name="y">The y-coordinate of the lower-left corner.</param>
            <param name="w">The width.</param>
            <param name="h">The height.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.DrawCircle(System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Draws a circle.
            </summary>
            <param name="x">The x-coordinate of the center.</param>
            <param name="y">The y-coordinate of the center.</param>
            <param name="r">The radius.</param>
            <param name="fill">Fill the circle if set to <c>true</c>.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.FillCircle(System.Double,System.Double,System.Double)">
            <summary>
            Fills a circle.
            </summary>
            <param name="x">The x-coordinate of the center.</param>
            <param name="y">The y-coordinate of the center.</param>
            <param name="r">The radius.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.DrawEllipse(System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="x">The x-coordinate of the lower-left corner.</param>
            <param name="y">The y-coordinate of the lower-left corner.</param>
            <param name="w">The width.</param>
            <param name="h">The height.</param>
            <param name="fill">Fill the ellipse if set to <c>true</c>.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.FillEllipse(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Fills an ellipse.
            </summary>
            <param name="x">The x-coordinate of the lower-left corner.</param>
            <param name="y">The y-coordinate of the lower-left corner.</param>
            <param name="w">The width.</param>
            <param name="h">The height.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.AppendEllipse(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Appends an ellipse to the current path.
            </summary>
            <param name="x">The x-coordinate of the lower-left corner.</param>
            <param name="y">The y-coordinate of the lower-left corner.</param>
            <param name="w">The width.</param>
            <param name="h">The height.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.SetFont(System.String,System.Double,System.Boolean,System.Boolean)">
            <summary>
            Sets the current font.
            </summary>
            <param name="fontName">The font name.</param>
            <param name="fontSize">The font size in points.</param>
            <param name="bold">Use bold font weight if set to <c>true</c>.</param>
            <param name="italic">Use italic style if set to <c>true</c>.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.DrawText(System.Double,System.Double,System.String)">
            <summary>
            Draws the text at the specified coordinate.
            </summary>
            <param name="x">The left x-coordinate.</param>
            <param name="y">The bottom (!) y-coordinate.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.MeasureText(System.String,System.Double@,System.Double@)">
            <summary>
            Measures the size of the specified text.
            </summary>
            <param name="text">The text.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.DrawImage(OxyPlot.PortableDocumentImage)">
            <summary>
            Draws an image.
            </summary>
            <param name="image">The image to draw.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.SetColor(System.Double,System.Double,System.Double)">
            <summary>
            Sets the color in Device RGB color space.
            </summary>
            <param name="r">The red value.</param>
            <param name="g">The green value.</param>
            <param name="b">The blue value.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.SetColor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets the color in CMYK color space.
            </summary>
            <param name="c">The cyan value.</param>
            <param name="m">The magenta value.</param>
            <param name="y">The yellow value.</param>
            <param name="k">The black value.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.SetFillColor(System.Double,System.Double,System.Double)">
            <summary>
            Sets the fill color in Device RGB color space.
            </summary>
            <param name="r">The red value.</param>
            <param name="g">The green value.</param>
            <param name="b">The blue value.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.AddPage(OxyPlot.PageSize,OxyPlot.PageOrientation)">
            <summary>
            Adds a page.
            </summary>
            <param name="pageSize">The page size.</param>
            <param name="pageOrientation">The page orientation.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.AddPage(System.Double,System.Double)">
            <summary>
            Adds a page specified by width and height.
            </summary>
            <param name="width">The page width in points.</param>
            <param name="height">The page height in points.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.Save(System.IO.Stream)">
            <summary>
            Saves the document to the specified stream.
            </summary>
            <param name="s">The output stream.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.EncodeString(System.String,OxyPlot.FontEncoding)">
            <summary>
            Encodes the specified string.
            </summary>
            <param name="text">The text to encode.</param>
            <param name="encoding">The target encoding.</param>
            <returns>The encoded text</returns>
        </member>
        <member name="M:OxyPlot.PortableDocument.EscapeString(System.String)">
            <summary>
            Escapes the specified string.
            </summary>
            <param name="text">The text.</param>
            <returns>The encoded string.</returns>
        </member>
        <member name="M:OxyPlot.PortableDocument.Ascii85Encode(System.Byte[])">
            <summary>
            Encodes binary bits into a plaintext ASCII85 format string
            </summary>
            <param name="ba">binary bits to encode</param>
            <returns>ASCII85 encoded string</returns>
        </member>
        <member name="M:OxyPlot.PortableDocument.GetFont(System.String,System.Boolean,System.Boolean)">
            <summary>
            Gets the font.
            </summary>
            <param name="fontName">Name of the font.</param>
            <param name="bold">Use bold if set to <c>true</c>.</param>
            <param name="italic">Use italic if set to <c>true</c>.</param>
            <returns>The font.</returns>
        </member>
        <member name="M:OxyPlot.PortableDocument.GetCached``2(``0,System.Collections.Generic.Dictionary{``0,``1},System.Func{``1})">
            <summary>
            Gets a cached value.
            </summary>
            <typeparam name="T1">The type of the key.</typeparam>
            <typeparam name="T2">The type of the value.</typeparam>
            <param name="key">The key.</param>
            <param name="cache">The cache dictionary.</param>
            <param name="create">The create value function.</param>
            <returns>The cached or created value.</returns>
        </member>
        <member name="M:OxyPlot.PortableDocument.AddObject">
            <summary>
            Adds an object to the document.
            </summary>
            <returns>The added object.</returns>
        </member>
        <member name="M:OxyPlot.PortableDocument.AddObject(OxyPlot.PdfWriter.ObjectType)">
            <summary>
            Adds an object of the specified type.
            </summary>
            <param name="type">The object type.</param>
            <returns>The added object.</returns>
        </member>
        <member name="M:OxyPlot.PortableDocument.AddExtGState(System.String,System.Object)">
            <summary>
            Adds an ExtGState object.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <returns>The added object.</returns>
        </member>
        <member name="M:OxyPlot.PortableDocument.AddImage(OxyPlot.PortableDocumentImage)">
            <summary>
            Adds an image.
            </summary>
            <param name="image">The image.</param>
            <returns>The added object.</returns>
        </member>
        <member name="M:OxyPlot.PortableDocument.AddFont(OxyPlot.PortableDocumentFont)">
            <summary>
            Adds a font.
            </summary>
            <param name="font">The font.</param>
            <returns>The added object.</returns>
        </member>
        <member name="M:OxyPlot.PortableDocument.AppendLine(System.String,System.Object[])">
            <summary>
            Appends a line to the current page contents.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The arguments.</param>
            <exception cref="T:System.InvalidOperationException">Cannot add content before a page has been added.</exception>
        </member>
        <member name="M:OxyPlot.PortableDocument.Append(System.String,System.Object[])">
            <summary>
            Appends text to the current page contents.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The arguments.</param>
            <exception cref="T:System.InvalidOperationException">Cannot add content before a page has been added.</exception>
        </member>
        <member name="T:OxyPlot.PortableDocument.PortableDocumentObject">
            <summary>
            Represents an object in the <see cref="T:OxyPlot.PortableDocument" />.
            </summary>
            <remarks>The object contains a dictionary and text content.</remarks>
        </member>
        <member name="F:OxyPlot.PortableDocument.PortableDocumentObject.dictionary">
            <summary>
            The dictionary
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.PortableDocumentObject.objectNumber">
            <summary>
            The object number
            </summary>
        </member>
        <member name="F:OxyPlot.PortableDocument.PortableDocumentObject.contents">
            <summary>
            The contents
            </summary>
        </member>
        <member name="M:OxyPlot.PortableDocument.PortableDocumentObject.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.PortableDocument.PortableDocumentObject" /> class.
            </summary>
            <param name="objectNumber">The object number.</param>
        </member>
        <member name="P:OxyPlot.PortableDocument.PortableDocumentObject.ObjectNumber">
            <summary>
            Gets the object number.
            </summary>
            <value>The object number.</value>
        </member>
        <member name="P:OxyPlot.PortableDocument.PortableDocumentObject.Item(System.String)">
            <summary>
            Sets the dictionary value for the specified key.
            </summary>
            <value>The <see cref="T:System.Object" />.</value>
            <param name="key">The key.</param>
            <returns>The object.</returns>
        </member>
        <member name="M:OxyPlot.PortableDocument.PortableDocumentObject.Append(System.String,System.Object[])">
            <summary>
            Appends text to the content of the object.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.PortableDocumentObject.AppendLine(System.String,System.Object[])">
            <summary>
            Appends a line to the content of the object.
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:OxyPlot.PortableDocument.PortableDocumentObject.Write(OxyPlot.PdfWriter)">
            <summary>
            Writes the object to the specified <see cref="T:OxyPlot.PdfWriter" />.
            </summary>
            <param name="w">The writer.</param>
        </member>
        <member name="T:OxyPlot.PortableDocumentExtensions">
            <summary>
            Provides OxyPlot extension methods for <see cref="T:OxyPlot.PortableDocument" />.
            </summary>
        </member>
        <member name="M:OxyPlot.PortableDocumentExtensions.SetColor(OxyPlot.PortableDocument,OxyPlot.OxyColor)">
            <summary>
            Sets the stroke color.
            </summary>
            <param name="doc">The document.</param>
            <param name="c">The color.</param>
        </member>
        <member name="M:OxyPlot.PortableDocumentExtensions.SetFillColor(OxyPlot.PortableDocument,OxyPlot.OxyColor)">
            <summary>
            Sets the fill color.
            </summary>
            <param name="doc">The document.</param>
            <param name="c">The color.</param>
        </member>
        <member name="T:OxyPlot.PortableDocumentFont">
            <summary>
            Represents a font that can be used in a <see cref="T:OxyPlot.PortableDocument" />.
            </summary>
        </member>
        <member name="M:OxyPlot.PortableDocumentFont.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.PortableDocumentFont" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFont.SubType">
            <summary>
            Gets or sets the font subtype.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFont.BaseFont">
            <summary>
            Gets or sets the base font.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFont.Encoding">
            <summary>
            Gets or sets the encoding.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFont.FirstChar">
            <summary>
            Gets or sets the first character in the Widths array.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFont.Widths">
            <summary>
            Gets or sets the character Widths array.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFont.Ascent">
            <summary>
            Gets or sets the font ascent.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFont.CapHeight">
            <summary>
            Gets or sets the font cap height.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFont.Descent">
            <summary>
            Gets or sets the font descent.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFont.Flags">
            <summary>
            Gets or sets the font flags.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFont.FontBoundingBox">
            <summary>
            Gets or sets the font bounding box.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFont.ItalicAngle">
            <summary>
            Gets or sets the italic angle.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFont.StemV">
            <summary>
            Gets or sets the stem v.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFont.XHeight">
            <summary>
            Gets or sets the x height.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFont.FontName">
            <summary>
            Gets or sets the font name.
            </summary>
        </member>
        <member name="M:OxyPlot.PortableDocumentFont.Measure(System.String,System.Double,System.Double@,System.Double@)">
            <summary>
            Measures the specified text.
            </summary>
            <param name="text">The text.</param>
            <param name="fontSize">The font size</param>
            <param name="width">The width of the text.</param>
            <param name="height">The height of the text.</param>
        </member>
        <member name="T:OxyPlot.PortableDocumentFontFamily">
            <summary>
            Represents a font family that can be used in a <see cref="T:OxyPlot.PortableDocument" />.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFontFamily.RegularFont">
            <summary>
            Gets or sets the regular font.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFontFamily.BoldFont">
            <summary>
            Gets or sets the bold font.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFontFamily.ItalicFont">
            <summary>
            Gets or sets the italic font.
            </summary>
        </member>
        <member name="P:OxyPlot.PortableDocumentFontFamily.BoldItalicFont">
            <summary>
            Gets or sets the bold and italic font.
            </summary>
        </member>
        <member name="M:OxyPlot.PortableDocumentFontFamily.GetFont(System.Boolean,System.Boolean)">
            <summary>
            Gets the font with the specified weight and style.
            </summary>
            <param name="bold">bold font weight.</param>
            <param name="italic">italic/oblique font style.</param>
            <returns>The font.</returns>
        </member>
        <member name="T:OxyPlot.PortableDocumentImage">
            <summary>
            Represents an image that can be included in a <see cref="T:OxyPlot.PortableDocument" />.
            </summary>
        </member>
        <member name="M:OxyPlot.PortableDocumentImage.#ctor(System.Int32,System.Int32,System.Int32,System.Byte[],System.Byte[],System.Boolean,OxyPlot.ColorSpace)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.PortableDocumentImage" /> class.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="bitsPerComponent">The number of bits per component.</param>
            <param name="bits">The bits.</param>
            <param name="maskBits">The bits of the mask.</param>
            <param name="interpolate">Interpolate if set to <c>true</c>.</param>
            <param name="colorSpace">The color space.</param>
        </member>
        <member name="P:OxyPlot.PortableDocumentImage.Width">
            <summary>
            Gets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:OxyPlot.PortableDocumentImage.Height">
            <summary>
            Gets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:OxyPlot.PortableDocumentImage.BitsPerComponent">
            <summary>
            Gets the bits per component.
            </summary>
            <value>The bits per component.</value>
        </member>
        <member name="P:OxyPlot.PortableDocumentImage.ColorSpace">
            <summary>
            Gets the color space.
            </summary>
            <value>The color space.</value>
        </member>
        <member name="P:OxyPlot.PortableDocumentImage.Bits">
            <summary>
            Gets the bits.
            </summary>
            <value>The bits.</value>
        </member>
        <member name="P:OxyPlot.PortableDocumentImage.MaskBits">
            <summary>
            Gets the mask bits.
            </summary>
            <value>The mask bits.</value>
        </member>
        <member name="P:OxyPlot.PortableDocumentImage.Interpolate">
            <summary>
            Gets a value indicating whether the image is interpolated.
            </summary>
            <value><c>true</c> if interpolated; otherwise, <c>false</c>.</value>
        </member>
        <member name="T:OxyPlot.PortableDocumentImageUtilities">
            <summary>
            Provides utility methods related to <see cref="T:OxyPlot.PortableDocumentImage" />.
            </summary>
        </member>
        <member name="M:OxyPlot.PortableDocumentImageUtilities.Convert(OxyPlot.OxyImage,System.Boolean)">
            <summary>
            Converts the specified <see cref="T:OxyPlot.OxyImage" /> to a <see cref="T:OxyPlot.PortableDocumentImage" />.
            </summary>
            <param name="image">The source image.</param>
            <param name="interpolate">interpolate if set to <c>true</c>.</param>
            <returns>The converted image.</returns>
        </member>
        <member name="T:OxyPlot.StandardFonts">
            <summary>
            Defines the standard fonts that can be used in a <see cref="T:OxyPlot.PortableDocument" />.
            </summary>
        </member>
        <member name="M:OxyPlot.StandardFonts.#cctor">
            <summary>
            Initializes static members of the <see cref="T:OxyPlot.StandardFonts" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.StandardFonts.Helvetica">
            <summary>
            Gets the Arial font family.
            </summary>
        </member>
        <member name="P:OxyPlot.StandardFonts.Times">
            <summary>
            Gets the Times font family.
            </summary>
        </member>
        <member name="P:OxyPlot.StandardFonts.Courier">
            <summary>
            Gets the Courier font family.
            </summary>
        </member>
        <member name="T:OxyPlot.DelegatePlotCommand`1">
            <summary>
            Provides a controller command for the <see cref="T:OxyPlot.IPlotView" /> implemented by a delegate.
            </summary>
            <typeparam name="T">The type of the event arguments.</typeparam>
        </member>
        <member name="M:OxyPlot.DelegatePlotCommand`1.#ctor(System.Action{OxyPlot.IPlotView,OxyPlot.IController,`0})">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.DelegatePlotCommand`1" /> class.
            </summary>
            <param name="handler">The handler.</param>
        </member>
        <member name="T:OxyPlot.OxyInputEventArgs">
            <summary>
            Provides an abstract base class for classes that contain event data for input events.
            </summary>
        </member>
        <member name="P:OxyPlot.OxyInputEventArgs.Handled">
            <summary>
            Gets or sets a value indicating whether the event was handled.
            </summary>
        </member>
        <member name="P:OxyPlot.OxyInputEventArgs.ModifierKeys">
            <summary>
            Gets or sets the modifier keys.
            </summary>
        </member>
        <member name="P:OxyPlot.OxyInputEventArgs.IsAltDown">
            <summary>
            Gets a value indicating whether the alt key was pressed when the event was raised.
            </summary>
        </member>
        <member name="P:OxyPlot.OxyInputEventArgs.IsControlDown">
            <summary>
            Gets a value indicating whether the control key was pressed when the event was raised.
            </summary>
        </member>
        <member name="P:OxyPlot.OxyInputEventArgs.IsShiftDown">
            <summary>
            Gets a value indicating whether the shift key was pressed when the event was raised.
            </summary>
        </member>
        <member name="T:OxyPlot.OxyKeyEventArgs">
            <summary>
            Provides data for key events.
            </summary>
        </member>
        <member name="P:OxyPlot.OxyKeyEventArgs.Key">
            <summary>
            Gets or sets the key.
            </summary>
        </member>
        <member name="T:OxyPlot.OxyMouseDownEventArgs">
            <summary>
            Provides data for the mouse down events.
            </summary>
        </member>
        <member name="P:OxyPlot.OxyMouseDownEventArgs.ChangedButton">
            <summary>
            Gets or sets the mouse button that has changed.
            </summary>
        </member>
        <member name="P:OxyPlot.OxyMouseDownEventArgs.ClickCount">
            <summary>
            Gets or sets the number of times the button was clicked.
            </summary>
            <value>The number of times the mouse button was clicked.</value>
        </member>
        <member name="P:OxyPlot.OxyMouseDownEventArgs.HitTestResult">
            <summary>
            Gets or sets the hit test result.
            </summary>
        </member>
        <member name="T:OxyPlot.OxyMouseEventArgs">
            <summary>
            Provides data for the mouse events.
            </summary>
        </member>
        <member name="P:OxyPlot.OxyMouseEventArgs.Position">
            <summary>
            Gets or sets the position of the mouse cursor.
            </summary>
        </member>
        <member name="T:OxyPlot.OxyMouseWheelEventArgs">
            <summary>
            Provides data for mouse wheel events.
            </summary>
        </member>
        <member name="P:OxyPlot.OxyMouseWheelEventArgs.Delta">
            <summary>
            Gets or sets the change.
            </summary>
        </member>
        <member name="T:OxyPlot.OxyTouchEventArgs">
            <summary>
            Provides data for touch events.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyTouchEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyTouchEventArgs" /> class.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyTouchEventArgs.#ctor(OxyPlot.ScreenPoint[],OxyPlot.ScreenPoint[])">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyTouchEventArgs" /> class.
            </summary>
            <param name="currentTouches">The current touches.</param>
            <param name="previousTouches">The previous touches.</param>
        </member>
        <member name="P:OxyPlot.OxyTouchEventArgs.Position">
            <summary>
            Gets or sets the position of the touch.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:OxyPlot.OxyTouchEventArgs.DeltaScale">
            <summary>
            Gets or sets the relative change in scale.
            </summary>
            <value>The scale change.</value>
        </member>
        <member name="P:OxyPlot.OxyTouchEventArgs.DeltaTranslation">
            <summary>
            Gets or sets the change in x and y direction.
            </summary>
            <value>The translation.</value>
        </member>
        <member name="T:OxyPlot.IPlotController">
            <summary>
            Specifies functionality to interact with a plot view.
            </summary>
        </member>
        <member name="T:OxyPlot.MouseManipulator">
            <summary>
            Provides an abstract base class for manipulators that handles mouse events.
            </summary>
        </member>
        <member name="M:OxyPlot.MouseManipulator.#ctor(OxyPlot.IPlotView)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.MouseManipulator" /> class.
            </summary>
            <param name="plotView">The plot view.</param>
        </member>
        <member name="P:OxyPlot.MouseManipulator.StartPosition">
            <summary>
            Gets or sets the first position of the manipulation.
            </summary>
        </member>
        <member name="M:OxyPlot.MouseManipulator.Started(OxyPlot.OxyMouseEventArgs)">
            <summary>
            Occurs when an input device begins a manipulation on the plot.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyInputEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:OxyPlot.PanManipulator">
            <summary>
            Provides a manipulator for panning functionality.
            </summary>
        </member>
        <member name="M:OxyPlot.PanManipulator.#ctor(OxyPlot.IPlotView)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.PanManipulator" /> class.
            </summary>
            <param name="plotView">The plot view.</param>
        </member>
        <member name="P:OxyPlot.PanManipulator.PreviousPosition">
            <summary>
            Gets or sets the previous position.
            </summary>
        </member>
        <member name="P:OxyPlot.PanManipulator.IsPanEnabled">
            <summary>
            Gets or sets a value indicating whether panning is enabled.
            </summary>
        </member>
        <member name="M:OxyPlot.PanManipulator.Completed(OxyPlot.OxyMouseEventArgs)">
            <summary>
            Occurs when a manipulation is complete.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyInputEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.PanManipulator.Delta(OxyPlot.OxyMouseEventArgs)">
            <summary>
            Occurs when the input device changes position during a manipulation.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.PanManipulator.Started(OxyPlot.OxyMouseEventArgs)">
            <summary>
            Occurs when an input device begins a manipulation on the plot.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:OxyPlot.PlotManipulator`1">
            <summary>
            Provides an abstract base class for plot manipulators.
            </summary>
            <typeparam name="T">The type of the event arguments.</typeparam>
        </member>
        <member name="M:OxyPlot.PlotManipulator`1.#ctor(OxyPlot.IPlotView)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.PlotManipulator`1" /> class.
            </summary>
            <param name="view">The plot view.</param>
        </member>
        <member name="P:OxyPlot.PlotManipulator`1.PlotView">
            <summary>
            Gets the plot view where the event was raised.
            </summary>
            <value>The plot view.</value>
        </member>
        <member name="P:OxyPlot.PlotManipulator`1.XAxis">
            <summary>
            Gets or sets the X axis.
            </summary>
            <value>The X axis.</value>
        </member>
        <member name="P:OxyPlot.PlotManipulator`1.YAxis">
            <summary>
            Gets or sets the Y axis.
            </summary>
            <value>The Y axis.</value>
        </member>
        <member name="M:OxyPlot.PlotManipulator`1.InverseTransform(System.Double,System.Double)">
            <summary>
            Transforms a point from screen coordinates to data coordinates.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns>A data point.</returns>
        </member>
        <member name="M:OxyPlot.PlotManipulator`1.AssignAxes(OxyPlot.ScreenPoint)">
            <summary>
            Assigns the axes to this manipulator by the specified position.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="T:OxyPlot.TouchManipulator">
            <summary>
            Provides a manipulator for panning and scaling by touch events.
            </summary>
        </member>
        <member name="M:OxyPlot.TouchManipulator.#ctor(OxyPlot.IPlotView)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.TouchManipulator" /> class.
            </summary>
            <param name="plotView">The plot view.</param>
        </member>
        <member name="P:OxyPlot.TouchManipulator.SetHandledForPanOrZoom">
            <summary>
            Gets or sets a value indicating whether <c>e.Handled</c> should be set to <c>true</c>
            in case pan or zoom is enabled.
            </summary>
        </member>
        <member name="P:OxyPlot.TouchManipulator.IsPanEnabled">
            <summary>
            Gets or sets a value indicating whether panning is enabled.
            </summary>
        </member>
        <member name="P:OxyPlot.TouchManipulator.IsZoomEnabled">
            <summary>
            Gets or sets a value indicating whether zooming is enabled.
            </summary>
        </member>
        <member name="M:OxyPlot.TouchManipulator.Completed(OxyPlot.OxyTouchEventArgs)">
            <summary>
            Occurs when a manipulation is complete.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyInputEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.TouchManipulator.Delta(OxyPlot.OxyTouchEventArgs)">
            <summary>
            Occurs when a touch delta event is handled.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.TouchManipulator.Started(OxyPlot.OxyTouchEventArgs)">
            <summary>
            Occurs when an input device begins a manipulation on the plot.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:OxyPlot.TouchTrackerManipulator">
            <summary>
            Provides a plot manipulator for tracker functionality.
            </summary>
        </member>
        <member name="F:OxyPlot.TouchTrackerManipulator.currentSeries">
            <summary>
            The current series.
            </summary>
        </member>
        <member name="M:OxyPlot.TouchTrackerManipulator.#ctor(OxyPlot.IPlotView)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.TouchTrackerManipulator" /> class.
            </summary>
            <param name="plotView">The plot view.</param>
        </member>
        <member name="P:OxyPlot.TouchTrackerManipulator.PointsOnly">
            <summary>
            Gets or sets a value indicating whether to show tracker on points only (not interpolating).
            </summary>
        </member>
        <member name="P:OxyPlot.TouchTrackerManipulator.Snap">
            <summary>
            Gets or sets a value indicating whether to snap to the nearest point.
            </summary>
        </member>
        <member name="P:OxyPlot.TouchTrackerManipulator.LockToInitialSeries">
            <summary>
            Gets or sets a value indicating whether to lock the tracker to the initial series.
            </summary>
            <value><c>true</c> if the tracker should be locked; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:OxyPlot.TouchTrackerManipulator.Completed(OxyPlot.OxyTouchEventArgs)">
            <summary>
            Occurs when a manipulation is complete.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.TouchTrackerManipulator.Delta(OxyPlot.OxyTouchEventArgs)">
            <summary>
            Occurs when a touch delta event is handled.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.TouchTrackerManipulator.Started(OxyPlot.OxyTouchEventArgs)">
            <summary>
            Occurs when an input device begins a manipulation on the plot.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyTouchEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.TouchTrackerManipulator.UpdateTracker(OxyPlot.ScreenPoint)">
            <summary>
            Updates the tracker to the specified position.
            </summary>
            <param name="position">The position.</param>
        </member>
        <member name="M:OxyPlot.TouchTrackerManipulator.GetNearestHit(OxyPlot.Series.Series,OxyPlot.ScreenPoint,System.Boolean,System.Boolean)">
            <summary>
            Gets the nearest tracker hit.
            </summary>
            <param name="series">The series.</param>
            <param name="point">The point.</param>
            <param name="snap">Snap to points.</param>
            <param name="pointsOnly">Check points only (no interpolation).</param>
            <returns>A tracker hit result.</returns>
        </member>
        <member name="T:OxyPlot.TrackerHitResult">
            <summary>
            Provides data for a tracker hit result.
            </summary>
            <remarks>This is used as DataContext for the TrackerControl.
            The TrackerControl is visible when the user use the left mouse button to "track" points on the series.</remarks>
        </member>
        <member name="P:OxyPlot.TrackerHitResult.DataPoint">
            <summary>
            Gets or sets the nearest or interpolated data point.
            </summary>
        </member>
        <member name="P:OxyPlot.TrackerHitResult.Item">
            <summary>
            Gets or sets the source item of the point.
            If the current point is from an ItemsSource and is not interpolated, this property will contain the item.
            </summary>
        </member>
        <member name="P:OxyPlot.TrackerHitResult.Index">
            <summary>
            Gets or sets the index for the Item.
            </summary>
        </member>
        <member name="P:OxyPlot.TrackerHitResult.LineExtents">
            <summary>
            Gets or sets the horizontal/vertical line extents.
            </summary>
        </member>
        <member name="P:OxyPlot.TrackerHitResult.PlotModel">
            <summary>
            Gets or sets the plot model.
            </summary>
        </member>
        <member name="P:OxyPlot.TrackerHitResult.Position">
            <summary>
            Gets or sets the position in screen coordinates.
            </summary>
        </member>
        <member name="P:OxyPlot.TrackerHitResult.Series">
            <summary>
            Gets or sets the series that is being tracked.
            </summary>
        </member>
        <member name="P:OxyPlot.TrackerHitResult.Text">
            <summary>
            Gets or sets the text shown in the tracker.
            </summary>
        </member>
        <member name="P:OxyPlot.TrackerHitResult.XAxis">
            <summary>
            Gets the X axis.
            </summary>
        </member>
        <member name="P:OxyPlot.TrackerHitResult.YAxis">
            <summary>
            Gets the Y axis.
            </summary>
        </member>
        <member name="M:OxyPlot.TrackerHitResult.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:OxyPlot.TrackerManipulator">
            <summary>
            Provides a plot manipulator for tracker functionality.
            </summary>
        </member>
        <member name="F:OxyPlot.TrackerManipulator.currentSeries">
            <summary>
            The current series.
            </summary>
        </member>
        <member name="M:OxyPlot.TrackerManipulator.#ctor(OxyPlot.IPlotView)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.TrackerManipulator" /> class.
            </summary>
            <param name="plotView">The plot view.</param>
        </member>
        <member name="P:OxyPlot.TrackerManipulator.PointsOnly">
            <summary>
            Gets or sets a value indicating whether to show tracker on points only (not interpolating).
            </summary>
        </member>
        <member name="P:OxyPlot.TrackerManipulator.Snap">
            <summary>
            Gets or sets a value indicating whether to snap to the nearest point.
            </summary>
        </member>
        <member name="P:OxyPlot.TrackerManipulator.LockToInitialSeries">
            <summary>
            Gets or sets a value indicating whether to lock the tracker to the initial series.
            </summary>
            <value><c>true</c> if the tracker should be locked; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:OxyPlot.TrackerManipulator.Completed(OxyPlot.OxyMouseEventArgs)">
            <summary>
            Occurs when a manipulation is complete.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.TrackerManipulator.Delta(OxyPlot.OxyMouseEventArgs)">
            <summary>
            Occurs when the input device changes position during a manipulation.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.TrackerManipulator.Started(OxyPlot.OxyMouseEventArgs)">
            <summary>
            Occurs when an input device begins a manipulation on the plot.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.TrackerManipulator.GetNearestHit(OxyPlot.Series.Series,OxyPlot.ScreenPoint,System.Boolean,System.Boolean)">
            <summary>
            Gets the nearest tracker hit.
            </summary>
            <param name="series">The series.</param>
            <param name="point">The point.</param>
            <param name="snap">Snap to points.</param>
            <param name="pointsOnly">Check points only (no interpolation).</param>
            <returns>A tracker hit result.</returns>
        </member>
        <member name="T:OxyPlot.ZoomRectangleManipulator">
            <summary>
            Provides a manipulator for rectangle zooming functionality.
            </summary>
        </member>
        <member name="F:OxyPlot.ZoomRectangleManipulator.zoomRectangle">
            <summary>
            The zoom rectangle.
            </summary>
        </member>
        <member name="M:OxyPlot.ZoomRectangleManipulator.#ctor(OxyPlot.IPlotView)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.ZoomRectangleManipulator" /> class.
            </summary>
            <param name="plotView">The plot view.</param>
        </member>
        <member name="P:OxyPlot.ZoomRectangleManipulator.IsZoomEnabled">
            <summary>
            Gets or sets a value indicating whether zooming is enabled.
            </summary>
        </member>
        <member name="M:OxyPlot.ZoomRectangleManipulator.Completed(OxyPlot.OxyMouseEventArgs)">
            <summary>
            Occurs when a manipulation is complete.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.ZoomRectangleManipulator.Delta(OxyPlot.OxyMouseEventArgs)">
            <summary>
            Occurs when the input device changes position during a manipulation.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.ZoomRectangleManipulator.Started(OxyPlot.OxyMouseEventArgs)">
            <summary>
            Occurs when an input device begins a manipulation on the plot.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyMouseEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.ZoomRectangleManipulator.GetCursorType">
            <summary>
            Gets the cursor for the manipulation.
            </summary>
            <returns>The cursor.</returns>
        </member>
        <member name="T:OxyPlot.ZoomStepManipulator">
            <summary>
            Provides a plot view manipulator for stepwise zoom functionality.
            </summary>
        </member>
        <member name="M:OxyPlot.ZoomStepManipulator.#ctor(OxyPlot.IPlotView)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.ZoomStepManipulator" /> class.
            </summary>
            <param name="plotView">The plot view.</param>
        </member>
        <member name="P:OxyPlot.ZoomStepManipulator.FineControl">
            <summary>
            Gets or sets a value indicating whether FineControl.
            </summary>
        </member>
        <member name="P:OxyPlot.ZoomStepManipulator.Step">
            <summary>
            Gets or sets Step.
            </summary>
        </member>
        <member name="M:OxyPlot.ZoomStepManipulator.Started(OxyPlot.OxyMouseEventArgs)">
            <summary>
            Occurs when an input device begins a manipulation on the plot.
            </summary>
            <param name="e">The <see cref="T:OxyPlot.OxyInputEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="T:OxyPlot.PlotCommands">
            <summary>
            Defines common commands for the plots.
            </summary>
        </member>
        <member name="M:OxyPlot.PlotCommands.#cctor">
            <summary>
            Initializes static members of the <see cref="T:OxyPlot.PlotCommands" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.Reset">
            <summary>
            Gets the reset axes command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.ResetAt">
            <summary>
            Gets the reset axes command (for mouse events).
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.CopyCode">
            <summary>
            Gets the copy code command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.PanZoomByTouch">
            <summary>
            Gets the pan/zoom touch command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.PanAt">
            <summary>
            Gets the pan command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.ZoomRectangle">
            <summary>
            Gets the zoom rectangle command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.ZoomWheel">
            <summary>
            Gets the zoom by mouse wheel command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.ZoomWheelFine">
            <summary>
            Gets the fine-control zoom by mouse wheel command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.Track">
            <summary>
            Gets the tracker command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.SnapTrack">
            <summary>
            Gets the snap tracker command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.SnapTrackTouch">
            <summary>
            Gets the snap tracker command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.PointsOnlyTrack">
            <summary>
            Gets the points only tracker command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.PointsOnlyTrackTouch">
            <summary>
            Gets the points only tracker command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.HoverTrack">
            <summary>
            Gets the mouse hover tracker.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.HoverSnapTrack">
            <summary>
            Gets the mouse hover snap tracker.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.HoverPointsOnlyTrack">
            <summary>
            Gets the mouse hover points only tracker.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.PanLeft">
            <summary>
            Gets the pan left command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.PanRight">
            <summary>
            Gets the pan right command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.PanUp">
            <summary>
            Gets the pan up command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.PanDown">
            <summary>
            Gets the pan down command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.PanLeftFine">
            <summary>
            Gets the fine control pan left command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.PanRightFine">
            <summary>
            Gets the fine control pan right command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.PanUpFine">
            <summary>
            Gets the fine control pan up command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.PanDownFine">
            <summary>
            Gets the fine control pan down command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.ZoomInAt">
            <summary>
            Gets the zoom in command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.ZoomOutAt">
            <summary>
            Gets the zoom out command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.ZoomIn">
            <summary>
            Gets the zoom in command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.ZoomOut">
            <summary>
            Gets the zoom out command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.ZoomInFine">
            <summary>
            Gets the fine control zoom in command.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotCommands.ZoomOutFine">
            <summary>
            Gets the fine control zoom out command.
            </summary>
        </member>
        <member name="M:OxyPlot.PlotCommands.HandleReset(OxyPlot.IPlotView,OxyPlot.OxyInputEventArgs)">
            <summary>
            Handles the reset event.
            </summary>
            <param name="view">The view to reset.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyInputEventArgs" /> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.PlotCommands.HandleCopyCode(OxyPlot.IPlotView,OxyPlot.OxyInputEventArgs)">
            <summary>
            Handles the copy code event.
            </summary>
            <param name="view">The view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyInputEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:OxyPlot.PlotCommands.HandleZoomAt(OxyPlot.IPlotView,OxyPlot.OxyMouseEventArgs,System.Double)">
            <summary>
            Zooms the view by the specified factor at the position specified in the <see cref="T:OxyPlot.OxyMouseEventArgs" />.
            </summary>
            <param name="view">The view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseWheelEventArgs" /> instance containing the event data.</param>
            <param name="delta">The zoom factor.</param>
        </member>
        <member name="M:OxyPlot.PlotCommands.HandleZoomByWheel(OxyPlot.IPlotView,OxyPlot.OxyMouseWheelEventArgs,System.Double)">
            <summary>
            Zooms the view by the mouse wheel delta in the specified <see cref="T:OxyPlot.OxyKeyEventArgs" />.
            </summary>
            <param name="view">The view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyMouseWheelEventArgs" /> instance containing the event data.</param>
            <param name="factor">The zoom speed factor. Default value is 1.</param>
        </member>
        <member name="M:OxyPlot.PlotCommands.HandleZoomCenter(OxyPlot.IPlotView,OxyPlot.OxyInputEventArgs,System.Double)">
            <summary>
            Zooms the view by the key in the specified factor.
            </summary>
            <param name="view">The view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyInputEventArgs" /> instance containing the event data.</param>
            <param name="delta">The zoom factor (positive zoom in, negative zoom out).</param>
        </member>
        <member name="M:OxyPlot.PlotCommands.HandlePan(OxyPlot.IPlotView,OxyPlot.OxyInputEventArgs,System.Double,System.Double)">
            <summary>
            Pans the view by the key in the specified vector.
            </summary>
            <param name="view">The view.</param>
            <param name="args">The <see cref="T:OxyPlot.OxyInputEventArgs" /> instance containing the event data.</param>
            <param name="dx">The horizontal delta (percentage of plot area width).</param>
            <param name="dy">The vertical delta (percentage of plot area height).</param>
        </member>
        <member name="T:OxyPlot.PlotController">
            <summary>
            Provides an <see cref="T:OxyPlot.IPlotController" /> with a default set of plot bindings.
            </summary>
        </member>
        <member name="M:OxyPlot.PlotController.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.PlotController" /> class.
            </summary>
        </member>
        <member name="T:OxyPlot.IPlotElement">
            <summary>
            Specifies functionality for an element of a plot.
            </summary>
        </member>
        <member name="M:OxyPlot.IPlotElement.GetElementHashCode">
            <summary>
            Returns a hash code for this element.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            <remarks>This method creates the hash code by reflecting the value of all public properties.</remarks>
        </member>
        <member name="M:OxyPlot.IPlotElement.GetClippingRect">
            <summary>
            Gets the clipping rectangle.
            </summary>
            <returns>The clipping rectangle.</returns>
        </member>
        <member name="T:OxyPlot.IPlotModel">
            <summary>
            Specifies functionality for the plot model.
            </summary>
        </member>
        <member name="P:OxyPlot.IPlotModel.Background">
            <summary>
            Gets the color of the background of the plot.
            </summary>
            <value>The color.</value>
            <remarks>If the background color is set to <see cref="F:OxyPlot.OxyColors.Undefined" /> or is otherwise invisible then the background will be determined by the plot view or exporter.</remarks>
        </member>
        <member name="M:OxyPlot.IPlotModel.Update(System.Boolean)">
            <summary>
            Updates the model.
            </summary>
            <param name="updateData">if set to <c>true</c> , all data collections will be updated.</param>
        </member>
        <member name="M:OxyPlot.IPlotModel.Render(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the plot with the specified rendering context within the given rectangle.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="rect">The plot bounds.</param>
        </member>
        <member name="M:OxyPlot.IPlotModel.AttachPlotView(OxyPlot.IPlotView)">
            <summary>
            Attaches this model to the specified plot view.
            </summary>
            <param name="plotView">The plot view.</param>
            <remarks>Only one plot view can be attached to the plot model.
            The plot model contains data (e.g. axis scaling) that is only relevant to the current plot view.</remarks>
        </member>
        <member name="T:OxyPlot.ITransposablePlotElement">
            <summary>
            The TransposablePlotElement interface.
            </summary>
        </member>
        <member name="T:OxyPlot.IXyAxisPlotElement">
            <summary>
            Defines a plot element that uses an X and a Y axis.
            </summary>
        </member>
        <member name="P:OxyPlot.IXyAxisPlotElement.XAxis">
            <summary>
            Gets the X axis.
            </summary>
        </member>
        <member name="P:OxyPlot.IXyAxisPlotElement.YAxis">
            <summary>
            Gets the Y axis.
            </summary>
        </member>
        <member name="M:OxyPlot.IXyAxisPlotElement.Transform(OxyPlot.DataPoint)">
            <summary>
            Transforms the specified data point to a screen point by the axes of the plot element.
            </summary>
            <param name="p">The data point.</param>
            <returns>A screen point.</returns>
        </member>
        <member name="M:OxyPlot.IXyAxisPlotElement.InverseTransform(OxyPlot.ScreenPoint)">
            <summary>
            Transforms from a screen point to a data point by the axes of this series.
            </summary>
            <param name="p">The screen point.</param>
            <returns>A data point.</returns>
        </member>
        <member name="T:OxyPlot.PlotElement">
            <summary>
            Provides an abstract base class for elements of a <see cref="P:OxyPlot.PlotElement.PlotModel" />.
            </summary>
        </member>
        <member name="M:OxyPlot.PlotElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.PlotElement" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotElement.Font">
            <summary>
            Gets or sets the font. The default is <c>null</c> (use <see cref="P:OxyPlot.PlotModel.DefaultFont" />.
            </summary>
            <value>The font.</value>
            <remarks>If the value is <c>null</c>, the DefaultFont of the parent PlotModel will be used.</remarks>
        </member>
        <member name="P:OxyPlot.PlotElement.FontSize">
            <summary>
            Gets or sets the size of the font. The default is <c>double.NaN</c> (use <see cref="P:OxyPlot.PlotModel.DefaultFontSize" />).
            </summary>
            <value>The size of the font.</value>
            <remarks>If the value is <c>NaN</c>, the DefaultFontSize of the parent PlotModel will be used.</remarks>
        </member>
        <member name="P:OxyPlot.PlotElement.FontWeight">
            <summary>
            Gets or sets the font weight. The default is <c>FontWeights.Normal</c>.
            </summary>
            <value>The font weight.</value>
        </member>
        <member name="P:OxyPlot.PlotElement.PlotModel">
            <summary>
            Gets the parent <see cref="P:OxyPlot.PlotElement.PlotModel" />.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotElement.Tag">
            <summary>
            Gets or sets an arbitrary object value that can be used to store custom information about this plot element. The default is <c>null</c>.
            </summary>
            <value>The intended value.</value>
            <remarks>This property is analogous to Tag properties in other Microsoft programming models. Tag is intended to provide a pre-existing property location where you can store some basic custom information about any PlotElement without requiring you to subclass an element.</remarks>
        </member>
        <member name="P:OxyPlot.PlotElement.TextColor">
            <summary>
            Gets or sets the color of the text. The default is <c>OxyColors.Automatic</c> (use <see cref="P:OxyPlot.PlotModel.TextColor" />).
            </summary>
            <value>The color of the text.</value>
            <remarks>If the value is <c>OxyColors.Automatic</c>, the TextColor of the parent PlotModel will be used.</remarks>
        </member>
        <member name="P:OxyPlot.PlotElement.EdgeRenderingMode">
            <summary>
            Gets or sets the edge rendering mode that is used for rendering the plot element.
            </summary>
            <value>The edge rendering mode. The default is <see cref="F:OxyPlot.EdgeRenderingMode.Automatic"/>.</value>
        </member>
        <member name="P:OxyPlot.PlotElement.ToolTip">
            <summary>
            Gets or sets the tool tip. The default is <c>null</c>.
            </summary>
            <value>
            The tool tip string.
            </value>
        </member>
        <member name="P:OxyPlot.PlotElement.ActualFont">
            <summary>
            Gets the actual font.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotElement.ActualFontSize">
            <summary>
            Gets the actual size of the font.
            </summary>
            <value>The actual size of the font.</value>
        </member>
        <member name="P:OxyPlot.PlotElement.ActualFontWeight">
            <summary>
            Gets the actual font weight.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotElement.ActualTextColor">
            <summary>
            Gets the actual color of the text.
            </summary>
            <value>The actual color of the text.</value>
        </member>
        <member name="P:OxyPlot.PlotElement.ActualCulture">
            <summary>
            Gets the actual culture.
            </summary>
            <remarks>The culture is defined in the parent PlotModel.</remarks>
        </member>
        <member name="M:OxyPlot.PlotElement.GetClippingRect">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.PlotElement.GetElementHashCode">
            <summary>
            Returns a hash code for this element.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
            <remarks>This method creates the hash code by reflecting the value of all public properties.</remarks>
        </member>
        <member name="T:OxyPlot.PlotElementExtensions">
            <summary>
            The transposable plot element extensions.
            </summary>
        </member>
        <member name="M:OxyPlot.PlotElementExtensions.InverseTransform(OxyPlot.IXyAxisPlotElement,System.Double,System.Double)">
            <summary>
            Transforms from a screen point to a data point by the axes of this series.
            </summary>
            <param name="element">The <see cref="T:OxyPlot.ITransposablePlotElement" />.</param>
            <param name="x">The x coordinate of the screen point.</param>
            <param name="y">The y coordinate of the screen point.</param>
            <returns>A data point.</returns>
        </member>
        <member name="M:OxyPlot.PlotElementExtensions.IsTransposed(OxyPlot.ITransposablePlotElement)">
            <summary>
            Checks if the series is transposed.
            </summary>
            <returns>True if the series is transposed, False otherwise.</returns>
            <param name="element">The <see cref="T:OxyPlot.ITransposablePlotElement" />.</param>
        </member>
        <member name="M:OxyPlot.PlotElementExtensions.Orientate(OxyPlot.ITransposablePlotElement,OxyPlot.ScreenPoint)">
            <summary>
            Transposes the ScreenPoint if the series is transposed.
            </summary>
            <param name="element">The <see cref="T:OxyPlot.ITransposablePlotElement" />.</param>
            <param name="point">The <see cref="T:OxyPlot.ScreenPoint" /> to orientate.</param>
            <returns>The oriented point.</returns>
        </member>
        <member name="M:OxyPlot.PlotElementExtensions.Orientate(OxyPlot.ITransposablePlotElement,OxyPlot.ScreenVector)">
            <summary>
            Transposes the ScreenVector if the series is transposed. Reverses the respective direction if X or Y axis are reversed.
            </summary>
            <param name="element">The <see cref="T:OxyPlot.ITransposablePlotElement" />.</param>
            <param name="vector">The <see cref="T:OxyPlot.ScreenVector" /> to orientate.</param>
            <returns>The oriented vector.</returns>
        </member>
        <member name="M:OxyPlot.PlotElementExtensions.Orientate(OxyPlot.ITransposablePlotElement,OxyPlot.HorizontalAlignment@,OxyPlot.VerticalAlignment@)">
            <summary>
            Orientates a HorizontalAlignment and a VerticalAlignment according to whether the Series is transposed or the Axes are reversed.
            </summary>
            <param name="element">The <see cref="T:OxyPlot.ITransposablePlotElement" />.</param>
            <param name="ha">The <see cref="T:OxyPlot.HorizontalAlignment" /> to orientate.</param>
            <param name="va">The <see cref="T:OxyPlot.VerticalAlignment" /> to orientate.</param>
        </member>
        <member name="M:OxyPlot.PlotElementExtensions.Transform(OxyPlot.IXyAxisPlotElement,System.Double,System.Double)">
            <summary>
            Transforms the specified data point to a screen point by the axes of this series.
            </summary>
            <param name="element">The <see cref="T:OxyPlot.ITransposablePlotElement" />.</param>
            <param name="x">The x coordinate of the data point.</param>
            <param name="y">The y coordinate of the data point.</param>
            <returns>A screen point.</returns>
        </member>
        <member name="T:OxyPlot.PlotElementUtilities">
            <summary>
            Provides utility functions for plot elements.
            </summary>
        </member>
        <member name="M:OxyPlot.PlotElementUtilities.GetClippingRect(OxyPlot.IXyAxisPlotElement)">
            <summary>
            Gets the clipping rectangle defined by the Axis the <see cref="T:OxyPlot.IXyAxisPlotElement"/> uses.
            </summary>
            <param name="element">The <see cref="T:OxyPlot.IXyAxisPlotElement" />.</param>
            <returns>The clipping rectangle.</returns>
        </member>
        <member name="M:OxyPlot.PlotElementUtilities.InverseTransform(OxyPlot.IXyAxisPlotElement,OxyPlot.ScreenPoint)">
            <summary>
            Transforms from a screen point to a data point by the axes of this series.
            </summary>
            <param name="element">The <see cref="T:OxyPlot.ITransposablePlotElement" />.</param>
            <param name="p">The screen point.</param>
            <returns>A data point.</returns>
        </member>
        <member name="M:OxyPlot.PlotElementUtilities.InverseTransformOrientated(OxyPlot.ITransposablePlotElement,OxyPlot.ScreenPoint)">
            <summary>
            Transforms from a screen point to a data point by the axes of this series while being aware of the orientation.
            </summary>
            <param name="element">The <see cref="T:OxyPlot.ITransposablePlotElement" />.</param>
            <param name="p">The screen point.</param>
            <returns>A data point.</returns>
        </member>
        <member name="M:OxyPlot.PlotElementUtilities.Transform(OxyPlot.IXyAxisPlotElement,OxyPlot.DataPoint)">
            <summary>
            Transforms the specified coordinates to a screen point by the axes of the plot element.
            </summary>
            <param name="element">The plot element.</param>
            <param name="p">The data point.</param>
            <returns>A screen point.</returns>
        </member>
        <member name="M:OxyPlot.PlotElementUtilities.TransformOrientated(OxyPlot.ITransposablePlotElement,OxyPlot.DataPoint)">
            <summary>
            Transforms the specified coordinates to a screen point by the axes of the plot element while being aware of the orientation.
            </summary>
            <param name="element">The plot element.</param>
            <param name="p">The data point.</param>
            <returns>A screen point.</returns>
        </member>
        <member name="T:OxyPlot.PlotType">
            <summary>
            Specifies the coordinate system type.
            </summary>
        </member>
        <member name="F:OxyPlot.PlotType.XY">
            <summary>
            XY coordinate system - two perpendicular axes
            </summary>
        </member>
        <member name="F:OxyPlot.PlotType.Cartesian">
            <summary>
            Cartesian coordinate system - perpendicular axes with the same scaling.
            </summary>
            <remarks>See http://en.wikipedia.org/wiki/Cartesian_coordinate_system</remarks>
        </member>
        <member name="F:OxyPlot.PlotType.Polar">
            <summary>
            Polar coordinate system - with radial and angular axes
            </summary>
            <remarks>See http://en.wikipedia.org/wiki/Polar_coordinate_system</remarks>
        </member>
        <member name="T:OxyPlot.TitleHorizontalAlignment">
            <summary>
            Specifies the horizontal alignment of the titles.
            </summary>
        </member>
        <member name="F:OxyPlot.TitleHorizontalAlignment.CenteredWithinPlotArea">
            <summary>
            Centered within the plot area.
            </summary>
        </member>
        <member name="F:OxyPlot.TitleHorizontalAlignment.CenteredWithinView">
            <summary>
            Centered within the client view (excluding padding defined in <see cref="P:OxyPlot.PlotModel.Padding" />).
            </summary>
        </member>
        <member name="T:OxyPlot.PlotModel">
            <summary>
            Represents a plot.
            </summary>
            <summary>
            Represents a plot.
            </summary>
        </member>
        <member name="F:OxyPlot.PlotModel.barSeriesManagers">
            <summary>
            The bar series managers.
            </summary>
        </member>
        <member name="F:OxyPlot.PlotModel.plotViewReference">
            <summary>
            The plot view that renders this plot.
            </summary>
        </member>
        <member name="F:OxyPlot.PlotModel.currentColorIndex">
            <summary>
            The current color index.
            </summary>
        </member>
        <member name="F:OxyPlot.PlotModel.isDataUpdated">
            <summary>
            Flags if the data has been updated.
            </summary>
        </member>
        <member name="F:OxyPlot.PlotModel.lastPlotException">
            <summary>
            The last update exception.
            </summary>
            <value>The exception or <c>null</c> if there was no exceptions during the last update.</value>
        </member>
        <member name="M:OxyPlot.PlotModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.PlotModel" /> class.
            </summary>
        </member>
        <member name="E:OxyPlot.PlotModel.TrackerChanged">
            <summary>
            Occurs when the tracker has been changed.
            </summary>
        </member>
        <member name="E:OxyPlot.PlotModel.Updated">
            <summary>
            Occurs when the plot has been updated.
            </summary>
        </member>
        <member name="E:OxyPlot.PlotModel.Updating">
            <summary>
            Occurs when the plot is about to be updated.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotModel.DefaultFont">
            <summary>
            Gets or sets the default font.
            </summary>
            <value>The default font.</value>
            <remarks>This font is used for text on axes, series, legends and plot titles unless other fonts are specified.</remarks>
        </member>
        <member name="P:OxyPlot.PlotModel.DefaultFontSize">
            <summary>
            Gets or sets the default size of the fonts.
            </summary>
            <value>The default size of the font.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.ActualCulture">
            <summary>
            Gets the actual culture.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotModel.ActualPlotMargins">
            <summary>
            Gets the actual plot margins.
            </summary>
            <value>The actual plot margins.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.PlotView">
            <summary>
            Gets the plot view that renders this plot.
            </summary>
            <value>The plot view.</value>
            <remarks>Only one view can render the plot at the same time.</remarks>
        </member>
        <member name="P:OxyPlot.PlotModel.Annotations">
            <summary>
            Gets the annotations.
            </summary>
            <value>The annotations.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.Axes">
            <summary>
            Gets the axes.
            </summary>
            <value>The axes.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.Legends">
            <summary>
            Gets or sets the legends.
            </summary>
            <value>The legends.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.Background">
            <summary>
            Gets or sets the color of the background of the plot.
            </summary>
            <value>The color. The default is <see cref="F:OxyPlot.OxyColors.Undefined" />.</value>
            <remarks>If the background color is set to <see cref="F:OxyPlot.OxyColors.Undefined" /> or is otherwise invisible then the background will be determined by the plot view or exporter.</remarks>
        </member>
        <member name="P:OxyPlot.PlotModel.Culture">
            <summary>
            Gets or sets the culture.
            </summary>
            <value>The culture.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.DefaultColors">
            <summary>
            Gets or sets the default colors.
            </summary>
            <value>The default colors.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.EdgeRenderingMode">
            <summary>
            Gets or sets the edge rendering mode that is used for rendering the plot bounds and backgrounds.
            </summary>
            <value>The edge rendering mode. The default is <see cref="F:OxyPlot.EdgeRenderingMode.Automatic"/>.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.AssignColorsToInvisibleSeries">
            <summary>
            Gets or sets a value indicating whether invisible series should be assigned automatic colors.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotModel.IsLegendVisible">
            <summary>
            Gets or sets a value indicating whether the legend is visible. The titles of the series must be set to use the legend.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotModel.Padding">
            <summary>
            Gets or sets the padding around the plot.
            </summary>
            <value>The padding.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.PlotBounds">
            <summary>
            Gets the PlotBounds of the plot (in device units).
            </summary>
        </member>
        <member name="P:OxyPlot.PlotModel.Width">
            <summary>
            Gets the total width of the plot (in device units).
            </summary>
        </member>
        <member name="P:OxyPlot.PlotModel.Height">
            <summary>
            Gets the total height of the plot (in device units).
            </summary>
        </member>
        <member name="P:OxyPlot.PlotModel.PlotAndAxisArea">
            <summary>
            Gets the area including both the plot and the axes. Outside legends are rendered outside this rectangle.
            </summary>
            <value>The plot and axis area.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.PlotArea">
            <summary>
            Gets the plot area. This area is used to draw the series (not including axes or legends).
            </summary>
            <value>The plot area.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.AxisTierDistance">
            <summary>
            Gets or sets the distance between two neighborhood tiers of the same AxisPosition.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotModel.PlotAreaBackground">
            <summary>
            Gets or sets the color of the background of the plot area.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotModel.PlotAreaBorderColor">
            <summary>
            Gets or sets the color of the border around the plot area.
            </summary>
            <value>The color of the box.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.PlotAreaBorderThickness">
            <summary>
            Gets or sets the thickness of the border around the plot area.
            </summary>
            <value>The box thickness.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.PlotMargins">
            <summary>
            Gets or sets the margins around the plot (this should be large enough to fit the axes).
            If any of the values is set to <c>double.NaN</c>, the margin is adjusted to the value required by the axes.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotModel.PlotType">
            <summary>
            Gets or sets the type of the coordinate system.
            </summary>
            <value>The type of the plot.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.Series">
            <summary>
            Gets the series.
            </summary>
            <value>The series.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.RenderingDecorator">
            <summary>
            Gets or sets the rendering decorator.
            </summary>
            <value>
            The rendering decorator.
            </value>
        </member>
        <member name="P:OxyPlot.PlotModel.Subtitle">
            <summary>
            Gets or sets the subtitle.
            </summary>
            <value>The subtitle.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.SubtitleFont">
            <summary>
            Gets or sets the subtitle font. If this property is <c>null</c>, the Title font will be used.
            </summary>
            <value>The subtitle font.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.SubtitleFontSize">
            <summary>
            Gets or sets the size of the subtitle font.
            </summary>
            <value>The size of the subtitle font.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.SubtitleFontWeight">
            <summary>
            Gets or sets the subtitle font weight.
            </summary>
            <value>The subtitle font weight.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.TextColor">
            <summary>
            Gets or sets the default color of the text in the plot (titles, legends, annotations, axes).
            </summary>
            <value>The color of the text.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <value>The title.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.TitleToolTip">
            <summary>
            Gets or sets the title tool tip.
            </summary>
            <value>The title tool tip.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.TitleColor">
            <summary>
            Gets or sets the color of the title.
            </summary>
            <value>The color of the title.</value>
            <remarks>If the value is <c>null</c>, the TextColor will be used.</remarks>
        </member>
        <member name="P:OxyPlot.PlotModel.ClipTitle">
            <summary>
            Gets or sets a value indicating whether to clip the title. The default value is <c>true</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotModel.TitleClippingLength">
            <summary>
            Gets or sets the length of the title clipping rectangle (fraction of the available length of the title area). The default value is <c>0.9</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotModel.SubtitleColor">
            <summary>
            Gets or sets the color of the subtitle.
            </summary>
            <value>The color of the subtitle.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.TitleHorizontalAlignment">
            <summary>
            Gets or sets the horizontal alignment of the title and subtitle.
            </summary>
            <value>
            The alignment.
            </value>
        </member>
        <member name="P:OxyPlot.PlotModel.TitleArea">
            <summary>
            Gets the title area.
            </summary>
            <value>The title area.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.TitleFont">
            <summary>
            Gets or sets the title font.
            </summary>
            <value>The title font.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.TitleFontSize">
            <summary>
            Gets or sets the size of the title font.
            </summary>
            <value>The size of the title font.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.TitleFontWeight">
            <summary>
            Gets or sets the title font weight.
            </summary>
            <value>The title font weight.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.TitlePadding">
            <summary>
            Gets or sets the padding around the title.
            </summary>
            <value>The title padding.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.DefaultAngleAxis">
            <summary>
            Gets the default angle axis.
            </summary>
            <value>The default angle axis.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.DefaultMagnitudeAxis">
            <summary>
            Gets the default magnitude axis.
            </summary>
            <value>The default magnitude axis.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.DefaultXAxis">
            <summary>
            Gets the default X axis.
            </summary>
            <value>The default X axis.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.DefaultYAxis">
            <summary>
            Gets the default Y axis.
            </summary>
            <value>The default Y axis.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.DefaultColorAxis">
            <summary>
            Gets the default color axis.
            </summary>
            <value>The default color axis.</value>
        </member>
        <member name="P:OxyPlot.PlotModel.ActualTitleFont">
            <summary>
            Gets the actual title font.
            </summary>
        </member>
        <member name="P:OxyPlot.PlotModel.ActualSubtitleFont">
            <summary>
            Gets the actual subtitle font.
            </summary>
        </member>
        <member name="M:OxyPlot.PlotModel.OxyPlot#IPlotModel#AttachPlotView(OxyPlot.IPlotView)">
            <summary>
            Attaches this model to the specified plot view.
            </summary>
            <param name="plotView">The plot view.</param>
            <remarks>Only one plot view can be attached to the plot model.
            The plot model contains data (e.g. axis scaling) that is only relevant to the current plot view.</remarks>
        </member>
        <member name="M:OxyPlot.PlotModel.InvalidatePlot(System.Boolean)">
            <summary>
            Invalidates the plot.
            </summary>
            <param name="updateData">Updates all data sources if set to <c>true</c>.</param>
        </member>
        <member name="M:OxyPlot.PlotModel.GetAxesFromPoint(OxyPlot.ScreenPoint,OxyPlot.Axes.Axis@,OxyPlot.Axes.Axis@)">
            <summary>
            Gets the first axes that covers the area of the specified point.
            </summary>
            <param name="pt">The point.</param>
            <param name="xaxis">The x-axis.</param>
            <param name="yaxis">The y-axis.</param>
        </member>
        <member name="M:OxyPlot.PlotModel.GetDefaultColor">
            <summary>
            Gets the default color from the DefaultColors palette.
            </summary>
            <returns>The next default color.</returns>
        </member>
        <member name="M:OxyPlot.PlotModel.GetDefaultLineStyle">
            <summary>
            Gets the default line style.
            </summary>
            <returns>The next default line style.</returns>
        </member>
        <member name="M:OxyPlot.PlotModel.GetSeriesFromPoint(OxyPlot.ScreenPoint,System.Double)">
            <summary>
            Gets a series from the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="limit">The limit.</param>
            <returns>The nearest series.</returns>
        </member>
        <member name="M:OxyPlot.PlotModel.ToCode">
            <summary>
            Generates C# code of the model.
            </summary>
            <returns>C# code.</returns>
        </member>
        <member name="M:OxyPlot.PlotModel.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:OxyPlot.PlotModel.GetLegend(System.String)">
            <summary>
            Gets the legend for the specified key.
            </summary>
            <param name="key">The legend key.</param>
            <returns>The legend that corresponds with the key.</returns>
            <exception cref="T:System.InvalidOperationException">Cannot find legend with the specified key.</exception>
        </member>
        <member name="M:OxyPlot.PlotModel.GetLastPlotException">
            <summary>
            Gets any exception thrown during the last <see cref="M:OxyPlot.IPlotModel.Update(System.Boolean)" /> call.
            </summary>
            <returns>The exception or <c>null</c> if there was no exception.</returns>
        </member>
        <member name="M:OxyPlot.PlotModel.OxyPlot#IPlotModel#Update(System.Boolean)">
            <summary>
            Updates all axes and series.
            0. Updates the owner PlotModel of all plot items (axes, series and annotations)
            1. Updates the data of each Series (only if updateData==<c>true</c>).
            2. Ensure that all series have axes assigned.
            3. Updates the max and min of the axes.
            </summary>
            <param name="updateData">if set to <c>true</c> , all data collections will be updated.</param>
        </member>
        <member name="M:OxyPlot.PlotModel.GetAxis(System.String)">
            <summary>
            Gets the axis for the specified key.
            </summary>
            <param name="key">The axis key.</param>
            <returns>The axis that corresponds with the key.</returns>
            <exception cref="T:System.InvalidOperationException">Cannot find axis with the specified key.</exception>
        </member>
        <member name="M:OxyPlot.PlotModel.GetAxisOrDefault(System.String,OxyPlot.Axes.Axis)">
            <summary>
            Gets the axis for the specified key, or returns a default value.
            </summary>
            <param name="key">The axis key.</param>
            <param name="defaultAxis">The default axis.</param>
            <returns>defaultAxis if key is empty or does not exist; otherwise, the axis that corresponds with the key.</returns>
        </member>
        <member name="M:OxyPlot.PlotModel.ResetAllAxes">
            <summary>
            Resets all axes in the model.
            </summary>
        </member>
        <member name="M:OxyPlot.PlotModel.PanAllAxes(System.Double,System.Double)">
            <summary>
            Pans all axes.
            </summary>
            <param name="dx">The horizontal distance to pan (screen coordinates).</param>
            <param name="dy">The vertical distance to pan (screen coordinates).</param>
        </member>
        <member name="M:OxyPlot.PlotModel.ZoomAllAxes(System.Double)">
            <summary>
            Zooms all axes.
            </summary>
            <param name="factor">The zoom factor.</param>
        </member>
        <member name="M:OxyPlot.PlotModel.RaiseTrackerChanged(OxyPlot.TrackerHitResult)">
            <summary>
            Raises the TrackerChanged event.
            </summary>
            <param name="result">The result.</param>
            <remarks>
            This method is public so custom implementations of tracker manipulators can invoke this method.
            </remarks>
        </member>
        <member name="M:OxyPlot.PlotModel.OnTrackerChanged(OxyPlot.TrackerHitResult)">
            <summary>
            Raises the TrackerChanged event.
            </summary>
            <param name="result">The result.</param>
        </member>
        <member name="M:OxyPlot.PlotModel.GetHitTestElements">
            <summary>
            Gets all elements of the model, top-level elements first.
            </summary>
            <returns>
            An enumerator of the elements.
            </returns>
        </member>
        <member name="M:OxyPlot.PlotModel.OnUpdated">
            <summary>
            Raises the Updated event.
            </summary>
        </member>
        <member name="M:OxyPlot.PlotModel.OnUpdating">
            <summary>
            Raises the Updating event.
            </summary>
        </member>
        <member name="M:OxyPlot.PlotModel.UpdateAxisTransforms">
            <summary>
            Updates the axis transforms.
            </summary>
        </member>
        <member name="M:OxyPlot.PlotModel.EnforceCartesianTransforms">
            <summary>
            Enforces the same scale on all axes.
            </summary>
        </member>
        <member name="M:OxyPlot.PlotModel.UpdateIntervals">
            <summary>
            Updates the intervals (major and minor step values).
            </summary>
        </member>
        <member name="M:OxyPlot.PlotModel.EnsureDefaultAxes">
            <summary>
            Finds and sets the default horizontal and vertical axes (the first horizontal/vertical axes in the Axes collection).
            </summary>
        </member>
        <member name="M:OxyPlot.PlotModel.ResetDefaultColor">
            <summary>
            Resets the default color index.
            </summary>
        </member>
        <member name="M:OxyPlot.PlotModel.UpdateMaxMin(System.Boolean)">
            <summary>
            Updates maximum and minimum values of the axes from values of all data series.
            </summary>
            <param name="isDataUpdated">if set to <c>true</c> , the data has been updated.</param>
        </member>
        <member name="M:OxyPlot.PlotModel.UpdateBarSeriesManagers">
            <summary>
            Updates the bar series managers.
            </summary>
        </member>
        <member name="M:OxyPlot.PlotModel.OxyPlot#IPlotModel#Render(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the plot with the specified rendering context within the given rectangle.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="rect">The plot bounds.</param>
        </member>
        <member name="M:OxyPlot.PlotModel.RenderOverride(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the plot with the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="rect">The plot bounds.</param>
        </member>
        <member name="M:OxyPlot.PlotModel.RenderErrorMessage(OxyPlot.IRenderContext,System.String,System.String,System.Double)">
            <summary>
            Renders the specified error message.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="title">The title.</param>
            <param name="errorMessage">The error message.</param>
            <param name="fontSize">The font size. The default value is 12.</param>
        </member>
        <member name="M:OxyPlot.PlotModel.AdjustPlotMargins(OxyPlot.IRenderContext)">
            <summary>
            Adjusts the plot margins.
            </summary>
            <param name="rc">The render context.</param>
            <returns><c>true</c> if the margins were adjusted.</returns>
        </member>
        <member name="M:OxyPlot.PlotModel.AdjustAxesPositions(System.Collections.Generic.IEnumerable{OxyPlot.Axes.Axis})">
            <summary>
            Adjust the positions of parallel axes, returns total size
            </summary>
            <param name="parallelAxes">The parallel axes.</param>
            <returns>The maximum value of the position tier??</returns>
        </member>
        <member name="M:OxyPlot.PlotModel.MeasureTitles(OxyPlot.IRenderContext)">
            <summary>
            Measures the size of the title and subtitle.
            </summary>
            <param name="rc">The rendering context.</param>
            <returns>Size of the titles.</returns>
        </member>
        <member name="M:OxyPlot.PlotModel.RenderAnnotations(OxyPlot.IRenderContext,OxyPlot.Annotations.AnnotationLayer)">
            <summary>
            Renders the annotations.
            </summary>
            <param name="rc">The render context.</param>
            <param name="layer">The layer.</param>
        </member>
        <member name="M:OxyPlot.PlotModel.RenderAxes(OxyPlot.IRenderContext,OxyPlot.Axes.AxisLayer)">
            <summary>
            Renders the axes.
            </summary>
            <param name="rc">The render context.</param>
            <param name="layer">The layer.</param>
        </member>
        <member name="M:OxyPlot.PlotModel.RenderBackgrounds(OxyPlot.IRenderContext)">
            <summary>
            Renders the series backgrounds.
            </summary>
            <param name="rc">The render context.</param>
        </member>
        <member name="M:OxyPlot.PlotModel.RenderBox(OxyPlot.IRenderContext)">
            <summary>
            Renders the border around the plot area.
            </summary>
            <param name="rc">The render context.</param>
            <remarks>The border will only by rendered if there are axes in the plot.</remarks>
        </member>
        <member name="M:OxyPlot.PlotModel.RenderSeries(OxyPlot.IRenderContext)">
            <summary>
            Renders the series.
            </summary>
            <param name="rc">The render context.</param>
        </member>
        <member name="M:OxyPlot.PlotModel.RenderTitle(OxyPlot.IRenderContext)">
            <summary>
            Renders the title and subtitle.
            </summary>
            <param name="rc">The render context.</param>
        </member>
        <member name="M:OxyPlot.PlotModel.UpdatePlotArea(OxyPlot.IRenderContext)">
            <summary>
            Calculates the plot area (subtract padding, title size and outside legends)
            </summary>
            <param name="rc">The rendering context.</param>
        </member>
        <member name="T:OxyPlot.TrackerEventArgs">
            <summary>
            Provides data for the tracker event.
            </summary>
        </member>
        <member name="P:OxyPlot.TrackerEventArgs.HitResult">
            <summary>
            Gets or sets the hit result.
            </summary>
            <value>The hit result.</value>
        </member>
        <member name="T:OxyPlot.IPlotView">
            <summary>
            Specifies functionality for the plot views.
            </summary>
        </member>
        <member name="P:OxyPlot.IPlotView.ActualModel">
            <summary>
            Gets the actual <see cref="T:OxyPlot.PlotModel" /> of the control.
            </summary>
        </member>
        <member name="M:OxyPlot.IPlotView.HideTracker">
            <summary>
            Hides the tracker.
            </summary>
        </member>
        <member name="M:OxyPlot.IPlotView.InvalidatePlot(System.Boolean)">
            <summary>
            Invalidates the plot (not blocking the UI thread)
            </summary>
            <param name="updateData">if set to <c>true</c>, all data bindings will be updated.</param>
        </member>
        <member name="M:OxyPlot.IPlotView.ShowTracker(OxyPlot.TrackerHitResult)">
            <summary>
            Shows the tracker.
            </summary>
            <param name="trackerHitResult">The tracker data.</param>
        </member>
        <member name="M:OxyPlot.IPlotView.SetClipboardText(System.String)">
            <summary>
            Stores text on the clipboard.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="T:OxyPlot.FontWeights">
            <summary>
            Defines standard font weight values.
            </summary>
        </member>
        <member name="F:OxyPlot.FontWeights.Bold">
            <summary>
            Specifies a bold font weight.
            </summary>
        </member>
        <member name="F:OxyPlot.FontWeights.Normal">
            <summary>
            Specifies a normal font weight.
            </summary>
        </member>
        <member name="T:OxyPlot.HorizontalAlignment">
            <summary>
            Defines horizontal alignment.
            </summary>
        </member>
        <member name="F:OxyPlot.HorizontalAlignment.Left">
            <summary>
            Aligned to the left.
            </summary>
        </member>
        <member name="F:OxyPlot.HorizontalAlignment.Center">
            <summary>
            Aligned in the center.
            </summary>
        </member>
        <member name="F:OxyPlot.HorizontalAlignment.Right">
            <summary>
            Aligned to the right.
            </summary>
        </member>
        <member name="T:OxyPlot.IInterpolationAlgorithm">
            <summary>
            Defines an interpolation algorithm.
            </summary>
        </member>
        <member name="M:OxyPlot.IInterpolationAlgorithm.CreateSpline(System.Collections.Generic.List{OxyPlot.DataPoint},System.Boolean,System.Double)">
            <summary>
            Creates a spline from data points.
            </summary>
            <param name="points">Data points.</param>
            <param name="isClosed">True if the spline is closed.</param>
            <param name="tolerance">The tolerance.</param>
            <returns>Spline.</returns>
        </member>
        <member name="M:OxyPlot.IInterpolationAlgorithm.CreateSpline(System.Collections.Generic.IList{OxyPlot.ScreenPoint},System.Boolean,System.Double)">
            <summary>
            Creates a spline from points in screen space.
            </summary>
            <param name="points">Resampled points.</param>
            <param name="isClosed">True if the spline is closed.</param>
            <param name="tolerance">The tolerance.</param>
            <returns>Spline.</returns>
        </member>
        <member name="T:OxyPlot.InterpolationAlgorithms">
            <summary>
            Implements a set of predefined interpolation algorithms.
            </summary>
        </member>
        <member name="P:OxyPlot.InterpolationAlgorithms.CanonicalSpline">
            <summary>
            Canonical spline, also known as Cardinal spline.
            </summary>
        </member>
        <member name="P:OxyPlot.InterpolationAlgorithms.CatmullRomSpline">
            <summary>
            Centripetal Catmull–Rom spline.
            </summary>
        </member>
        <member name="P:OxyPlot.InterpolationAlgorithms.UniformCatmullRomSpline">
            <summary>
            Uniform Catmull–Rom spline.
            </summary>
        </member>
        <member name="P:OxyPlot.InterpolationAlgorithms.ChordalCatmullRomSpline">
            <summary>
            Chordal Catmull–Rom spline.
            </summary>
        </member>
        <member name="T:OxyPlot.LineJoin">
            <summary>
            Defines how to join line segments.
            </summary>
        </member>
        <member name="F:OxyPlot.LineJoin.Miter">
            <summary>
            Line joins use regular angular vertices.
            </summary>
        </member>
        <member name="F:OxyPlot.LineJoin.Round">
            <summary>
            Line joins use rounded vertices.
            </summary>
        </member>
        <member name="F:OxyPlot.LineJoin.Bevel">
            <summary>
            Line joins use beveled vertices.
            </summary>
        </member>
        <member name="T:OxyPlot.LineStyle">
            <summary>
            Defines the style of a line.
            </summary>
        </member>
        <member name="F:OxyPlot.LineStyle.Solid">
            <summary>
            The solid line style.
            </summary>
        </member>
        <member name="F:OxyPlot.LineStyle.Dash">
            <summary>
            The dash line style.
            </summary>
        </member>
        <member name="F:OxyPlot.LineStyle.Dot">
            <summary>
            The dot line style.
            </summary>
        </member>
        <member name="F:OxyPlot.LineStyle.DashDot">
            <summary>
            The dash dot line style.
            </summary>
        </member>
        <member name="F:OxyPlot.LineStyle.DashDashDot">
            <summary>
            The dash dash dot line style.
            </summary>
        </member>
        <member name="F:OxyPlot.LineStyle.DashDotDot">
            <summary>
            The dash dot dot line style.
            </summary>
        </member>
        <member name="F:OxyPlot.LineStyle.DashDashDotDot">
            <summary>
            The dash dash dot dot line style.
            </summary>
        </member>
        <member name="F:OxyPlot.LineStyle.LongDash">
            <summary>
            The long dash line style.
            </summary>
        </member>
        <member name="F:OxyPlot.LineStyle.LongDashDot">
            <summary>
            The long dash dot line style.
            </summary>
        </member>
        <member name="F:OxyPlot.LineStyle.LongDashDotDot">
            <summary>
            The long dash dot dot line style.
            </summary>
        </member>
        <member name="F:OxyPlot.LineStyle.None">
            <summary>
            The hidden line style.
            </summary>
        </member>
        <member name="F:OxyPlot.LineStyle.Automatic">
            <summary>
            The automatic line style.
            </summary>
        </member>
        <member name="T:OxyPlot.LineStyleHelper">
            <summary>
            Provides functionality to convert from <see cref="T:OxyPlot.LineStyle" /> to a stroke dash array.
            </summary>
        </member>
        <member name="M:OxyPlot.LineStyleHelper.GetDashArray(OxyPlot.LineStyle)">
            <summary>
            Gets the stroke dash array for a given <see cref="T:OxyPlot.LineStyle" />.
            </summary>
            <param name="style">The line style.</param>
            <returns>A dash array.</returns>
        </member>
        <member name="T:OxyPlot.OxyColor">
            <summary>
            Describes a color in terms of alpha, red, green, and blue channels.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColor.r">
            <summary>
            The red component.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColor.g">
            <summary>
            The green component.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColor.b">
            <summary>
            The blue component.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColor.a">
            <summary>
            The alpha component.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyColor.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyColor"/> struct.
            </summary>
            <param name="a">The alpha value.</param>
            <param name="r">The red value.</param>
            <param name="g">The green value.</param>
            <param name="b">The blue value.</param>
        </member>
        <member name="P:OxyPlot.OxyColor.A">
            <summary>
            Gets the alpha value.
            </summary>
            <value>The alpha value.</value>
        </member>
        <member name="P:OxyPlot.OxyColor.B">
            <summary>
            Gets the blue value.
            </summary>
            <value>The blue value.</value>
        </member>
        <member name="P:OxyPlot.OxyColor.G">
            <summary>
            Gets the green value.
            </summary>
            <value>The green value.</value>
        </member>
        <member name="P:OxyPlot.OxyColor.R">
            <summary>
            Gets the red value.
            </summary>
            <value>The red value.</value>
        </member>
        <member name="M:OxyPlot.OxyColor.Parse(System.String)">
            <summary>
            Parse a string.
            </summary>
            <param name="value">The string in the format <c>"#FFFFFF00"</c> or <c>"255,200,180,50"</c>.</param>
            <returns>The parsed color.</returns>
            <exception cref="T:System.FormatException">Invalid format.</exception>
        </member>
        <member name="M:OxyPlot.OxyColor.ColorDifference(OxyPlot.OxyColor,OxyPlot.OxyColor)">
            <summary>
            Calculates the difference between two <see cref="T:OxyPlot.OxyColor" />s
            </summary>
            <param name="c1">The first color.</param>
            <param name="c2">The second color.</param>
            <returns>L2-norm in ARGB space</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.FromUInt32(System.UInt32)">
            <summary>
            Convert an <see cref="T:System.UInt32" /> to a <see cref="T:OxyPlot.OxyColor" />.
            </summary>
            <param name="color">The unsigned integer color value.</param>
            <returns>The <see cref="T:OxyPlot.OxyColor" />.</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.FromHsv(System.Double[])">
            <summary>
            Creates a OxyColor from the specified HSV array.
            </summary>
            <param name="hsv">The HSV value array.</param>
            <returns>A OxyColor.</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.FromHsv(System.Double,System.Double,System.Double)">
            <summary>
            Converts from HSV to <see cref="T:OxyPlot.OxyColor" />
            </summary>
            <param name="hue">The hue value [0,1]</param>
            <param name="sat">The saturation value [0,1]</param>
            <param name="val">The intensity value [0,1]</param>
            <returns>The <see cref="T:OxyPlot.OxyColor" />.</returns>
            <remarks>See <a href="http://en.wikipedia.org/wiki/HSL_Color_space">Wikipedia</a>.</remarks>
        </member>
        <member name="M:OxyPlot.OxyColor.HueDifference(OxyPlot.OxyColor,OxyPlot.OxyColor)">
            <summary>
            Calculate the difference in hue between two <see cref="T:OxyPlot.OxyColor" />s.
            </summary>
            <param name="c1">The first color.</param>
            <param name="c2">The second color.</param>
            <returns>The hue difference.</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.FromAColor(System.Byte,OxyPlot.OxyColor)">
            <summary>
            Creates a color defined by an alpha value and another color.
            </summary>
            <param name="a">Alpha value.</param>
            <param name="color">The original color.</param>
            <returns>A color.</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.FromArgb(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a color from the specified ARGB values.
            </summary>
            <param name="a">The alpha value.</param>
            <param name="r">The red value.</param>
            <param name="g">The green value.</param>
            <param name="b">The blue value.</param>
            <returns>A color.</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.FromRgb(System.Byte,System.Byte,System.Byte)">
            <summary>
            Creates a new <see cref="T:OxyPlot.OxyColor" /> structure from the specified RGB values.
            </summary>
            <param name="r">The red value.</param>
            <param name="g">The green value.</param>
            <param name="b">The blue value.</param>
            <returns>A <see cref="T:OxyPlot.OxyColor" /> structure with the specified values and an alpha channel value of 1.</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.Interpolate(OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double)">
            <summary>
            Interpolates the specified colors.
            </summary>
            <param name="color1">The color1.</param>
            <param name="color2">The color2.</param>
            <param name="t">The t.</param>
            <returns>The interpolated color</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.op_Equality(OxyPlot.OxyColor,OxyPlot.OxyColor)">
            <summary>
            Determines whether the specified colors are equal to each other.
            </summary>
            <param name="first">The first color.</param>
            <param name="second">The second color.</param>
            <returns><c>true</c> if the two colors are equal; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.op_Inequality(OxyPlot.OxyColor,OxyPlot.OxyColor)">
            <summary>
            Determines whether the specified colors are not equal to each other.
            </summary>
            <param name="first">The first color.</param>
            <param name="second">The second color.</param>
            <returns><c>true</c> if the two colors are not equal; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.Equals(OxyPlot.OxyColor)">
            <summary>
            Determines whether the specified <see cref="T:OxyPlot.OxyColor" /> is equal to this instance.
            </summary>
            <param name="other">The <see cref="T:OxyPlot.OxyColor" /> to compare with this instance.</param>
            <returns><c>true</c> if the specified <see cref="T:OxyPlot.OxyColor" /> is equal to this instance; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.IsInvisible">
            <summary>
            Determines whether this color is invisible.
            </summary>
            <returns><c>True</c> if the alpha value is 0.</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.IsVisible">
            <summary>
            Determines whether this color is visible.
            </summary>
            <returns><c>True</c> if the alpha value is greater than 0.</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.IsUndefined">
            <summary>
            Determines whether this color is undefined.
            </summary>
            <returns><c>True</c> if the color equals <see cref="F:OxyPlot.OxyColors.Undefined" />.</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.IsAutomatic">
            <summary>
            Determines whether this color is automatic.
            </summary>
            <returns><c>True</c> if the color equals <see cref="F:OxyPlot.OxyColors.Automatic" />.</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.GetActualColor(OxyPlot.OxyColor)">
            <summary>
            Gets the actual color.
            </summary>
            <param name="defaultColor">The default color.</param>
            <returns>The default color if the current color equals OxyColors.Automatic, otherwise the color itself.</returns>
        </member>
        <member name="M:OxyPlot.OxyColor.OxyPlot#ICodeGenerating#ToCode">
            <summary>
            Returns C# code that generates this instance.
            </summary>
            <returns>The C# code.</returns>
        </member>
        <member name="T:OxyPlot.OxyColorExtensions">
            <summary>
            Provides extension methods for <see cref="T:OxyPlot.OxyColor" />.
            </summary>
            <remarks>These are pure methods. They could also be placed in the <see cref="T:OxyPlot.OxyColor" /> type with a PureAttribute.</remarks>
        </member>
        <member name="M:OxyPlot.OxyColorExtensions.ChangeIntensity(OxyPlot.OxyColor,System.Double)">
            <summary>
            Changes the intensity.
            </summary>
            <param name="color">The color.</param>
            <param name="factor">The factor.</param>
            <returns>A color with the new intensity.</returns>
        </member>
        <member name="M:OxyPlot.OxyColorExtensions.ChangeSaturation(OxyPlot.OxyColor,System.Double)">
            <summary>
            Changes the intensity.
            </summary>
            <param name="color">The color.</param>
            <param name="factor">The factor.</param>
            <returns>A color with the new intensity.</returns>
        </member>
        <member name="M:OxyPlot.OxyColorExtensions.Complementary(OxyPlot.OxyColor)">
            <summary>
            Calculates the complementary color.
            </summary>
            <param name="color">The color to convert.</param>
            <returns>The complementary color.</returns>
        </member>
        <member name="M:OxyPlot.OxyColorExtensions.ToHsv(OxyPlot.OxyColor)">
            <summary>
            Converts from a <see cref="T:OxyPlot.OxyColor" /> to HSV values (double)
            </summary>
            <param name="color">The color.</param>
            <returns>Array of [Hue,Saturation,Value] in the range [0,1]</returns>
        </member>
        <member name="M:OxyPlot.OxyColorExtensions.ToUint(OxyPlot.OxyColor)">
            <summary>
            Converts to an unsigned integer.
            </summary>
            <param name="color">The color.</param>
            <returns>The color as an unsigned integer.</returns>
        </member>
        <member name="M:OxyPlot.OxyColorExtensions.ToByteString(OxyPlot.OxyColor)">
            <summary>
            Converts an <see cref="T:OxyPlot.OxyColor" /> to a string containing the ARGB byte values.
            </summary>
            <param name="color">The color.</param>
            <returns>A string that contains byte values of the alpha, red, green and blue components separated by comma.</returns>
        </member>
        <member name="M:OxyPlot.OxyColorExtensions.ToCode(OxyPlot.OxyColor)">
            <summary>
            Returns C# code that generates this instance.
            </summary>
            <param name="color">The color.</param>
            <returns>The code.</returns>
        </member>
        <member name="M:OxyPlot.OxyColorExtensions.GetColorName(OxyPlot.OxyColor)">
            <summary>
            Gets the name of the color if it is defined in the <see cref="T:OxyPlot.OxyColors" /> class.
            </summary>
            <param name="color">The color.</param>
            <returns>The color name or <c>null</c> if the color is not found.</returns>
        </member>
        <member name="T:OxyPlot.OxyColors">
            <summary>
            Implements a set of predefined colors.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Undefined">
            <summary>
            The undefined color.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Automatic">
            <summary>
            The automatic color.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.AliceBlue">
            <summary>
            The alice blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.AntiqueWhite">
            <summary>
            The antique white.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Aqua">
            <summary>
            The aqua.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Aquamarine">
            <summary>
            The aquamarine.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Azure">
            <summary>
            The azure.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Beige">
            <summary>
            The beige.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Bisque">
            <summary>
            The bisque.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Black">
            <summary>
            The black.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.BlanchedAlmond">
            <summary>
            The blanched almond.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Blue">
            <summary>
            The blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.BlueViolet">
            <summary>
            The blue violet.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Brown">
            <summary>
            The brown.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.BurlyWood">
            <summary>
            The burly wood.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.CadetBlue">
            <summary>
            The cadet blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Chartreuse">
            <summary>
            The chartreuse.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Chocolate">
            <summary>
            The chocolate.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Coral">
            <summary>
            The coral.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.CornflowerBlue">
            <summary>
            The cornflower blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Cornsilk">
            <summary>
            The cornsilk.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Crimson">
            <summary>
            The crimson.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Cyan">
            <summary>
            The cyan.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DarkBlue">
            <summary>
            The dark blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DarkCyan">
            <summary>
            The dark cyan.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DarkGoldenrod">
            <summary>
            The dark goldenrod.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DarkGray">
            <summary>
            The dark gray.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DarkGreen">
            <summary>
            The dark green.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DarkKhaki">
            <summary>
            The dark khaki.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DarkMagenta">
            <summary>
            The dark magenta.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DarkOliveGreen">
            <summary>
            The dark olive green.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DarkOrange">
            <summary>
            The dark orange.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DarkOrchid">
            <summary>
            The dark orchid.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DarkRed">
            <summary>
            The dark red.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DarkSalmon">
            <summary>
            The dark salmon.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DarkSeaGreen">
            <summary>
            The dark sea green.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DarkSlateBlue">
            <summary>
            The dark slate blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DarkSlateGray">
            <summary>
            The dark slate gray.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DarkTurquoise">
            <summary>
            The dark turquoise.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DarkViolet">
            <summary>
            The dark violet.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DeepPink">
            <summary>
            The deep pink.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DeepSkyBlue">
            <summary>
            The deep sky blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DimGray">
            <summary>
            The dim gray.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.DodgerBlue">
            <summary>
            The dodger blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Firebrick">
            <summary>
            The firebrick.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.FloralWhite">
            <summary>
            The floral white.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.ForestGreen">
            <summary>
            The forest green.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Fuchsia">
            <summary>
            The fuchsia.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Gainsboro">
            <summary>
            The gainsboro.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.GhostWhite">
            <summary>
            The ghost white.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Gold">
            <summary>
            The gold.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Goldenrod">
            <summary>
            The goldenrod.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Gray">
            <summary>
            The gray.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Green">
            <summary>
            The green.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.GreenYellow">
            <summary>
            The green yellow.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Honeydew">
            <summary>
            The honeydew.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.HotPink">
            <summary>
            The hot pink.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.IndianRed">
            <summary>
            The indian red.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Indigo">
            <summary>
            The indigo.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Ivory">
            <summary>
            The ivory.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Khaki">
            <summary>
            The khaki.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Lavender">
            <summary>
            The lavender.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.LavenderBlush">
            <summary>
            The lavender blush.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.LawnGreen">
            <summary>
            The lawn green.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.LemonChiffon">
            <summary>
            The lemon chiffon.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.LightBlue">
            <summary>
            The light blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.LightCoral">
            <summary>
            The light coral.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.LightCyan">
            <summary>
            The light cyan.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.LightGoldenrodYellow">
            <summary>
            The light goldenrod yellow.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.LightGray">
            <summary>
            The light gray.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.LightGreen">
            <summary>
            The light green.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.LightPink">
            <summary>
            The light pink.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.LightSalmon">
            <summary>
            The light salmon.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.LightSeaGreen">
            <summary>
            The light sea green.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.LightSkyBlue">
            <summary>
            The light sky blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.LightSlateGray">
            <summary>
            The light slate gray.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.LightSteelBlue">
            <summary>
            The light steel blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.LightYellow">
            <summary>
            The light yellow.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Lime">
            <summary>
            The lime.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.LimeGreen">
            <summary>
            The lime green.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Linen">
            <summary>
            The linen.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Magenta">
            <summary>
            The magenta.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Maroon">
            <summary>
            The maroon.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.MediumAquamarine">
            <summary>
            The medium aquamarine.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.MediumBlue">
            <summary>
            The medium blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.MediumOrchid">
            <summary>
            The medium orchid.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.MediumPurple">
            <summary>
            The medium purple.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.MediumSeaGreen">
            <summary>
            The medium sea green.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.MediumSlateBlue">
            <summary>
            The medium slate blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.MediumSpringGreen">
            <summary>
            The medium spring green.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.MediumTurquoise">
            <summary>
            The medium turquoise.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.MediumVioletRed">
            <summary>
            The medium violet red.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.MidnightBlue">
            <summary>
            The midnight blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.MintCream">
            <summary>
            The mint cream.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.MistyRose">
            <summary>
            The misty rose.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Moccasin">
            <summary>
            The moccasin.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.NavajoWhite">
            <summary>
            The navajo white.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Navy">
            <summary>
            The navy.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.OldLace">
            <summary>
            The old lace.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Olive">
            <summary>
            The olive.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.OliveDrab">
            <summary>
            The olive drab.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Orange">
            <summary>
            The orange.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.OrangeRed">
            <summary>
            The orange red.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Orchid">
            <summary>
            The orchid.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.PaleGoldenrod">
            <summary>
            The pale goldenrod.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.PaleGreen">
            <summary>
            The pale green.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.PaleTurquoise">
            <summary>
            The pale turquoise.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.PaleVioletRed">
            <summary>
            The pale violet red.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.PapayaWhip">
            <summary>
            The papaya whip.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.PeachPuff">
            <summary>
            The peach puff.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Peru">
            <summary>
            The peru.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Pink">
            <summary>
            The pink.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Plum">
            <summary>
            The plum.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.PowderBlue">
            <summary>
            The powder blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Purple">
            <summary>
            The purple.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Red">
            <summary>
            The red.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.RosyBrown">
            <summary>
            The rosy brown.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.RoyalBlue">
            <summary>
            The royal blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.SaddleBrown">
            <summary>
            The saddle brown.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Salmon">
            <summary>
            The salmon.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.SandyBrown">
            <summary>
            The sandy brown.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.SeaGreen">
            <summary>
            The sea green.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.SeaShell">
            <summary>
            The sea shell.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Sienna">
            <summary>
            The sienna.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Silver">
            <summary>
            The silver.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.SkyBlue">
            <summary>
            The sky blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.SlateBlue">
            <summary>
            The slate blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.SlateGray">
            <summary>
            The slate gray.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Snow">
            <summary>
            The snow.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.SpringGreen">
            <summary>
            The spring green.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.SteelBlue">
            <summary>
            The steel blue.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Tan">
            <summary>
            The tan.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Teal">
            <summary>
            The teal.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Thistle">
            <summary>
            The thistle.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Tomato">
            <summary>
            The tomato.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Transparent">
            <summary>
            The transparent.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Turquoise">
            <summary>
            The turquoise.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Violet">
            <summary>
            The violet.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Wheat">
            <summary>
            The wheat.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.White">
            <summary>
            The white.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.WhiteSmoke">
            <summary>
            The white smoke.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.Yellow">
            <summary>
            The yellow.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyColors.YellowGreen">
            <summary>
            The yellow green.
            </summary>
        </member>
        <member name="T:OxyPlot.OxyPalette">
            <summary>
            Represents a palette of colors.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyPalette.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyPalette" /> class.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyPalette.#ctor(OxyPlot.OxyColor[])">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyPalette" /> class.
            </summary>
            <param name="colors">The colors.</param>
        </member>
        <member name="M:OxyPlot.OxyPalette.#ctor(System.Collections.Generic.IEnumerable{OxyPlot.OxyColor})">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyPalette" /> class.
            </summary>
            <param name="colors">The colors.</param>
        </member>
        <member name="P:OxyPlot.OxyPalette.Colors">
            <summary>
            Gets or sets the colors.
            </summary>
            <value>The colors.</value>
        </member>
        <member name="M:OxyPlot.OxyPalette.Interpolate(System.Int32,OxyPlot.OxyColor[])">
            <summary>
            Interpolates the specified colors to a palette of the specified size.
            </summary>
            <param name="paletteSize">The size of the palette.</param>
            <param name="colors">The colors.</param>
            <returns>A palette.</returns>
        </member>
        <member name="M:OxyPlot.OxyPalette.Reverse">
            <summary>
            Creates a palette with reversed color order.
            </summary>
            <returns>The reversed <see cref="T:OxyPlot.OxyPalette" />.</returns>
        </member>
        <member name="T:OxyPlot.OxyPalettes">
            <summary>
            Provides predefined palettes.
            </summary>
            <summary>
            Provides predefined palettes.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyPalettes.#cctor">
            <summary>
            Initializes static members of the <see cref="T:OxyPlot.OxyPalettes" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.OxyPalettes.BlueWhiteRed31">
            <summary>
            Gets the blue-white-red palette with 31 colors.
            </summary>
        </member>
        <member name="P:OxyPlot.OxyPalettes.Hot64">
            <summary>
            Gets the hot palette with 64 colors.
            </summary>
        </member>
        <member name="P:OxyPlot.OxyPalettes.Hue64">
            <summary>
            Gets the hue palette with 64 colors.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyPalettes.BlackWhiteRed(System.Int32)">
            <summary>
            Creates a black/white/red palette with the specified number of colors.
            </summary>
            <param name="numberOfColors">The number of colors to create for the palette.</param>
            <returns>A palette.</returns>
        </member>
        <member name="M:OxyPlot.OxyPalettes.BlueWhiteRed(System.Int32)">
            <summary>
            Creates a blue/white/red palette with the specified number of colors.
            </summary>
            <param name="numberOfColors">The number of colors to create for the palette.</param>
            <returns>A palette.</returns>
        </member>
        <member name="M:OxyPlot.OxyPalettes.Cool(System.Int32)">
            <summary>
            Creates a 'cool' palette with the specified number of colors.
            </summary>
            <param name="numberOfColors">The number of colors to create for the palette.</param>
            <returns>A palette.</returns>
        </member>
        <member name="M:OxyPlot.OxyPalettes.Gray(System.Int32)">
            <summary>
            Creates a gray-scale palette with the specified number of colors.
            </summary>
            <param name="numberOfColors">The number of colors to create for the palette.</param>
            <returns>A palette.</returns>
        </member>
        <member name="M:OxyPlot.OxyPalettes.Hot(System.Int32)">
            <summary>
            Creates a 'hot' palette with the specified number of colors.
            </summary>
            <param name="numberOfColors">The number of colors to create for the palette.</param>
            <returns>A palette.</returns>
        </member>
        <member name="M:OxyPlot.OxyPalettes.Hue(System.Int32)">
            <summary>
            Creates a palette from the hue component of the HSV color model.
            </summary>
            <param name="numberOfColors">The number of colors.</param>
            <returns>The palette.</returns>
            <remarks>This palette is particularly appropriate for displaying periodic functions.</remarks>
        </member>
        <member name="M:OxyPlot.OxyPalettes.HueDistinct(System.Int32)">
            <summary>
            Creates a hue-based palette from magenta to red.
            </summary>
            <param name="numberOfColors">The number of colors.</param>
            <returns>The palette.</returns>
            <remarks>This palette contains only distinct colors and with the cool colors (blues) first.</remarks>
        </member>
        <member name="M:OxyPlot.OxyPalettes.Jet(System.Int32)">
            <summary>
            Creates a 'jet' palette with the specified number of colors.
            </summary>
            <param name="numberOfColors">The number of colors to create for the palette.</param>
            <returns>A palette.</returns>
        </member>
        <member name="M:OxyPlot.OxyPalettes.Rainbow(System.Int32)">
            <summary>
            Creates a rainbow palette with the specified number of colors.
            </summary>
            <param name="numberOfColors">The number of colors to create for the palette.</param>
            <returns>A palette.</returns>
        </member>
        <member name="F:OxyPlot.OxyPalettes.cividisColors">
            <summary>
            The color sequence of the cividis palette.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyPalettes.infernoColors">
            <summary>
            The color sequence of the inferno palette.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyPalettes.magmaColors">
            <summary>
            The color sequence of the magma palette.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyPalettes.plasmaColors">
            <summary>
            The color sequence of the plasma palette.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyPalettes.viridisColors">
            <summary>
            The color sequence of the viridis palette.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyPalettes.Cividis(System.Int32)">
            <summary>
            Gets the cividis palette.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyPalettes.Inferno(System.Int32)">
            <summary>
            Gets the inferno palette.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyPalettes.Magma(System.Int32)">
            <summary>
            Gets the magma palette.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyPalettes.Plasma(System.Int32)">
            <summary>
            Gets the plasma palette.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyPalettes.Viridis(System.Int32)">
            <summary>
            Gets the viridis palette.
            </summary>
        </member>
        <member name="T:OxyPlot.OxyPen">
            <summary>
            Describes a pen in terms of color, thickness, line style and line join type.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyPen.#ctor(OxyPlot.OxyColor,System.Double,OxyPlot.LineStyle,OxyPlot.LineJoin)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyPen" /> class.
            </summary>
            <param name="color">The color.</param>
            <param name="thickness">The thickness.</param>
            <param name="lineStyle">The line style.</param>
            <param name="lineJoin">The line join.</param>
        </member>
        <member name="P:OxyPlot.OxyPen.Color">
            <summary>
            Gets or sets the color of the pen.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:OxyPlot.OxyPen.DashArray">
            <summary>
            Gets or sets the dash array (overrides <see cref="P:OxyPlot.OxyPen.LineStyle" />).
            </summary>
            <value>The dash array.</value>
        </member>
        <member name="P:OxyPlot.OxyPen.LineJoin">
            <summary>
            Gets or sets the line join type.
            </summary>
            <value>The line join type.</value>
        </member>
        <member name="P:OxyPlot.OxyPen.LineStyle">
            <summary>
            Gets or sets the line style (overridden by <see cref="P:OxyPlot.OxyPen.DashArray" />).
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:OxyPlot.OxyPen.Thickness">
            <summary>
            Gets or sets the line thickness.
            </summary>
            <value>The line thickness.</value>
        </member>
        <member name="P:OxyPlot.OxyPen.ActualDashArray">
            <summary>
            Gets the actual dash array.
            </summary>
            <value>The actual dash array.</value>
        </member>
        <member name="M:OxyPlot.OxyPen.Create(OxyPlot.OxyColor,System.Double,OxyPlot.LineStyle,OxyPlot.LineJoin)">
            <summary>
            Creates the specified pen.
            </summary>
            <param name="color">The color.</param>
            <param name="thickness">The thickness.</param>
            <param name="lineStyle">The line style.</param>
            <param name="lineJoin">The line join.</param>
            <returns>A pen.</returns>
        </member>
        <member name="M:OxyPlot.OxyPen.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:OxyPlot.OxyRect">
            <summary>
            Describes the width, height, and point origin of a rectangle.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyRect.Everything">
            <summary>
            Gets an infinitely large <see cref="T:OxyPlot.OxyRect"/> starting at (0,0).
            </summary>
        </member>
        <member name="F:OxyPlot.OxyRect.height">
            <summary>
            The height of the rectangle.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyRect.left">
            <summary>
            The x-coordinate location of the left side of the rectangle.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyRect.top">
            <summary>
            The y-coordinate location of the top side of the rectangle.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyRect.width">
            <summary>
            The width of the rectangle.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyRect.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyRect" /> structure that has the specified x-coordinate, y-coordinate, width, and height.
            </summary>
            <param name="left">The x-coordinate location of the left side of the rectangle.</param>
            <param name="top">The y-coordinate location of the top side of the rectangle.</param>
            <param name="width">The width of the rectangle.</param>
            <param name="height">The height of the rectangle.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">width;The width should not be negative.
            or
            height;The height should not be negative.</exception>
        </member>
        <member name="M:OxyPlot.OxyRect.#ctor(OxyPlot.ScreenPoint,OxyPlot.ScreenPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyRect" /> struct that is exactly large enough to contain the two specified points.
            </summary>
            <param name="p0">The first point that the new rectangle must contain.</param>
            <param name="p1">The second point that the new rectangle must contain.</param>
        </member>
        <member name="M:OxyPlot.OxyRect.#ctor(OxyPlot.ScreenPoint,OxyPlot.OxySize)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyRect"/> struct by location and size.
            </summary>
            <param name="p0">The location.</param>
            <param name="size">The size.</param>
        </member>
        <member name="P:OxyPlot.OxyRect.Bottom">
            <summary>
            Gets the y-axis value of the bottom of the rectangle.
            </summary>
            <value>The bottom.</value>
        </member>
        <member name="P:OxyPlot.OxyRect.Height">
            <summary>
            Gets the height of the rectangle.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:OxyPlot.OxyRect.Left">
            <summary>
            Gets the x-axis value of the left side of the rectangle.
            </summary>
            <value>The left.</value>
        </member>
        <member name="P:OxyPlot.OxyRect.Right">
            <summary>
            Gets the x-axis value of the right side of the rectangle.
            </summary>
            <value>The right.</value>
        </member>
        <member name="P:OxyPlot.OxyRect.Top">
            <summary>
            Gets the y-axis position of the top of the rectangle.
            </summary>
            <value>The top.</value>
        </member>
        <member name="P:OxyPlot.OxyRect.Width">
            <summary>
            Gets the width of the rectangle.
            </summary>
            <value>The width.</value>
        </member>
        <member name="P:OxyPlot.OxyRect.Center">
            <summary>
            Gets the center point of the rectangle.
            </summary>
            <value>The center.</value>
        </member>
        <member name="P:OxyPlot.OxyRect.TopLeft">
            <summary>
            Gets the top left corner of the rectangle.
            </summary>
            <value>The top left corner.</value>
        </member>
        <member name="P:OxyPlot.OxyRect.TopRight">
            <summary>
            Gets the top right corner of the rectangle.
            </summary>
            <value>The top right corner.</value>
        </member>
        <member name="P:OxyPlot.OxyRect.BottomLeft">
            <summary>
            Gets the bottom left corner of the rectangle.
            </summary>
            <value>The bottom left corner.</value>
        </member>
        <member name="P:OxyPlot.OxyRect.BottomRight">
            <summary>
            Gets the bottom right corner of the rectangle.
            </summary>
            <value>The bottom right corner.</value>
        </member>
        <member name="M:OxyPlot.OxyRect.Create(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Creates a rectangle from the specified corner coordinates.
            </summary>
            <param name="x0">The x0.</param>
            <param name="y0">The y0.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <returns>A rectangle.</returns>
        </member>
        <member name="M:OxyPlot.OxyRect.Contains(System.Double,System.Double)">
            <summary>
            Determines whether the specified point is inside the rectangle.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns><c>true</c> if the rectangle contains the specified point; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OxyPlot.OxyRect.Contains(OxyPlot.ScreenPoint)">
            <summary>
            Determines whether the specified point is inside the rectangle.
            </summary>
            <param name="p">The point.</param>
            <returns><c>true</c> if the rectangle contains the specified point; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OxyPlot.OxyRect.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:OxyPlot.OxyRect.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:OxyPlot.OxyRect.Equals(OxyPlot.OxyRect)">
            <summary>
            Determines whether this instance and another specified <see cref="T:OxyRect" /> object have the same value.
            </summary>
            <param name="other">The rectangle to compare to this instance.</param>
            <returns><c>true</c> if the value of the <paramref name="other" /> parameter is the same as the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OxyPlot.OxyRect.Inflate(System.Double,System.Double)">
            <summary>
            Returns a rectangle that is expanded or shrunk by the specified width and height amounts, in all directions.
            </summary>
            <param name="dx">The amount by which to expand or shrink the left and right sides of the rectangle.</param>
            <param name="dy">The amount by which to expand or shrink the top and bottom sides of the rectangle.</param>
            <returns>The expanded/shrunk <see cref="T:OxyPlot.OxyRect" />.</returns>
        </member>
        <member name="M:OxyPlot.OxyRect.Inflate(OxyPlot.OxyThickness)">
            <summary>
            Returns a rectangle that is expanded by the specified thickness, in all directions.
            </summary>
            <param name="t">The thickness to apply to the rectangle.</param>
            <returns>The inflated <see cref="T:OxyPlot.OxyRect" />.</returns>
        </member>
        <member name="M:OxyPlot.OxyRect.Intersect(OxyPlot.OxyRect)">
            <summary>
            Intersects this <see cref="T:OxyPlot.OxyRect"/> with another <see cref="T:OxyPlot.OxyRect"/>.
            </summary>
            <param name="rect">The other <see cref="T:OxyPlot.OxyRect"/>.</param>
            <returns>The intersection between this <see cref="T:OxyPlot.OxyRect"/> and the other <see cref="T:OxyPlot.OxyRect"/>.</returns>
            <remarks>If the two rectangles don't intersect, this returns an empty <see cref="T:OxyPlot.OxyRect"/>.</remarks>
        </member>
        <member name="M:OxyPlot.OxyRect.Deflate(OxyPlot.OxyThickness)">
            <summary>
            Returns a rectangle that is shrunk by the specified thickness, in all directions.
            </summary>
            <param name="t">The thickness to apply to the rectangle.</param>
            <returns>The deflated <see cref="T:OxyPlot.OxyRect" />.</returns>
        </member>
        <member name="M:OxyPlot.OxyRect.Offset(System.Double,System.Double)">
            <summary>
            Returns a rectangle that is moved by the specified horizontal and vertical amounts.
            </summary>
            <param name="offsetX">The amount to move the rectangle horizontally.</param>
            <param name="offsetY">The amount to move the rectangle vertically.</param>
            <returns>The moved <see cref="T:OxyPlot.OxyRect" />.</returns>
        </member>
        <member name="M:OxyPlot.OxyRect.Clip(OxyPlot.OxyRect)">
            <summary>
            Returns a rectangle that is clipped to the outer bounds of the specified rectangle.
            </summary>
            <param name="clipRect">The rectangle that defines the outermost allowed coordinates for the clipped rectangle.</param>
            <returns>The clipped rectangle.</returns>
        </member>
        <member name="T:OxyPlot.OxySize">
            <summary>
            Describes the size of an object.
            </summary>
        </member>
        <member name="F:OxyPlot.OxySize.Empty">
            <summary>
            Empty Size.
            </summary>
        </member>
        <member name="F:OxyPlot.OxySize.height">
            <summary>
            The height
            </summary>
        </member>
        <member name="F:OxyPlot.OxySize.width">
            <summary>
            The width
            </summary>
        </member>
        <member name="M:OxyPlot.OxySize.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxySize" /> struct.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="P:OxyPlot.OxySize.Height">
            <summary>
            Gets the height.
            </summary>
            <value>The height.</value>
        </member>
        <member name="P:OxyPlot.OxySize.Width">
            <summary>
            Gets the width.
            </summary>
            <value>The width.</value>
        </member>
        <member name="M:OxyPlot.OxySize.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:OxyPlot.OxySize.ToString(System.String,System.IFormatProvider)">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <param name="format">The format.</param>
            <param name="formatProvider">The format provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:OxyPlot.OxySize.Equals(OxyPlot.OxySize)">
            <summary>
            Determines whether this instance and another specified <see cref="T:OxySize" /> object have the same value.
            </summary>
            <param name="other">The size to compare to this instance.</param>
            <returns><c>true</c> if the value of the <paramref name="other" /> parameter is the same as the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OxyPlot.OxySize.Include(OxyPlot.OxySize)">
            <summary>
            Creates a new <see cref="T:OxyPlot.OxySize"/> with the maximum dimensions of this instance and the specified other instance.
            </summary>
            <param name="other">The other instance.</param>
            <returns>A new <see cref="T:OxyPlot.OxySize"/>.</returns>
        </member>
        <member name="T:OxyPlot.OxySizeExtensions">
            <summary>
            Provides extension methods for <see cref="T:OxyPlot.OxySize"/>
            </summary>
            <remarks>These are pure methods. They could also be placed in the <see cref="T:OxyPlot.OxySize" /> type with a PureAttribute.</remarks>
        </member>
        <member name="M:OxyPlot.OxySizeExtensions.GetBounds(OxyPlot.OxySize,System.Double,OxyPlot.HorizontalAlignment,OxyPlot.VerticalAlignment)">
            <summary>
            Calculates the bounds with respect to rotation angle and horizontal/vertical alignment.
            </summary>
            <param name="bounds">The size of the object to calculate bounds for.</param>
            <param name="angle">The rotation angle (degrees).</param>
            <param name="horizontalAlignment">The horizontal alignment.</param>
            <param name="verticalAlignment">The vertical alignment.</param>
            <returns>A minimum bounding rectangle.</returns>
        </member>
        <member name="M:OxyPlot.OxySizeExtensions.GetPolygon(OxyPlot.OxySize,OxyPlot.ScreenPoint,System.Double,OxyPlot.HorizontalAlignment,OxyPlot.VerticalAlignment)">
            <summary>
            Gets the polygon outline of the specified rotated and aligned box.
            </summary>
            <param name="size">The size of the  box.</param>
            <param name="origin">The origin of the box.</param>
            <param name="angle">The rotation angle of the box.</param>
            <param name="horizontalAlignment">The horizontal alignment of the box.</param>
            <param name="verticalAlignment">The vertical alignment of the box.</param>
            <returns>A sequence of points defining the polygon outline of the box.</returns>
        </member>
        <member name="T:OxyPlot.OxyThickness">
            <summary>
            Describes the thickness of a frame around a rectangle. Four <see cref="T:System.Double" /> values describe the left, top, right, and bottom sides of the rectangle, respectively.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyThickness.bottom">
            <summary>
            The bottom.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyThickness.left">
            <summary>
            The left.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyThickness.right">
            <summary>
            The right.
            </summary>
        </member>
        <member name="F:OxyPlot.OxyThickness.top">
            <summary>
            The top.
            </summary>
        </member>
        <member name="M:OxyPlot.OxyThickness.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyThickness" /> struct.
            </summary>
            <param name="thickness">The thickness.</param>
        </member>
        <member name="M:OxyPlot.OxyThickness.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.OxyThickness" /> struct.
            </summary>
            <param name="left">The left.</param>
            <param name="top">The top.</param>
            <param name="right">The right.</param>
            <param name="bottom">The bottom.</param>
        </member>
        <member name="P:OxyPlot.OxyThickness.Bottom">
            <summary>
            Gets the bottom thickness.
            </summary>
            <value>The bottom thickness.</value>
        </member>
        <member name="P:OxyPlot.OxyThickness.Left">
            <summary>
            Gets the left thickness.
            </summary>
            <value>The left thickness.</value>
        </member>
        <member name="P:OxyPlot.OxyThickness.Right">
            <summary>
            Gets the right thickness.
            </summary>
            <value>The right thickness.</value>
        </member>
        <member name="P:OxyPlot.OxyThickness.Top">
            <summary>
            Gets the top thickness.
            </summary>
            <value>The top thickness.</value>
        </member>
        <member name="M:OxyPlot.OxyThickness.ToCode">
            <summary>
            Returns C# code that generates this instance.
            </summary>
            <returns>The to code.</returns>
        </member>
        <member name="M:OxyPlot.OxyThickness.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:OxyPlot.OxyThickness.Equals(OxyPlot.OxyThickness)">
            <summary>
            Determines whether this instance and another specified <see cref="T:OxyThickness" /> object have the same value.
            </summary>
            <param name="other">The thickness to compare to this instance.</param>
            <returns><c>true</c> if the value of the <paramref name="other" /> parameter is the same as the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OxyPlot.OxyThickness.Include(OxyPlot.OxyThickness)">
            <summary>
            Creates a new <see cref="T:OxyPlot.OxyThickness"/> with the maximum dimensions of this instance and the specified other instance.
            </summary>
            <param name="other">The other instance.</param>
            <returns>A new <see cref="T:OxyPlot.OxyThickness"/>.</returns>
        </member>
        <member name="T:OxyPlot.ClippingRenderContext">
            <summary>
            Provides an abstract base class for rendering contexts that implements a clipping stack.
            </summary>
        </member>
        <member name="M:OxyPlot.ClippingRenderContext.PopClip">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.ClippingRenderContext.PushClip(OxyPlot.OxyRect)">
            <inheritdoc/>
        </member>
        <member name="P:OxyPlot.ClippingRenderContext.ClipCount">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.ClippingRenderContext.ResetClip">
            <summary>
            Resets the clipping area.
            </summary>
        </member>
        <member name="M:OxyPlot.ClippingRenderContext.SetClip(OxyPlot.OxyRect)">
            <summary>
            Sets the clipping area to the specified rectangle.
            </summary>
            <param name="clippingRectangle">The rectangle.</param>
            <remarks>
            Calls to this method must always be balanced by a call to <see cref="M:OxyPlot.ClippingRenderContext.ResetClip"/> before calling <see cref="M:OxyPlot.ClippingRenderContext.SetClip(OxyPlot.OxyRect)"/> again.
            </remarks>
        </member>
        <member name="T:OxyPlot.EdgeRenderingMode">
            <summary>
            Enumerates the available edge rendering modes. This gives an indication to the renderer which tradoffs to make between sharpness, speed and geomitric accuracy
            when rendering shapes like lines, polygons, ellipses etc.
            </summary>
        </member>
        <member name="F:OxyPlot.EdgeRenderingMode.Automatic">
            <summary>
            Indicates that a rendering mode should be chosen automatically by the <see cref="T:OxyPlot.PlotElement"/>. The renderer will treat this equivalently to <see cref="F:OxyPlot.EdgeRenderingMode.Adaptive"/>.
            </summary>
        </member>
        <member name="F:OxyPlot.EdgeRenderingMode.Adaptive">
            <summary>
            The renderer will try to find the best rendering mode depending on the rendered shape.
            </summary>
        </member>
        <member name="F:OxyPlot.EdgeRenderingMode.PreferSharpness">
            <summary>
            The renderer will try to maximise the sharpness of edges. To that end, it may disable Anti-Aliasing for some lines or snap the position and stroke thickness 
            of rendered elements to device pixels.
            </summary>
        </member>
        <member name="F:OxyPlot.EdgeRenderingMode.PreferSpeed">
            <summary>
            The renderer will try to maximise the rendering speed. To that end, it may disable Anti-Aliasing.
            </summary>
        </member>
        <member name="F:OxyPlot.EdgeRenderingMode.PreferGeometricAccuracy">
            <summary>
            The renderer will try to maximise geometric accuracy. To that end, it may enable Anti-Aliasing even for straight lines.
            </summary>
        </member>
        <member name="T:OxyPlot.IRenderContext">
            <summary>
            Specifies functionality to render 2D graphics.
            </summary>
        </member>
        <member name="P:OxyPlot.IRenderContext.RendersToScreen">
            <summary>
            Gets a value indicating whether the context renders to screen.
            </summary>
            <value><c>true</c> if the context renders to screen; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:OxyPlot.IRenderContext.DrawEllipse(OxyPlot.OxyRect,OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode)">
            <summary>
            Draws an ellipse.
            </summary>
            <param name="extents">The rectangle defining the extents of the ellipse.</param>
            <param name="fill">The fill color. If set to <c>OxyColors.Undefined</c>, the extents will not be filled.</param>
            <param name="stroke">The stroke color. If set to <c>OxyColors.Undefined</c>, the extents will not be stroked.</param>
            <param name="thickness">The thickness (in device independent units, 1/96 inch).</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
        </member>
        <member name="M:OxyPlot.IRenderContext.DrawEllipses(System.Collections.Generic.IList{OxyPlot.OxyRect},OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode)">
            <summary>
            Draws a collection of ellipses, where all have the same stroke and fill.
            </summary>
            <param name="extents">The rectangles defining the extents of the ellipses.</param>
            <param name="fill">The fill color. If set to <c>OxyColors.Undefined</c>, the ellipses will not be filled.</param>
            <param name="stroke">The stroke color. If set to <c>OxyColors.Undefined</c>, the ellipses will not be stroked.</param>
            <param name="thickness">The stroke thickness (in device independent units, 1/96 inch).</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
            <remarks>
            This should have better performance than calling <see cref="M:OxyPlot.IRenderContext.DrawEllipse(OxyPlot.OxyRect,OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode)" /> multiple times.
            </remarks>
        </member>
        <member name="M:OxyPlot.IRenderContext.DrawLine(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Double[],OxyPlot.LineJoin)">
            <summary>
            Draws a polyline.
            </summary>
            <param name="points">The points defining the polyline. The polyline is drawn from point 0, to point 1, to point 2 and so on.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness (in device independent units, 1/96 inch).</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
            <param name="dashArray">The dash array (in device independent units, 1/96 inch). Use <c>null</c> to get a solid line.</param>
            <param name="lineJoin">The line join type.</param>
        </member>
        <member name="M:OxyPlot.IRenderContext.DrawLineSegments(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Double[],OxyPlot.LineJoin)">
            <summary>
            Draws line segments.
            </summary>
            <param name="points">The points defining the line segments. Lines are drawn from point 0 to 1, point 2 to 3 and so on.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness (in device independent units, 1/96 inch).</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
            <param name="dashArray">The dash array (in device independent units, 1/96 inch).</param>
            <param name="lineJoin">The line join type.</param>
            <remarks>
            This should have better performance than calling <see cref="M:OxyPlot.IRenderContext.DrawLine(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Double[],OxyPlot.LineJoin)" /> for each segment.
            </remarks>
        </member>
        <member name="M:OxyPlot.IRenderContext.DrawPolygon(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Double[],OxyPlot.LineJoin)">
            <summary>
            Draws a polygon.
            </summary>
            <param name="points">The points defining the polygon.</param>
            <param name="fill">The fill color. If set to <c>OxyColors.Undefined</c>, the polygon will not be filled.</param>
            <param name="stroke">The stroke color. If set to <c>OxyColors.Undefined</c>, the polygon will not be stroked.</param>
            <param name="thickness">The stroke thickness (in device independent units, 1/96 inch).</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
            <param name="dashArray">The dash array (in device independent units, 1/96 inch).</param>
            <param name="lineJoin">The line join type.</param>
        </member>
        <member name="M:OxyPlot.IRenderContext.DrawPolygons(System.Collections.Generic.IList{System.Collections.Generic.IList{OxyPlot.ScreenPoint}},OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Double[],OxyPlot.LineJoin)">
            <summary>
            Draws a collection of polygons, where all polygons have the same stroke and fill.
            </summary>
            <param name="polygons">The polygons to draw.</param>
            <param name="fill">The fill color. If set to <c>OxyColors.Undefined</c>, the polygons will not be filled.</param>
            <param name="stroke">The stroke color. If set to <c>OxyColors.Undefined</c>, the polygons will not be stroked.</param>
            <param name="thickness">The stroke thickness (in device independent units, 1/96 inch).</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
            <param name="dashArray">The dash array (in device independent units, 1/96 inch).</param>
            <param name="lineJoin">The line join type.</param>
            <remarks>
            This performs better than calling <see cref="M:OxyPlot.IRenderContext.DrawPolygon(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Double[],OxyPlot.LineJoin)" /> multiple times.
            </remarks>
        </member>
        <member name="M:OxyPlot.IRenderContext.DrawRectangle(OxyPlot.OxyRect,OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode)">
            <summary>
            Draws a rectangle.
            </summary>
            <param name="rectangle">The rectangle to draw.</param>
            <param name="fill">The fill color. If set to <c>OxyColors.Undefined</c>, the rectangle will not be filled.</param>
            <param name="stroke">The stroke color. If set to <c>OxyColors.Undefined</c>, the rectangle will not be stroked.</param>
            <param name="thickness">The stroke thickness (in device independent units, 1/96 inch).</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
        </member>
        <member name="M:OxyPlot.IRenderContext.DrawRectangles(System.Collections.Generic.IList{OxyPlot.OxyRect},OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode)">
            <summary>
            Draws a collection of extents, where all have the same stroke and fill.
            </summary>
            <param name="rectangles">The extents to draw.</param>
            <param name="fill">The fill color. If set to <c>OxyColors.Undefined</c>, the extents will not be filled.</param>
            <param name="stroke">The stroke color. If set to <c>OxyColors.Undefined</c>, the extents will not be stroked.</param>
            <param name="thickness">The stroke thickness (in device independent units, 1/96 inch).</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
            <remarks>
            This should have better performance than calling <see cref="M:OxyPlot.IRenderContext.DrawRectangle(OxyPlot.OxyRect,OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode)" /> multiple times.
            </remarks>
        </member>
        <member name="M:OxyPlot.IRenderContext.DrawText(OxyPlot.ScreenPoint,System.String,OxyPlot.OxyColor,System.String,System.Double,System.Double,System.Double,OxyPlot.HorizontalAlignment,OxyPlot.VerticalAlignment,System.Nullable{OxyPlot.OxySize})">
            <summary>
            Draws text.
            </summary>
            <param name="p">The position.</param>
            <param name="text">The text.</param>
            <param name="fill">The text color.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font (in device independent units, 1/96 inch).</param>
            <param name="fontWeight">The font weight.</param>
            <param name="rotation">The rotation angle.</param>
            <param name="horizontalAlignment">The horizontal alignment.</param>
            <param name="verticalAlignment">The vertical alignment.</param>
            <param name="maxSize">The maximum size of the text (in device independent units, 1/96 inch). If set to <c>null</c>, the text will not be clipped.</param>
            <remarks>
            Multi-line text is not supported.
            </remarks>
        </member>
        <member name="M:OxyPlot.IRenderContext.MeasureText(System.String,System.String,System.Double,System.Double)">
            <summary>
            Measures the size of the specified text.
            </summary>
            <param name="text">The text to measure.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font (in device independent units, 1/96 inch).</param>
            <param name="fontWeight">The font weight.</param>
            <returns>The size of the text (in device independent units, 1/96 inch).</returns>
        </member>
        <member name="M:OxyPlot.IRenderContext.SetToolTip(System.String)">
            <summary>
            Sets the tool tip for the following items.
            </summary>
            <param name="text">The text in the tool tip, or <c>null</c> if no tool tip should be shown.</param>
        </member>
        <member name="M:OxyPlot.IRenderContext.CleanUp">
            <summary>
            Cleans up resources not in use.
            </summary>
            <remarks>This method is called at the end of each rendering.</remarks>
        </member>
        <member name="M:OxyPlot.IRenderContext.DrawImage(OxyPlot.OxyImage,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Draws a portion of the specified <see cref="T:OxyPlot.OxyImage" />.
            </summary>
            <param name="source">The source.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="destX">The x-coordinate of the upper-left corner of drawn image.</param>
            <param name="destY">The y-coordinate of the upper-left corner of drawn image.</param>
            <param name="destWidth">The width of the drawn image.</param>
            <param name="destHeight">The height of the drawn image.</param>
            <param name="opacity">The opacity.</param>
            <param name="interpolate">interpolate if set to <c>true</c>.</param>
        </member>
        <member name="M:OxyPlot.IRenderContext.PushClip(OxyPlot.OxyRect)">
            <summary>
            Pushes the clipping rectangle onto the clipping stack.
            </summary>
            <param name="clippingRectangle">The clipping rectangle.</param>
            <remarks>
            If there is already a clipping rectangle on the clipping stack, the new clipping rectangle will be intersected with the existing clipping rectangle.
            Calls to this method must be balanced by a call to <see cref="M:OxyPlot.IRenderContext.PopClip"/>.
            It is recommended to use <see cref="M:OxyPlot.RenderingExtensions.AutoResetClip(OxyPlot.IRenderContext,OxyPlot.OxyRect)"/> in combination with a <c>using</c> statement instead of <see cref="M:OxyPlot.IRenderContext.PushClip(OxyPlot.OxyRect)"/> and <see cref="M:OxyPlot.IRenderContext.PopClip"/> if possible.
            However if <see cref="M:OxyPlot.IRenderContext.PushClip(OxyPlot.OxyRect)"/> and <see cref="M:OxyPlot.IRenderContext.PopClip"/> are used directly, it is recommended to wrap them in a try...finally block.
            </remarks>
        </member>
        <member name="M:OxyPlot.IRenderContext.PopClip">
            <summary>
            Pops the most recently pushed clipping rectangle from the clipping stack.
            </summary>
        </member>
        <member name="P:OxyPlot.IRenderContext.ClipCount">
            <summary>
            Gets the number of clipping rectangles on the clipping stack.
            </summary>
        </member>
        <member name="T:OxyPlot.MathRenderingExtensions">
            <summary>
            Provides functionality to render mathematical expressions.
            </summary>
        </member>
        <member name="M:OxyPlot.MathRenderingExtensions.#cctor">
            <summary>
            Initializes static members of the <see cref = "T:OxyPlot.MathRenderingExtensions" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.MathRenderingExtensions.SubAlignment">
            <summary>
            Gets or sets the subscript alignment.
            </summary>
        </member>
        <member name="P:OxyPlot.MathRenderingExtensions.SubSize">
            <summary>
            Gets or sets the subscript size.
            </summary>
        </member>
        <member name="P:OxyPlot.MathRenderingExtensions.SuperAlignment">
            <summary>
            Gets or sets the superscript alignment.
            </summary>
        </member>
        <member name="P:OxyPlot.MathRenderingExtensions.SuperSize">
            <summary>
            Gets or sets the superscript size.
            </summary>
        </member>
        <member name="M:OxyPlot.MathRenderingExtensions.DrawMathText(OxyPlot.IRenderContext,OxyPlot.ScreenPoint,System.String,OxyPlot.OxyColor,System.String,System.Double,System.Double,System.Double,OxyPlot.HorizontalAlignment,OxyPlot.VerticalAlignment,System.Nullable{OxyPlot.OxySize},System.Boolean)">
            <summary>
            Draws or measures text containing sub- and superscript.
            </summary>
            <param name="rc">The render context.</param>
            <param name="pt">The point.</param>
            <param name="text">The text.</param>
            <param name="textColor">Color of the text.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">The font size.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="angle">The angle.</param>
            <param name="ha">The horizontal alignment.</param>
            <param name="va">The vertical alignment.</param>
            <param name="maxSize">The maximum size of the text.</param>
            <param name="measure">Measure the size of the text if set to <c>true</c>.</param>
            <returns>The size of the text.</returns>
            <example>Subscript: H_{2}O
            Superscript: E=mc^{2}
            Both: A^{2}_{i,j}</example>
        </member>
        <member name="M:OxyPlot.MathRenderingExtensions.DrawMathText(OxyPlot.IRenderContext,OxyPlot.ScreenPoint,System.String,OxyPlot.OxyColor,System.String,System.Double,System.Double,System.Double,OxyPlot.HorizontalAlignment,OxyPlot.VerticalAlignment,System.Nullable{OxyPlot.OxySize})">
            <summary>
            Draws text containing sub- and superscript.
            </summary>
            <param name="rc">The render context.</param>
            <param name="pt">The point.</param>
            <param name="text">The text.</param>
            <param name="textColor">Color of the text.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">The font size.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="angle">The angle.</param>
            <param name="ha">The horizontal alignment.</param>
            <param name="va">The vertical alignment.</param>
            <param name="maxSize">The maximum size of the text.</param>
            <example>Subscript: H_{2}O
            Superscript: E=mc^{2}
            Both: A^{2}_{i,j}</example>
        </member>
        <member name="M:OxyPlot.MathRenderingExtensions.MeasureMathText(OxyPlot.IRenderContext,System.String,System.String,System.Double,System.Double)">
            <summary>
            The measure math text.
            </summary>
            <param name="rc">The render context.</param>
            <param name="text">The text.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">The font size.</param>
            <param name="fontWeight">The font weight.</param>
            <returns>The size of the text.</returns>
        </member>
        <member name="M:OxyPlot.MathRenderingExtensions.InternalDrawMathText(OxyPlot.IRenderContext,System.Double,System.Double,System.Double,System.Double,System.String,OxyPlot.OxyColor,System.String,System.Double,System.Double,System.Boolean,System.Double)">
            <summary>
            Draws text with sub- and superscript items.
            </summary>
            <param name="rc">The render context.</param>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="dx">The x offset (in rotated coordinates).</param>
            <param name="dy">The y offset (in rotated coordinates).</param>
            <param name="s">The s.</param>
            <param name="textColor">The text color.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">The font size.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="measureOnly">Only measure if set to <c>true</c>.</param>
            <param name="angle">The angle of the text (degrees).</param>
            <returns>The size of the text.</returns>
        </member>
        <member name="T:OxyPlot.RenderContextBase">
            <summary>
            Provides an abstract base class for rendering contexts.
            </summary>
        </member>
        <member name="M:OxyPlot.RenderContextBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.RenderContextBase" /> class.
            </summary>
        </member>
        <member name="M:OxyPlot.RenderContextBase.IsStraightLine(OxyPlot.ScreenPoint,OxyPlot.ScreenPoint)">
            <summary>
            Gets a value indicating whether the specified points form a straight line (i.e. parallel to the pixel raster).
            </summary>
            <remarks>
            To determine whether a line is straight, the coordinates of <paramref name="p1"/> and <paramref name="p2"/> are compared. If either the X or the Y
            coordinates (or both) of both points are very close together, the line is considered straight. The threshold of what is considered 'very close' 
            is fixed at 1e-5.
            </remarks>
            <param name="p1">The first point.</param>
            <param name="p2">The second point.</param>
            <returns>true if the points form a straight line; false otherwise.</returns>
        </member>
        <member name="M:OxyPlot.RenderContextBase.IsStraightLine(System.Collections.Generic.IList{OxyPlot.ScreenPoint})">
            <summary>
            Gets a value indicating whether the specified points form a straight line (i.e. parallel to the pixel raster).
            </summary>
            <param name="points">The points.</param>
            <returns>true if the points form a straight line; false otherwise.</returns>
        </member>
        <member name="P:OxyPlot.RenderContextBase.RendersToScreen">
            <summary>
            Gets or sets a value indicating whether the context renders to screen.
            </summary>
            <value><c>true</c> if the context renders to screen; otherwise, <c>false</c>.</value>
        </member>
        <member name="M:OxyPlot.RenderContextBase.DrawEllipse(OxyPlot.OxyRect,OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.RenderContextBase.DrawEllipses(System.Collections.Generic.IList{OxyPlot.OxyRect},OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.RenderContextBase.DrawLine(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Double[],OxyPlot.LineJoin)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.RenderContextBase.DrawLineSegments(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Double[],OxyPlot.LineJoin)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.RenderContextBase.DrawPolygon(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Double[],OxyPlot.LineJoin)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.RenderContextBase.DrawPolygons(System.Collections.Generic.IList{System.Collections.Generic.IList{OxyPlot.ScreenPoint}},OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Double[],OxyPlot.LineJoin)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.RenderContextBase.DrawRectangle(OxyPlot.OxyRect,OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.RenderContextBase.DrawRectangles(System.Collections.Generic.IList{OxyPlot.OxyRect},OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.RenderContextBase.DrawText(OxyPlot.ScreenPoint,System.String,OxyPlot.OxyColor,System.String,System.Double,System.Double,System.Double,OxyPlot.HorizontalAlignment,OxyPlot.VerticalAlignment,System.Nullable{OxyPlot.OxySize})">
            <summary>
            Draws the text.
            </summary>
            <param name="p">The position of the text.</param>
            <param name="text">The text.</param>
            <param name="fill">The fill color.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="rotate">The rotation angle.</param>
            <param name="halign">The horizontal alignment.</param>
            <param name="valign">The vertical alignment.</param>
            <param name="maxSize">The maximum size of the text.</param>
        </member>
        <member name="M:OxyPlot.RenderContextBase.MeasureText(System.String,System.String,System.Double,System.Double)">
            <summary>
            Measures the text.
            </summary>
            <param name="text">The text.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontWeight">The font weight.</param>
            <returns>The text size.</returns>
        </member>
        <member name="M:OxyPlot.RenderContextBase.SetToolTip(System.String)">
            <summary>
            Sets the tool tip for the following items.
            </summary>
            <param name="text">The text in the tooltip.</param>
        </member>
        <member name="M:OxyPlot.RenderContextBase.CleanUp">
            <summary>
            Cleans up resources not in use.
            </summary>
            <remarks>This method is called at the end of each rendering.</remarks>
        </member>
        <member name="M:OxyPlot.RenderContextBase.DrawImage(OxyPlot.OxyImage,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Draws the specified portion of the specified <see cref="T:OxyPlot.OxyImage" /> at the specified location and with the specified size.
            </summary>
            <param name="source">The source.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="destX">The x-coordinate of the upper-left corner of drawn image.</param>
            <param name="destY">The y-coordinate of the upper-left corner of drawn image.</param>
            <param name="destWidth">The width of the drawn image.</param>
            <param name="destHeight">The height of the drawn image.</param>
            <param name="opacity">The opacity.</param>
            <param name="interpolate">Interpolate if set to <c>true</c>.</param>
        </member>
        <member name="M:OxyPlot.RenderContextBase.PopClip">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.RenderContextBase.PushClip(OxyPlot.OxyRect)">
            <inheritdoc/>
        </member>
        <member name="P:OxyPlot.RenderContextBase.ClipCount">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.RenderContextBase.CreateEllipse(OxyPlot.OxyRect,System.Int32)">
            <summary>
            Creates an ellipse polygon.
            </summary>
            <param name="rect">The bounding rectangle.</param>
            <param name="n">The number of points.</param>
            <returns>The points defining the ellipse.</returns>
            <remarks>Note that this is very slow, not optimized in any way.</remarks>
        </member>
        <member name="M:OxyPlot.RenderContextBase.CreateRectangle(OxyPlot.OxyRect)">
            <summary>
            Creates a rectangle polygon.
            </summary>
            <param name="rect">The rectangle.</param>
            <returns>The points defining the rectangle.</returns>
        </member>
        <member name="M:OxyPlot.RenderContextBase.ShouldUseAntiAliasingForRect(OxyPlot.EdgeRenderingMode)">
            <summary>
            Returns a value indicating whether anti-aliasing should be used for the given edge rendering mode.
            </summary>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
            <returns>true if anti-aliasing should be used; false otherwise.</returns>
        </member>
        <member name="M:OxyPlot.RenderContextBase.ShouldUseAntiAliasingForEllipse(OxyPlot.EdgeRenderingMode)">
            <summary>
            Returns a value indicating whether anti-aliasing should be used for the given edge rendering mode.
            </summary>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
            <returns>true if anti-aliasing should be used; false otherwise.</returns>
        </member>
        <member name="M:OxyPlot.RenderContextBase.ShouldUseAntiAliasingForLine(OxyPlot.EdgeRenderingMode,System.Collections.Generic.IList{OxyPlot.ScreenPoint})">
            <summary>
            Returns a value indicating whether anti-aliasing should be used for the given edge rendering mode.
            </summary>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
            <param name="points">The points.</param>
            <returns>true if anti-aliasing should be used; false otherwise.</returns>
        </member>
        <member name="T:OxyPlot.RenderingExtensions">
            <summary>
            Provides extension methods for <see cref="T:OxyPlot.IRenderContext" />.
            </summary>
        </member>
        <member name="F:OxyPlot.RenderingExtensions.M1">
            <summary>
            The vertical distance to the bottom points of the triangles.
            </summary>
        </member>
        <member name="F:OxyPlot.RenderingExtensions.M2">
            <summary>
            The vertical distance to the top points of the triangles .
            </summary>
        </member>
        <member name="F:OxyPlot.RenderingExtensions.M3">
            <summary>
            The horizontal/vertical distance to the end points of the stars.
            </summary>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.GetActual(OxyPlot.EdgeRenderingMode,OxyPlot.EdgeRenderingMode)">
            <summary>
            Gets the actual edge rendering mode.
            </summary>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
            <param name="defaultValue">The default value that is used if edgeRenderingMode is <see cref="F:OxyPlot.EdgeRenderingMode.Automatic"/>.</param>
            <returns>The value of edgeRenderingMode if it is not <see cref="F:OxyPlot.EdgeRenderingMode.Automatic"/>; the <paramref name="defaultValue"/> otherwise.</returns>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.DrawReducedLine(OxyPlot.IRenderContext,System.Collections.Generic.IList{OxyPlot.ScreenPoint},System.Double,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Double[],OxyPlot.LineJoin,System.Collections.Generic.List{OxyPlot.ScreenPoint},System.Action{System.Collections.Generic.IList{OxyPlot.ScreenPoint}})">
            <summary>
            Draws a clipped polyline through the specified points.
            </summary>
            <param name="rc">The render context.</param>
            <param name="points">The points.</param>
            <param name="minDistSquared">The minimum line segment length (squared).</param>
            <param name="stroke">The stroke color.</param>
            <param name="strokeThickness">The stroke thickness.</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
            <param name="dashArray">The dash array (in device independent units, 1/96 inch).</param>
            <param name="lineJoin">The line join.</param>
            <param name="outputBuffer">The output buffer.</param>
            <param name="pointsRendered">The points rendered callback.</param>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.DrawReducedPolygon(OxyPlot.IRenderContext,System.Collections.Generic.IList{OxyPlot.ScreenPoint},System.Double,OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,OxyPlot.LineStyle,OxyPlot.LineJoin)">
            <summary>
            Draws the polygon within the specified clipping rectangle.
            </summary>
            <param name="rc">The render context.</param>
            <param name="points">The points.</param>
            <param name="minDistSquared">The squared minimum distance between points.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="strokeThickness">The stroke thickness.</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
            <param name="lineStyle">The line style.</param>
            <param name="lineJoin">The line join.</param>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.DrawImage(OxyPlot.IRenderContext,OxyPlot.OxyImage,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Draws the specified image.
            </summary>
            <param name="rc">The render context.</param>
            <param name="image">The image.</param>
            <param name="x">The destination X position.</param>
            <param name="y">The destination Y position.</param>
            <param name="w">The width.</param>
            <param name="h">The height.</param>
            <param name="opacity">The opacity.</param>
            <param name="interpolate">Interpolate the image if set to <c>true</c>.</param>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.DrawMultilineText(OxyPlot.IRenderContext,OxyPlot.ScreenPoint,System.String,OxyPlot.OxyColor,System.String,System.Double,System.Double,System.Double)">
            <summary>
            Draws multi-line text at the specified point.
            </summary>
            <param name="rc">The render context.</param>
            <param name="point">The point.</param>
            <param name="text">The text.</param>
            <param name="color">The text color.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">The font size.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="dy">The line spacing.</param>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.DrawLine(OxyPlot.IRenderContext,System.Double,System.Double,System.Double,System.Double,OxyPlot.OxyPen,OxyPlot.EdgeRenderingMode)">
            <summary>
            Draws a line specified by coordinates.
            </summary>
            <param name="rc">The render context.</param>
            <param name="x0">The x0.</param>
            <param name="y0">The y0.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
            <param name="pen">The pen.</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.DrawLineSegments(OxyPlot.IRenderContext,System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyPen,OxyPlot.EdgeRenderingMode)">
            <summary>
            Draws the line segments.
            </summary>
            <param name="rc">The render context.</param>
            <param name="points">The points.</param>
            <param name="pen">The pen.</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.DrawMarker(OxyPlot.IRenderContext,OxyPlot.ScreenPoint,OxyPlot.MarkerType,System.Collections.Generic.IList{OxyPlot.ScreenPoint},System.Double,OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode)">
            <summary>
            Renders the marker.
            </summary>
            <param name="rc">The render context.</param>
            <param name="p">The center point of the marker.</param>
            <param name="type">The marker type.</param>
            <param name="outline">The outline.</param>
            <param name="size">The size of the marker.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="strokeThickness">The stroke thickness.</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.DrawMarkers(OxyPlot.IRenderContext,System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.MarkerType,System.Collections.Generic.IList{OxyPlot.ScreenPoint},System.Double,OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Int32,OxyPlot.ScreenPoint)">
            <summary>
            Draws a list of markers.
            </summary>
            <param name="rc">The render context.</param>
            <param name="markerPoints">The marker points.</param>
            <param name="markerType">Type of the marker.</param>
            <param name="markerOutline">The marker outline.</param>
            <param name="markerSize">Size of the marker.</param>
            <param name="markerFill">The marker fill.</param>
            <param name="markerStroke">The marker stroke.</param>
            <param name="markerStrokeThickness">The marker stroke thickness.</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
            <param name="resolution">The resolution.</param>
            <param name="binOffset">The bin Offset.</param>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.DrawMarkers(OxyPlot.IRenderContext,System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.MarkerType,System.Collections.Generic.IList{OxyPlot.ScreenPoint},System.Collections.Generic.IList{System.Double},OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Int32,OxyPlot.ScreenPoint)">
            <summary>
            Draws a list of markers.
            </summary>
            <param name="rc">The render context.</param>
            <param name="markerPoints">The marker points.</param>
            <param name="markerType">Type of the marker.</param>
            <param name="markerOutline">The marker outline.</param>
            <param name="markerSize">Size of the markers.</param>
            <param name="markerFill">The marker fill.</param>
            <param name="markerStroke">The marker stroke.</param>
            <param name="markerStrokeThickness">The marker stroke thickness.</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
            <param name="resolution">The resolution.</param>
            <param name="binOffset">The bin Offset.</param>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.DrawCircle(OxyPlot.IRenderContext,System.Double,System.Double,System.Double,OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode)">
            <summary>
            Draws a circle at the specified position.
            </summary>
            <param name="rc">The render context.</param>
            <param name="x">The center x-coordinate.</param>
            <param name="y">The center y-coordinate.</param>
            <param name="r">The radius.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The thickness.</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.DrawCircle(OxyPlot.IRenderContext,OxyPlot.ScreenPoint,System.Double,OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode)">
            <summary>
            Draws a circle at the specified position.
            </summary>
            <param name="rc">The render context.</param>
            <param name="center">The center.</param>
            <param name="r">The radius.</param>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The thickness.</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.FillCircle(OxyPlot.IRenderContext,OxyPlot.ScreenPoint,System.Double,OxyPlot.OxyColor,OxyPlot.EdgeRenderingMode)">
            <summary>
            Fills a circle at the specified position.
            </summary>
            <param name="rc">The render context.</param>
            <param name="center">The center.</param>
            <param name="r">The radius.</param>
            <param name="fill">The fill color.</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.FillRectangle(OxyPlot.IRenderContext,OxyPlot.OxyRect,OxyPlot.OxyColor,OxyPlot.EdgeRenderingMode)">
            <summary>
            Fills a rectangle at the specified position.
            </summary>
            <param name="rc">The render context.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="fill">The fill color.</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.DrawRectangle(OxyPlot.IRenderContext,OxyPlot.OxyRect,OxyPlot.OxyColor,OxyPlot.OxyThickness,OxyPlot.EdgeRenderingMode)">
            <summary>
            Draws the outline of a rectangle with individual stroke thickness for each side.
            </summary>
            <param name="rc">The render context.</param>
            <param name="rect">The rectangle.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The thickness.</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.MeasureText(OxyPlot.IRenderContext,System.String,System.String,System.Double,System.Double,System.Double)">
            <summary>
            Measures the size of the specified text.
            </summary>
            <param name="rc">The render context.</param>
            <param name="text">The text.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font (in device independent units, 1/96 inch).</param>
            <param name="fontWeight">The font weight.</param>
            <param name="angle">The angle of measured text (degrees).</param>
            <returns>The size of the text (in device independent units, 1/96 inch).</returns>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.AutoResetClip(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Applies the specified clipping rectangle the the render context and returns a reset token. The clipping is reset once this token is disposed.
            </summary>
            <param name="rc">The render context.</param>
            <param name="clippingRectangle">The clipping rectangle.</param>
            <returns>The reset token. Clipping is reset once this is disposed.</returns>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.AddMarkerGeometry(OxyPlot.ScreenPoint,OxyPlot.MarkerType,System.Collections.Generic.IEnumerable{OxyPlot.ScreenPoint},System.Double,System.Collections.Generic.IList{OxyPlot.OxyRect},System.Collections.Generic.IList{OxyPlot.OxyRect},System.Collections.Generic.IList{System.Collections.Generic.IList{OxyPlot.ScreenPoint}},System.Collections.Generic.IList{OxyPlot.ScreenPoint})">
            <summary>
            Adds a marker geometry to the specified collections.
            </summary>
            <param name="p">The position of the marker.</param>
            <param name="type">The marker type.</param>
            <param name="outline">The custom outline, if <paramref name="type" /> is <see cref="F:OxyPlot.MarkerType.Custom" />.</param>
            <param name="size">The size of the marker.</param>
            <param name="ellipses">The output ellipse collection.</param>
            <param name="rects">The output rectangle collection.</param>
            <param name="polygons">The output polygon collection.</param>
            <param name="lines">The output line collection.</param>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.MeasureRotatedRectangleBound(OxyPlot.OxySize,System.Double)">
            <summary>
            Calculates the bounds with respect to rotation angle and horizontal/vertical alignment.
            </summary>
            <param name="bounds">The size of the object to calculate bounds for.</param>
            <param name="angle">The rotation angle (degrees).</param>
            <returns>A minimum bounding rectangle.</returns>
        </member>
        <member name="M:OxyPlot.RenderingExtensions.ReducePoints(System.Collections.Generic.IList{OxyPlot.ScreenPoint},System.Double,System.Collections.Generic.List{OxyPlot.ScreenPoint})">
            <summary>
            Reduces the specified list of points by the specified minimum squared distance. 
            </summary>
            <param name="points">The points that should be evaluated.</param>
            <param name="minDistSquared">The minimum line segment length (squared).</param>
            <param name="outputBuffer">The output buffer. Cannot be <c>null</c>.</param>
            <remarks>Points that are closer than the specified distance will not be included in the output buffer.</remarks>
        </member>
        <member name="T:OxyPlot.RenderingExtensions.AutoResetClipToken">
            <summary>
            Represents the token that is used to automatically reset the clipping in the <see cref="M:OxyPlot.RenderingExtensions.AutoResetClip(OxyPlot.IRenderContext,OxyPlot.OxyRect)"/> method.
            </summary>
        </member>
        <member name="T:OxyPlot.XkcdRenderingDecorator">
            <summary>
            Provides a <see cref="T:OxyPlot.IRenderContext" /> decorator that distorts the rendered output.
            </summary>
        </member>
        <member name="F:OxyPlot.XkcdRenderingDecorator.rc">
            <summary>
            The decorated <see cref="T:OxyPlot.IRenderContext" />. This is the one that does the actual rendering.
            </summary>
        </member>
        <member name="F:OxyPlot.XkcdRenderingDecorator.r">
            <summary>
            The random number generator.
            </summary>
        </member>
        <member name="M:OxyPlot.XkcdRenderingDecorator.#ctor(OxyPlot.IRenderContext)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.XkcdRenderingDecorator"/> class.
            </summary>
            <param name="rc">The decorated render context.</param>
        </member>
        <member name="P:OxyPlot.XkcdRenderingDecorator.DistortionFactor">
            <summary>
            Gets or sets the distortion factor.
            </summary>
        </member>
        <member name="P:OxyPlot.XkcdRenderingDecorator.InterpolationDistance">
            <summary>
            Gets or sets the interpolation distance.
            </summary>
        </member>
        <member name="P:OxyPlot.XkcdRenderingDecorator.FontFamily">
            <summary>
            Gets or sets the font family.
            </summary>
            <value>
            The font family.
            </value>
        </member>
        <member name="P:OxyPlot.XkcdRenderingDecorator.ThicknessScale">
            <summary>
            Gets or sets the thickness scale.
            </summary>
            <value>
            The thickness scale.
            </value>
        </member>
        <member name="P:OxyPlot.XkcdRenderingDecorator.ClipCount">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.XkcdRenderingDecorator.DrawLine(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Double[],OxyPlot.LineJoin)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.XkcdRenderingDecorator.DrawPolygon(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Double[],OxyPlot.LineJoin)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.XkcdRenderingDecorator.DrawText(OxyPlot.ScreenPoint,System.String,OxyPlot.OxyColor,System.String,System.Double,System.Double,System.Double,OxyPlot.HorizontalAlignment,OxyPlot.VerticalAlignment,System.Nullable{OxyPlot.OxySize})">
            <summary>
            Draws the text.
            </summary>
            <param name="p">The position of the text.</param>
            <param name="text">The text.</param>
            <param name="fill">The fill color.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="rotate">The rotation angle.</param>
            <param name="halign">The horizontal alignment.</param>
            <param name="valign">The vertical alignment.</param>
            <param name="maxSize">The maximum size of the text.</param>
        </member>
        <member name="M:OxyPlot.XkcdRenderingDecorator.MeasureText(System.String,System.String,System.Double,System.Double)">
            <summary>
            Measures the text.
            </summary>
            <param name="text">The text.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontWeight">The font weight.</param>
            <returns>
            The text size.
            </returns>
        </member>
        <member name="M:OxyPlot.XkcdRenderingDecorator.SetToolTip(System.String)">
            <summary>
            Sets the tool tip for the following items.
            </summary>
            <param name="text">The text in the tool tip.</param>
        </member>
        <member name="M:OxyPlot.XkcdRenderingDecorator.CleanUp">
            <summary>
            Cleans up resources not in use.
            </summary>
            <remarks>
            This method is called at the end of each rendering.
            </remarks>
        </member>
        <member name="M:OxyPlot.XkcdRenderingDecorator.DrawImage(OxyPlot.OxyImage,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Draws the specified portion of the specified <see cref="T:OxyPlot.OxyImage" /> at the specified location and with the specified size.
            </summary>
            <param name="source">The source.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="destX">The x-coordinate of the upper-left corner of drawn image.</param>
            <param name="destY">The y-coordinate of the upper-left corner of drawn image.</param>
            <param name="destWidth">The width of the drawn image.</param>
            <param name="destHeight">The height of the drawn image.</param>
            <param name="opacity">The opacity.</param>
            <param name="interpolate">Interpolate if set to <c>true</c>.</param>
        </member>
        <member name="M:OxyPlot.XkcdRenderingDecorator.PushClip(OxyPlot.OxyRect)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.XkcdRenderingDecorator.PopClip">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.XkcdRenderingDecorator.GetFontFamily(System.String)">
            <summary>
            Gets the transformed font family name.
            </summary>
            <param name="fontFamily">The original font family.</param>
            <returns>The actual font family.</returns>
        </member>
        <member name="M:OxyPlot.XkcdRenderingDecorator.Distort(System.Collections.Generic.IEnumerable{OxyPlot.ScreenPoint})">
            <summary>
            Distorts the specified points.
            </summary>
            <param name="points">The input points.</param>
            <returns>
            The distorted points.
            </returns>
        </member>
        <member name="M:OxyPlot.XkcdRenderingDecorator.GenerateRandomNumbers(System.Int32)">
            <summary>
            Generates an array of random numbers.
            </summary>
            <param name="n">The number of numbers to generate.</param>
            <returns>The random numbers.</returns>
        </member>
        <member name="M:OxyPlot.XkcdRenderingDecorator.ApplyMovingAverage(System.Collections.Generic.IList{System.Double},System.Int32)">
            <summary>
            Applies a moving average filter to the input values.
            </summary>
            <param name="input">The input values.</param>
            <param name="m">The number of values to average.</param>
            <returns>The filtered values.</returns>
        </member>
        <member name="M:OxyPlot.XkcdRenderingDecorator.Interpolate(System.Collections.Generic.IEnumerable{OxyPlot.ScreenPoint},System.Double)">
            <summary>
            Interpolates the input points.
            </summary>
            <param name="input">The input points.</param>
            <param name="dist">The interpolation distance.</param>
            <returns>The interpolated points.</returns>
        </member>
        <member name="T:OxyPlot.ScreenPoint">
            <summary>
            Represents a point defined in screen space.
            </summary>
            <remarks>The rendering methods transforms <see cref="T:OxyPlot.DataPoint" />s to <see cref="T:OxyPlot.ScreenPoint" />s.</remarks>
        </member>
        <member name="F:OxyPlot.ScreenPoint.Undefined">
            <summary>
            The undefined point.
            </summary>
        </member>
        <member name="F:OxyPlot.ScreenPoint.x">
            <summary>
            The x-coordinate.
            </summary>
        </member>
        <member name="F:OxyPlot.ScreenPoint.y">
            <summary>
            The y-coordinate.
            </summary>
        </member>
        <member name="M:OxyPlot.ScreenPoint.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.ScreenPoint" /> struct.
            </summary>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
        </member>
        <member name="P:OxyPlot.ScreenPoint.X">
            <summary>
            Gets the x-coordinate.
            </summary>
            <value>The x-coordinate.</value>
        </member>
        <member name="P:OxyPlot.ScreenPoint.Y">
            <summary>
            Gets the y-coordinate.
            </summary>
            <value>The y-coordinate.</value>
        </member>
        <member name="M:OxyPlot.ScreenPoint.IsUndefined(OxyPlot.ScreenPoint)">
            <summary>
            Determines whether the specified point is undefined.
            </summary>
            <param name="point">The point.</param>
            <returns><c>true</c> if the specified point is undefined; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.ScreenPoint.op_Addition(OxyPlot.ScreenPoint,OxyPlot.ScreenVector)">
            <summary>
            Translates a <see cref="T:OxyPlot.ScreenPoint" /> by a <see cref="T:OxyPlot.ScreenVector" />.
            </summary>
            <param name="p1">The point.</param>
            <param name="p2">The vector.</param>
            <returns>The translated point.</returns>
        </member>
        <member name="M:OxyPlot.ScreenPoint.op_Subtraction(OxyPlot.ScreenPoint,OxyPlot.ScreenPoint)">
            <summary>
            Subtracts a <see cref="T:OxyPlot.ScreenPoint" /> from a <see cref="T:OxyPlot.ScreenPoint" />
            and returns the result as a <see cref="T:OxyPlot.ScreenVector" />.
            </summary>
            <param name="p1">The point on which to perform the subtraction.</param>
            <param name="p2">The point to subtract from p1.</param>
            <returns>A <see cref="T:OxyPlot.ScreenVector" /> structure that represents the difference between p1 and p2.</returns>
        </member>
        <member name="M:OxyPlot.ScreenPoint.op_Subtraction(OxyPlot.ScreenPoint,OxyPlot.ScreenVector)">
            <summary>
            Subtracts a <see cref="T:OxyPlot.ScreenVector" /> from a <see cref="T:OxyPlot.ScreenPoint" />
            and returns the result as a <see cref="T:OxyPlot.ScreenPoint" />.
            </summary>
            <param name="point">The point on which to perform the subtraction.</param>
            <param name="vector">The vector to subtract from p1.</param>
            <returns>A <see cref="T:OxyPlot.ScreenPoint" /> that represents point translated by the negative vector.</returns>
        </member>
        <member name="M:OxyPlot.ScreenPoint.DistanceTo(OxyPlot.ScreenPoint)">
            <summary>
            Gets the distance to the specified point.
            </summary>
            <param name="point">The point.</param>
            <returns>The distance.</returns>
        </member>
        <member name="M:OxyPlot.ScreenPoint.DistanceToSquared(OxyPlot.ScreenPoint)">
            <summary>
            Gets the squared distance to the specified point.
            </summary>
            <param name="point">The point.</param>
            <returns>The squared distance.</returns>
        </member>
        <member name="M:OxyPlot.ScreenPoint.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:OxyPlot.ScreenPoint.Equals(OxyPlot.ScreenPoint)">
            <summary>
            Determines whether this instance and another specified <see cref="T:ScreenPoint" /> object have the same value.
            </summary>
            <param name="other">The point to compare to this instance.</param>
            <returns><c>true</c> if the value of the <paramref name="other" /> parameter is the same as the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OxyPlot.ScreenPointHelper">
            <summary>
            Provides algorithms for polygons and lines of <see cref="T:OxyPlot.ScreenPoint" />.
            </summary>
        </member>
        <member name="M:OxyPlot.ScreenPointHelper.FindNearestPointOnPolyline(OxyPlot.ScreenPoint,System.Collections.Generic.IList{OxyPlot.ScreenPoint})">
            <summary>
            Finds the nearest point on the specified polyline.
            </summary>
            <param name="point">The point.</param>
            <param name="points">The points.</param>
            <returns>The nearest point.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="points"/> is <c>null</c>.</exception>
        </member>
        <member name="M:OxyPlot.ScreenPointHelper.FindPointOnLine(OxyPlot.ScreenPoint,OxyPlot.ScreenPoint,OxyPlot.ScreenPoint)">
            <summary>
            Finds the point on line.
            </summary>
            <param name="p">The point.</param>
            <param name="p1">The first point on the line.</param>
            <param name="p2">The second point on the line.</param>
            <returns>The nearest point on the line.</returns>
            <remarks>See <a href="http://paulbourke.net/geometry/pointlineplane/">Bourke</a>.</remarks>
        </member>
        <member name="M:OxyPlot.ScreenPointHelper.FindPositionOnLine(OxyPlot.ScreenPoint,OxyPlot.ScreenPoint,OxyPlot.ScreenPoint)">
            <summary>
            Finds the nearest point on line.
            </summary>
            <param name="p">The point.</param>
            <param name="p1">The start point on the line.</param>
            <param name="p2">The end point on the line.</param>
            <returns>The relative position of the nearest point.</returns>
            <remarks>See <a href="http://paulbourke.net/geometry/pointlineplane/">Bourke</a>.</remarks>
        </member>
        <member name="M:OxyPlot.ScreenPointHelper.IsPointInPolygon(OxyPlot.ScreenPoint,System.Collections.Generic.IList{OxyPlot.ScreenPoint})">
            <summary>
            Determines whether the specified point is in the specified polygon.
            </summary>
            <param name="p">The point.</param>
            <param name="pts">The polygon points.</param>
            <returns><c>true</c> if the point is in the polygon; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OxyPlot.ScreenPointHelper.ResamplePoints(System.Collections.Generic.IList{OxyPlot.ScreenPoint},System.Double)">
            <summary>
            Resamples the points with the specified point distance limit.
            </summary>
            <param name="allPoints">All points.</param>
            <param name="minimumDistance">The minimum squared distance.</param>
            <returns>List of resampled points.</returns>
        </member>
        <member name="M:OxyPlot.ScreenPointHelper.GetCentroid(System.Collections.Generic.IList{OxyPlot.ScreenPoint})">
            <summary>
            Gets the centroid of the specified polygon.
            </summary>
            <param name="points">The points.</param>
            <returns>The centroid.</returns>
        </member>
        <member name="T:OxyPlot.ScreenVector">
            <summary>
            Represents a vector defined in screen space.
            </summary>
        </member>
        <member name="F:OxyPlot.ScreenVector.x">
            <summary>
            The x-coordinate.
            </summary>
        </member>
        <member name="F:OxyPlot.ScreenVector.y">
            <summary>
            The y-coordinate.
            </summary>
        </member>
        <member name="M:OxyPlot.ScreenVector.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.ScreenVector" /> structure.
            </summary>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
        </member>
        <member name="P:OxyPlot.ScreenVector.Length">
            <summary>
            Gets the length.
            </summary>
        </member>
        <member name="P:OxyPlot.ScreenVector.LengthSquared">
            <summary>
            Gets the length squared.
            </summary>
        </member>
        <member name="P:OxyPlot.ScreenVector.X">
            <summary>
            Gets the x-coordinate.
            </summary>
            <value>The x-coordinate.</value>
        </member>
        <member name="P:OxyPlot.ScreenVector.Y">
            <summary>
            Gets the y-coordinate.
            </summary>
            <value>The y-coordinate.</value>
        </member>
        <member name="M:OxyPlot.ScreenVector.op_Multiply(OxyPlot.ScreenVector,System.Double)">
            <summary>
            Implements the operator *.
            </summary>
            <param name="v">The vector.</param>
            <param name="d">The multiplication factor.</param>
            <returns>The result of the operator.</returns>
        </member>
        <member name="M:OxyPlot.ScreenVector.op_Addition(OxyPlot.ScreenVector,OxyPlot.ScreenVector)">
            <summary>
            Adds a vector to another vector.
            </summary>
            <param name="v">The vector to add to.</param>
            <param name="d">The vector to be added.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:OxyPlot.ScreenVector.op_Subtraction(OxyPlot.ScreenVector,OxyPlot.ScreenVector)">
            <summary>
            Subtracts one specified vector from another.
            </summary>
            <param name="v">The vector to subtract from.</param>
            <param name="d">The vector to be subtracted.</param>
            <returns>The result of operation.</returns>
        </member>
        <member name="M:OxyPlot.ScreenVector.op_UnaryNegation(OxyPlot.ScreenVector)">
            <summary>
            Negates the specified vector.
            </summary>
            <param name="v">The vector to negate.</param>
            <returns>The result of operation.</returns>
        </member>
        <member name="M:OxyPlot.ScreenVector.Normalize">
            <summary>
            Normalizes this vector.
            </summary>
        </member>
        <member name="M:OxyPlot.ScreenVector.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:OxyPlot.ScreenVector.Equals(OxyPlot.ScreenVector)">
            <summary>
            Determines whether this instance and another specified <see cref="T:ScreenVector" /> object have the same value.
            </summary>
            <param name="other">The point to compare to this instance.</param>
            <returns><c>true</c> if the value of the <paramref name="other" /> parameter is the same as the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OxyPlot.CanonicalSpline">
            <summary>
            Provides functionality to interpolate a list of points by a canonical spline.
            </summary>
            <remarks>CanonicalSplineHelper.cs (c) 2009 by Charles Petzold (WPF and Silverlight)
            See also <a href="http://www.charlespetzold.com/blog/2009/01/Canonical-Splines-in-WPF-and-Silverlight.html">blog post</a>.</remarks>
        </member>
        <member name="P:OxyPlot.CanonicalSpline.Tension">
            <summary>
            The tension.
            </summary>
        </member>
        <member name="M:OxyPlot.CanonicalSpline.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.CanonicalSpline" /> class.
            </summary>
            <param name="tension">The tension.</param>
        </member>
        <member name="M:OxyPlot.CanonicalSpline.CreateSpline(System.Collections.Generic.List{OxyPlot.DataPoint},System.Boolean,System.Double)">
            <summary>
            Creates a spline of data points.
            </summary>
            <param name="points">The points.</param>
            <param name="isClosed">True if the spline is closed.</param>
            <param name="tolerance">The tolerance.</param>
            <returns>A list of data points.</returns>
        </member>
        <member name="M:OxyPlot.CanonicalSpline.CreateSpline(System.Collections.Generic.IList{OxyPlot.ScreenPoint},System.Boolean,System.Double)">
            <summary>
            Creates a spline of screen points.
            </summary>
            <param name="points">The points.</param>
            <param name="isClosed">True if the spline is closed.</param>
            <param name="tolerance">The tolerance.</param>
            <returns>A list of screen points.</returns>
        </member>
        <member name="M:OxyPlot.CanonicalSpline.CreateSpline(System.Collections.Generic.List{OxyPlot.DataPoint},System.Double,System.Collections.Generic.IList{System.Double},System.Boolean,System.Double)">
            <summary>
            Creates a spline of data points.
            </summary>
            <param name="points">The points.</param>
            <param name="tension">The tension.</param>
            <param name="tensions">The tensions.</param>
            <param name="isClosed">True if the spline is closed.</param>
            <param name="tolerance">The tolerance.</param>
            <returns>A list of data points.</returns>
        </member>
        <member name="M:OxyPlot.CanonicalSpline.CreateSpline(System.Collections.Generic.IList{OxyPlot.ScreenPoint},System.Double,System.Collections.Generic.IList{System.Double},System.Boolean,System.Double)">
            <summary>
            Creates a spline of screen points.
            </summary>
            <param name="points">The points.</param>
            <param name="tension">The tension.</param>
            <param name="tensions">The tensions.</param>
            <param name="isClosed">True if the spline is closed.</param>
            <param name="tolerance">The tolerance.</param>
            <returns>A list of screen points.</returns>
        </member>
        <member name="M:OxyPlot.CanonicalSpline.Segment(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.ScreenPoint,OxyPlot.ScreenPoint,OxyPlot.ScreenPoint,OxyPlot.ScreenPoint,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            The segment.
            </summary>
            <param name="points">The points.</param>
            <param name="pt0">The pt 0.</param>
            <param name="pt1">The pt 1.</param>
            <param name="pt2">The pt 2.</param>
            <param name="pt3">The pt 3.</param>
            <param name="t1">The t 1.</param>
            <param name="t2">The t 2.</param>
            <param name="tolerance">The tolerance.</param>
            <param name="maxSegments">The maximum number of segments. Default is <c>1000</c>.</param>
        </member>
        <member name="T:OxyPlot.CatmullRomSpline">
            <summary>
            Provides functionality to interpolate a list of points by a Centripetal Catmull–Rom spline.
            </summary>
            <remarks>Based on CanonicalSplineHelper.cs (c) 2009 by Charles Petzold (WPF and Silverlight)
            See also <a href="http://www.charlespetzold.com/blog/2009/01/Canonical-Splines-in-WPF-and-Silverlight.html">blog post</a>.</remarks>
        </member>
        <member name="P:OxyPlot.CatmullRomSpline.Alpha">
            <summary>
            Gets the alpha value.
            </summary>
        </member>
        <member name="P:OxyPlot.CatmullRomSpline.MaxSegments">
            <summary>
            Gets or sets the maximum number of segments.
            </summary>
        </member>
        <member name="M:OxyPlot.CatmullRomSpline.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.CatmullRomSpline" /> class.
            </summary>
            <param name="alpha">The alpha.</param>
        </member>
        <member name="M:OxyPlot.CatmullRomSpline.CreateSpline(System.Collections.Generic.List{OxyPlot.DataPoint},System.Boolean,System.Double)">
            <summary>
            Creates a spline of data points.
            </summary>
            <param name="points">The points.</param>
            <param name="isClosed">True if the spline is closed.</param>
            <param name="tolerance">The tolerance.</param>
            <returns>A list of data points.</returns>
        </member>
        <member name="M:OxyPlot.CatmullRomSpline.CreateSpline(System.Collections.Generic.IList{OxyPlot.ScreenPoint},System.Boolean,System.Double)">
            <summary>
            Creates a spline of screen points.
            </summary>
            <param name="points">The points.</param>
            <param name="isClosed">True if the spline is closed.</param>
            <param name="tolerance">The tolerance.</param>
            <returns>A list of screen points.</returns>
        </member>
        <member name="M:OxyPlot.CatmullRomSpline.CreateSpline(System.Collections.Generic.List{OxyPlot.DataPoint},System.Double,System.Boolean,System.Double,System.Int32)">
            <summary>
            Creates a spline of data points.
            </summary>
            <param name="points">The points.</param>
            <param name="alpha">The alpha.</param>
            <param name="isClosed">True if the spline is closed.</param>
            <param name="tolerance">The tolerance.</param>
            <param name="maxSegments">The maximum number of segments.</param>
            <returns>A list of data points.</returns>
        </member>
        <member name="M:OxyPlot.CatmullRomSpline.CreateSpline(System.Collections.Generic.IList{OxyPlot.ScreenPoint},System.Double,System.Boolean,System.Double,System.Int32)">
            <summary>
            Creates a spline of screen points.
            </summary>
            <param name="points">The points.</param>
            <param name="alpha">The alpha.</param>
            <param name="isClosed">True if the spline is closed.</param>
            <param name="tolerance">The tolerance.</param>
            <param name="maxSegments">The maximum number of segments.</param>
            <returns>A list of screen points.</returns>
        </member>
        <member name="M:OxyPlot.CatmullRomSpline.Segment(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.ScreenPoint,OxyPlot.ScreenPoint,OxyPlot.ScreenPoint,OxyPlot.ScreenPoint,System.Double,System.Double,System.Int32)">
            <summary>
            The segment.
            </summary>
            <param name="points">The points.</param>
            <param name="pt0">The pt 0.</param>
            <param name="pt1">The pt 1.</param>
            <param name="pt2">The pt 2.</param>
            <param name="pt3">The pt 3.</param>
            <param name="alpha">The alpha.</param>
            <param name="tolerance">The tolerance.</param>
            <param name="maxSegments">The maximum number of segments.</param>
        </member>
        <member name="T:OxyPlot.Decimator">
            <summary>
            Provides functionality to decimate lines.
            </summary>
        </member>
        <member name="M:OxyPlot.Decimator.Decimate(System.Collections.Generic.List{OxyPlot.ScreenPoint},System.Collections.Generic.List{OxyPlot.ScreenPoint})">
            <summary>
            Decimates lines by reducing all points that have the same integer x value to a maximum of 4 points (first, min, max, last).
            </summary>
            <param name="input">The input points.</param>
            <param name="output">The decimated points.</param>
        </member>
        <member name="M:OxyPlot.Decimator.AddVerticalPoints(System.Collections.Generic.List{OxyPlot.ScreenPoint},System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Adds vertical points to the <paramref name="result" /> list.
            </summary>
            <param name="result">The result.</param>
            <param name="x">The x coordinate.</param>
            <param name="firstY">The first y.</param>
            <param name="lastY">The last y.</param>
            <param name="minY">The minimum y.</param>
            <param name="maxY">The maximum y.</param>
        </member>
        <member name="T:OxyPlot.VerticalAlignment">
            <summary>
            Specifies vertical alignment.
            </summary>
        </member>
        <member name="F:OxyPlot.VerticalAlignment.Top">
            <summary>
            Aligned at the top.
            </summary>
        </member>
        <member name="F:OxyPlot.VerticalAlignment.Middle">
            <summary>
            Aligned in the middle.
            </summary>
        </member>
        <member name="F:OxyPlot.VerticalAlignment.Bottom">
            <summary>
            Aligned at the bottom.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.AreaSeries">
            <summary>
            Represents an area series that fills the polygon defined by two sets of points or one set of points and a constant.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.AreaSeries.points2">
            <summary>
            The second list of points.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.AreaSeries.itemsSourcePoints2">
            <summary>
            The secondary data points from the <see cref="P:ItemsSource" /> collection.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.AreaSeries.actualPoints2">
            <summary>
            The secondary data points from the <see cref="P:Points2" /> list.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.AreaSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.Series.AreaSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.ConstantY2">
            <summary>
            Gets or sets a constant value for the area definition.
            This is used if DataFieldBase and BaselineValues are <c>null</c>.
            </summary>
            <value>The baseline.</value>
            <remarks><see cref="P:ConstantY2" /> is used if <see cref="P:ItemsSource" /> is set 
            and <see cref="P:DataFieldX2" /> or <see cref="P:DataFieldY2" /> are <c>null</c>, 
            or if <see cref="P:ItemsSource" /> is <c>null</c> and <see cref="P:Points2" /> is empty.</remarks>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.DataFieldX2">
            <summary>
            Gets or sets the data field to use for the X-coordinates of the second data set.
            </summary>
            <remarks>This property is used if <see cref="P:ItemsSource" /> is set.</remarks>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.DataFieldY2">
            <summary>
            Gets or sets the data field to use for the Y-coordinates of the second data set.
            </summary>
            <remarks>This property is used if <see cref="P:ItemsSource" /> is set.</remarks>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.Color2">
            <summary>
            Gets or sets the color of the line for the second data set.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.ActualColor2">
            <summary>
            Gets the actual color of the line for the second data set.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.Fill">
            <summary>
            Gets or sets the fill color of the area.
            </summary>
            <value>The fill color.</value>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.ActualFill">
            <summary>
            Gets the actual fill color of the area.
            </summary>
            <value>The actual fill color.</value>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.Points2">
            <summary>
            Gets the second list of points.
            </summary>
            <value>The second list of points.</value>
            <remarks>This property is not used if <see cref="P:ItemsSource" /> is set.</remarks>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.Reverse2">
            <summary>
            Gets or sets a value indicating whether the second data collection should be reversed.
            </summary>
            <value><c>true</c> if the second data set should be reversed; otherwise, <c>false</c>.</value>
            <remarks>The first dataset is not reversed, and normally
            the second dataset should be reversed to get a
            closed polygon.</remarks>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.ActualPoints2">
            <summary>
            Gets the actual points of the second data set.
            </summary>
            <value>A list of data points.</value>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.WindowStartIndex2">
            <summary>
            Gets or sets the last visible window start position in second data points collection.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.IsPoints2Defined">
            <summary>
            Gets a value indicating whether Points2 collection was defined by user.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.AreaSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the nearest point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">interpolate if set to <c>true</c> .</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.AreaSeries.Render(OxyPlot.IRenderContext)">
            <summary>
            Renders the series on the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
        </member>
        <member name="M:OxyPlot.Series.AreaSeries.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the legend symbol for the line series on the
            specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="legendBox">The bounding rectangle of the legend box.</param>
        </member>
        <member name="M:OxyPlot.Series.AreaSeries.UpdateData">
            <summary>
            The update data.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.AreaSeries.UpdateMaxMin">
            <summary>
            Updates the maximum and minimum values of the series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.AreaSeries.RenderChunkedPoints(OxyPlot.Series.AreaSeries.AreaRenderContext)">
            <summary>
            Renders data points skipping NaN values.
            </summary>
            <param name="context">Area rendering context.</param>
            <returns>The list of chunks.</returns>
        </member>
        <member name="M:OxyPlot.Series.AreaSeries.RenderScreenPoints(OxyPlot.Series.AreaSeries.AreaRenderContext,System.Collections.Generic.List{OxyPlot.ScreenPoint})">
            <summary>
            Renders a chunk of points on the screen.
            </summary>
            <param name="context">Render context.</param>
            <param name="points">Screen points.</param>
            <returns>The list of resampled points.</returns>
        </member>
        <member name="M:OxyPlot.Series.AreaSeries.GetPointX(OxyPlot.DataPoint)">
            <summary>
            Gets the x coordinate of a DataPoint.
            </summary>
            <param name="point">Data point.</param>
            <returns>X coordinate.</returns>
        </member>
        <member name="M:OxyPlot.Series.AreaSeries.GetConstantPoints2">
            <summary>
            Gets the points when <see cref="P:ConstantY2" /> is used.
            </summary>
            <returns>A sequence of <see cref="T:DataPoint"/>.</returns>
        </member>
        <member name="T:OxyPlot.Series.AreaSeries.AreaRenderContext">
            <summary>
            Holds parameters for point rendering.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.AreaRenderContext.Points">
            <summary>
            Gets or sets source data points.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.AreaRenderContext.WindowStartIndex">
            <summary>
            Gets or sets start index of a visible window.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.AreaRenderContext.XMax">
            <summary>
            Gets or sets maximum visible X coordinate.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.AreaRenderContext.RenderContext">
            <summary>
            Gets or sets render context.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.AreaRenderContext.MinDistSquared">
            <summary>
            Gets or sets minimum squared distance between points.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.AreaRenderContext.Reverse">
            <summary>
            Gets or sets a value indicating whether to reverse the points.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.AreaRenderContext.Color">
            <summary>
            Gets or sets line color.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.AreaSeries.AreaRenderContext.DashArray">
            <summary>
            Gets or sets line dash array.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.BarItem">
            <summary>
            Represents an item used in the BarSeries.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BarItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.BarItem" /> class.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BarItem.#ctor(System.Double,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.BarItem" /> class.
            </summary>
            <param name="value">The value.</param>
            <param name="categoryIndex">Index of the category.</param>
        </member>
        <member name="P:OxyPlot.Series.BarItem.Color">
            <summary>
            Gets or sets the color of the item.
            </summary>
            <remarks>If the color is not specified (default), the color of the series will be used.</remarks>
        </member>
        <member name="P:OxyPlot.Series.BarItem.Value">
            <summary>
            Gets or sets the value of the item.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BarItem.ToCode">
            <summary>
            Returns c# code that generates this instance.
            </summary>
            <returns>C# code.</returns>
        </member>
        <member name="T:OxyPlot.Series.BarItemBase">
            <summary>
            Represents an item in a bar series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BarItemBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.BarItemBase" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarItemBase.CategoryIndex">
            <summary>
            Gets or sets the index of the category.
            </summary>
            <value>The index of the category.</value>
        </member>
        <member name="M:OxyPlot.Series.BarItemBase.GetCategoryIndex(System.Int32)">
            <summary>
            Gets the index of the category.
            </summary>
            <param name="defaultIndex">The default index.</param>
            <returns>The index.</returns>
        </member>
        <member name="T:OxyPlot.Series.BarSeries">
            <summary>
            Represents a series for clustered or stacked bar charts.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.BarSeries.DefaultTrackerFormatString">
            <summary>
            The default tracker format string
            </summary>
        </member>
        <member name="F:OxyPlot.Series.BarSeries.defaultFillColor">
            <summary>
            The default fill color.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BarSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.BarSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeries.ActualFillColor">
            <summary>
            Gets the actual fill color.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="P:OxyPlot.Series.BarSeries.BaseValue">
            <summary>
            Gets or sets the base value.
            </summary>
            <value>The base value.</value>
        </member>
        <member name="P:OxyPlot.Series.BarSeries.ColorField">
            <summary>
            Gets or sets the color field.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeries.FillColor">
            <summary>
            Gets or sets the color of the interior of the bars.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:OxyPlot.Series.BarSeries.IsStacked">
            <inheritdoc/>
        </member>
        <member name="P:OxyPlot.Series.BarSeries.OverlapsStack">
            <inheritdoc/>
        </member>
        <member name="P:OxyPlot.Series.BarSeries.LabelFormatString">
            <summary>
            Gets or sets the label format string.
            </summary>
            <value>The label format string.</value>
        </member>
        <member name="P:OxyPlot.Series.BarSeries.LabelMargin">
            <summary>
            Gets or sets the label margins.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeries.LabelPlacement">
            <summary>
            Gets or sets label placements.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeries.NegativeFillColor">
            <summary>
            Gets or sets the color of the interior of the bars when the value is negative.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:OxyPlot.Series.BarSeries.StackGroup">
            <inheritdoc/>
        </member>
        <member name="P:OxyPlot.Series.BarSeries.ValueField">
            <summary>
            Gets or sets the value field.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeries.ActualBarRectangles">
            <summary>
            Gets or sets the actual rectangles for the bars.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BarSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.BarSeries.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.BarSeries.SetDefaultValues">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.BarSeries.UpdateMaxMin">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.BarSeries.GetTrackerText(OxyPlot.Series.BarItem,System.Object,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.BarSeries.IsValid(OxyPlot.Series.BarItem)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.BarSeries.RenderItem(OxyPlot.IRenderContext,System.Double,System.Double,System.Double,OxyPlot.Series.BarItem,OxyPlot.OxyRect)">
            <summary>
            Renders the bar/column item.
            </summary>
            <param name="rc">The render context.</param>
            <param name="barValue">The end value of the bar.</param>
            <param name="categoryValue">The category value.</param>
            <param name="actualBarWidth">The actual width of the bar.</param>
            <param name="item">The item.</param>
            <param name="rect">The rectangle of the bar.</param>
        </member>
        <member name="M:OxyPlot.Series.BarSeries.RenderLabel(OxyPlot.IRenderContext,OxyPlot.Series.BarItem,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Renders the item label.
            </summary>
            <param name="rc">The render context</param>
            <param name="item">The item.</param>
            <param name="baseValue">The bar item base value.</param>
            <param name="topValue">The bar item top value.</param>
            <param name="categoryValue">The bar item category value.</param>
            <param name="categoryEndValue">The bar item category end value.</param>
        </member>
        <member name="M:OxyPlot.Series.BarSeries.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.BarSeries.UpdateFromDataFields">
            <inheritdoc/>
        </member>
        <member name="T:OxyPlot.Series.BarSeriesBase`1">
            <summary>
            Base class for bar series.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.BarSeriesBase`1.DefaultCategoryAxisTitle">
            <summary>
            The default category axis title
            </summary>
        </member>
        <member name="F:OxyPlot.Series.BarSeriesBase`1.DefaultValueAxisTitle">
            <summary>
            The default value axis title
            </summary>
        </member>
        <member name="F:OxyPlot.Series.BarSeriesBase`1.ownsItemsSourceItems">
            <summary>
            Specifies if the ItemsSourceItems list can be modified.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesBase`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.BarSeriesBase`1"/> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesBase`1.ActualItems">
            <summary>
            Gets the list of items that should be rendered.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesBase`1.OxyPlot#Series#IBarSeries#ActualItems">
            <inheritdoc/>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesBase`1.BarWidth">
            <summary>
            Gets or sets the width of the bars. The default value is 1.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesBase`1.OxyPlot#Series#IBarSeries#CategoryAxis">
            <inheritdoc/>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesBase`1.Items">
            <summary>
            Gets the items list.
            </summary>
            <value>A list of <see cref="T:OxyPlot.Series.BarItem" />.</value>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesBase`1.OxyPlot#Series#IBarSeries#ValueAxis">
            <inheritdoc/>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesBase`1.ItemsSourceItems">
            <summary>
            Gets or sets the items from the items source.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesBase`1.OxyPlot#Series#IBarSeries#Manager">
            <inheritdoc/>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesBase`1.StrokeColor">
            <summary>
            Gets or sets the color of the border around the bars.
            </summary>
            <value>The color of the stroke.</value>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesBase`1.StrokeThickness">
            <summary>
            Gets or sets the thickness of the bar border strokes.
            </summary>
            <value>The stroke thickness.</value>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesBase`1.Manager">
            <summary>
            Gets or sets the manager of this <see cref="T:OxyPlot.Series.BarSeriesBase`1"/>.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesBase`1.ValidItems">
            <summary>
            Gets the valid items.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesBase`1.ValidItemsIndexInversion">
            <summary>
            Gets or sets the dictionary which stores the index-inversion for the valid items
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesBase`1.GetActualBarWidth">
            <summary>
            Gets the actual width of the items of this series.
            </summary>
            <returns>The width.</returns>
            <remarks>The actual width is also influenced by the GapWidth of the CategoryAxis used by this series.</remarks>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesBase`1.GetCategoryAxis">
            <summary>
            Gets the category axis.
            </summary>
            <returns>The category axis.</returns>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesBase`1.GetItem(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesBase`1.IsValid(`0)">
            <summary>
            Gets a value indicating whether the specified item is valid.
            </summary>
            <param name="item">The items.</param>
            <returns><c>true</c> if the item is valid; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesBase`1.UpdateFromDataFields">
            <summary>
            Updates the <see cref="P:OxyPlot.Series.BarSeriesBase`1.ItemsSourceItems"/> from the <see cref="P:OxyPlot.Series.ItemsSeries.ItemsSource"/> and data fields.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesBase`1.ClearItemsSourceItems">
            <summary>
            Clears or creates the <see cref="P:OxyPlot.Series.BarSeriesBase`1.ItemsSourceItems"/> list.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesBase`1.OxyPlot#Series#IBarSeries#UpdateValidData">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesBase`1.IsUsing(OxyPlot.Axes.Axis)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesBase`1.UpdateAxisMaxMin">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesBase`1.UpdateData">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesBase`1.UpdateValidData">
            <summary>
            Updates the <see cref="P:OxyPlot.Series.BarSeriesBase`1.ValidItems"/> list with the valid items.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.BarSeriesManager">
            <summary>
            Represents a manager for bar series.
            </summary>
            <remarks>
            This handles all operations that need information about all bar series in the plot that share the same axes. This includes:
            - determine and keep track of bar width and offset
            - determine and keep track of stacked bar offsets
            </remarks>
        </member>
        <member name="F:OxyPlot.Series.BarSeriesManager.currentBarOffset">
            <summary>
            The current offset of the bars (not used for stacked bar series).
            </summary>
            <remarks>These offsets are modified during rendering.</remarks>
        </member>
        <member name="F:OxyPlot.Series.BarSeriesManager.currentMaxValue">
            <summary>
            The current max value per StackIndex and Label.
            </summary>
            <remarks>These values are modified during rendering.</remarks>
        </member>
        <member name="F:OxyPlot.Series.BarSeriesManager.currentMinValue">
            <summary>
            The current min value per StackIndex and Label.
            </summary>
            <remarks>These values are modified during rendering.</remarks>
        </member>
        <member name="F:OxyPlot.Series.BarSeriesManager.currentNegativeBaseValues">
            <summary>
            The base value per StackIndex and Label for negative values of stacked bar series.
            </summary>
            <remarks>These values are modified during rendering.</remarks>
        </member>
        <member name="F:OxyPlot.Series.BarSeriesManager.currentPositiveBaseValues">
            <summary>
            The base value per StackIndex and Label for positive values of stacked bar series.
            </summary>
            <remarks>These values are modified during rendering.</remarks>
        </member>
        <member name="F:OxyPlot.Series.BarSeriesManager.maxWidth">
            <summary>
            The maximal width of all labels.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.#ctor(OxyPlot.Axes.CategoryAxis,OxyPlot.Axes.Axis,System.Collections.Generic.IEnumerable{OxyPlot.Series.IBarSeries})">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.BarSeriesManager"/> class.
            </summary>
            <param name="categoryAxis">The category axis the <paramref name="series"/> belong to.</param>
            <param name="valueAxis">The value axis the <paramref name="series"/> belong to.</param>
            <param name="series">The bar series this instance should manage.</param>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesManager.CategoryAxis">
            <summary>
            Gets the <see cref="P:OxyPlot.Series.BarSeriesManager.CategoryAxis"/> whose bar series this instance manages.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesManager.ManagedSeries">
            <summary>
            Gets all bar series that are managed by this instance.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesManager.PlotModel">
            <summary>
            Gets the <see cref="P:OxyPlot.Series.BarSeriesManager.PlotModel"/> whose bar series this instance manages.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesManager.ValueAxis">
            <summary>
            Gets the value <see cref="T:OxyPlot.Axes.Axis"/> whose bar series this instance manages.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesManager.Categories">
            <summary>
            Gets the string representation of the categories.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesManager.BarOffset">
            <summary>
            Gets or set the offset of the bars.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesManager.StackedBarOffset">
            <summary>
            Gets or sets the offset of the bars per StackIndex and Label (only used for stacked bar series).
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BarSeriesManager.StackIndexMapping">
            <summary>
            Gets or sets the stack index mapping. The mapping indicates to which rank a specific stack index belongs.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.GetCategoryValue(System.Int32,System.Int32,System.Double)">
            <summary>
            Gets the category value.
            </summary>
            <param name="categoryIndex">Index of the category.</param>
            <param name="stackIndex">Index of the stack.</param>
            <param name="actualBarWidth">Actual width of the bar.</param>
            <returns>The get category value.</returns>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.GetCurrentBarOffset(System.Int32)">
            <summary>
            Gets the current bar offset for the specified category index.
            </summary>
            <param name="categoryIndex">The category index.</param>
            <returns>The offset.</returns>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.GetCurrentBaseValue(System.Int32,System.Int32,System.Boolean)">
            <summary>
            Gets the current base value for the specified stack and category index.
            </summary>
            <param name="stackIndex">The stack index.</param>
            <param name="categoryIndex">The category index.</param>
            <param name="negativeValue">if set to <c>true</c> get the base value for negative values.</param>
            <returns>The current base value.</returns>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.GetCurrentMaxValue(System.Int32,System.Int32)">
            <summary>
            Gets the current maximum value for the specified stack and category index.
            </summary>
            <param name="stackIndex">The stack index.</param>
            <param name="categoryIndex">The category index.</param>
            <returns>The current value.</returns>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.GetCurrentMinValue(System.Int32,System.Int32)">
            <summary>
            Gets the current minimum value for the specified stack and category index.
            </summary>
            <param name="stackIndex">The stack index.</param>
            <param name="categoryIndex">The category index.</param>
            <returns>The current value.</returns>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.GetMaxWidth">
            <summary>
            Gets the maximum width of all category labels.
            </summary>
            <returns>The maximum width.</returns>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.GetStackIndex(System.String)">
            <summary>
            Gets the stack index for the specified stack group.
            </summary>
            <param name="stackGroup">The stack group.</param>
            <returns>The stack index.</returns>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.IncreaseCurrentBarOffset(System.Int32,System.Double)">
            <summary>
            Increases the current bar offset for the specified category index.
            </summary>
            <param name="categoryIndex">The category index.</param>
            <param name="delta">The offset increase.</param>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.InitializeRender">
            <summary>
            Initializes the manager for rendering. This should be called before any of the managed series are rendered.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.SetCurrentBaseValue(System.Int32,System.Int32,System.Boolean,System.Double)">
            <summary>
            Sets the current base value for the specified stack and category index.
            </summary>
            <param name="stackIndex">Index of the stack.</param>
            <param name="categoryIndex">Index of the category.</param>
            <param name="negativeValue">if set to <c>true</c> set the base value for negative values.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.SetCurrentMaxValue(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the current maximum value for the specified stack and category index.
            </summary>
            <param name="stackIndex">The stack index.</param>
            <param name="categoryIndex">The category index.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.SetCurrentMinValue(System.Int32,System.Int32,System.Double)">
            <summary>
            Sets the current minimum value for the specified stack and category index.
            </summary>
            <param name="stackIndex">The stack index.</param>
            <param name="categoryIndex">The category index.</param>
            <param name="newValue">The new value.</param>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.Update">
            <summary>
            Bar series should call this after they updated their data.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.HasCategory(OxyPlot.Series.IBarSeries,System.Int32)">
            <summary>
            Gets a value indicating whether the bar series has an item at the specified category index.
            </summary>
            <param name="series">The bar series.</param>
            <param name="categoryIndex">The category index.</param>
            <returns><c>true</c> of the bar series has an item at the specified category index; <c>false</c> otherwise.</returns>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.ResetCurrentValues">
            <summary>
            Resets the current values.
            </summary>
            <remarks>The current values may be modified during update of max/min and rendering.</remarks>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.UpdateBarOffsets">
            <summary>
            Updates the bar offsets.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BarSeriesManager.UpdateValidData">
            <summary>
            Updates the valid data of all managed series.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.ErrorBarItem">
            <summary>
            Represents an item used in the ErrorColumnSeries.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ErrorBarItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.ErrorBarItem" /> class.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ErrorBarItem.#ctor(System.Double,System.Double,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.ErrorBarItem" /> class.
            </summary>
            <param name="value">The value.</param>
            <param name="error">The error.</param>
            <param name="categoryIndex">Index of the category.</param>
        </member>
        <member name="P:OxyPlot.Series.ErrorBarItem.Error">
            <summary>
            Gets or sets the error of the item.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ErrorBarItem.ToCode">
            <summary>
            Returns c# code that generates this instance.
            </summary>
            <returns>C# code.</returns>
        </member>
        <member name="T:OxyPlot.Series.ErrorBarSeries">
            <summary>
            Represents a series for clustered or stacked column charts with an error value.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.ErrorBarSeries.DefaultTrackerFormatString">
            <summary>
            The default tracker format string
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ErrorBarSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.ErrorBarSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.ErrorBarSeries.ErrorStrokeThickness">
            <summary>
            Gets or sets the stroke thickness of the error line.
            </summary>
            <value>The stroke thickness of the error line.</value>
        </member>
        <member name="P:OxyPlot.Series.ErrorBarSeries.ErrorWidth">
            <summary>
            Gets or sets the width of the error end lines.
            </summary>
            <value>The width of the error end lines.</value>
        </member>
        <member name="M:OxyPlot.Series.ErrorBarSeries.UpdateMaxMin">
            <summary>
            Updates the maximum and minimum values of the series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ErrorBarSeries.RenderItem(OxyPlot.IRenderContext,System.Double,System.Double,System.Double,OxyPlot.Series.BarItem,OxyPlot.OxyRect)">
            <inheritdoc/>
        </member>
        <member name="T:OxyPlot.Series.IBarSeries">
            <summary>
            Defines the functionality of a bar series.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IBarSeries.BarWidth">
            <summary>
            Gets the bar width.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IBarSeries.CategoryAxis">
            <summary>
            Gets the <see cref="P:OxyPlot.Series.IBarSeries.CategoryAxis"/> the bar series uses.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IBarSeries.IsVisible">
            <summary>
            Gets a value indicating whether the bar series is visible.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IBarSeries.Manager">
            <summary>
            Gets or sets the manager of the bar series.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IBarSeries.PlotModel">
            <summary>
            Gets the <see cref="P:OxyPlot.Series.IBarSeries.PlotModel"/> the bar series belongs to.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IBarSeries.ValueAxis">
            <summary>
            Gets the <see cref="P:OxyPlot.Series.IBarSeries.ValueAxis"/> the bar series uses.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.IBarSeries.UpdateValidData">
            <summary>
            Updates the valid data.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IBarSeries.ActualItems">
            <summary>
            Gets the actual bar items.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.IntervalBarItem">
            <summary>
            Represents an item in an IntervalBarSeries.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.IntervalBarItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.IntervalBarItem" /> class.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.IntervalBarItem.#ctor(System.Double,System.Double,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.IntervalBarItem" /> class.
            </summary>
            <param name="start">The start.</param>
            <param name="end">The end.</param>
            <param name="title">The title.</param>
        </member>
        <member name="P:OxyPlot.Series.IntervalBarItem.Color">
            <summary>
            Gets or sets the color.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IntervalBarItem.End">
            <summary>
            Gets or sets the end value.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IntervalBarItem.Start">
            <summary>
            Gets or sets the start value.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IntervalBarItem.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.IntervalBarItem.ToCode">
            <summary>
            Returns c# code that generates this instance.
            </summary>
            <returns>C# code.</returns>
        </member>
        <member name="T:OxyPlot.Series.IntervalBarSeries">
            <summary>
            Represents a series for bar charts defined by to/from values.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.IntervalBarSeries.DefaultTrackerFormatString">
            <summary>
            The default tracker format string
            </summary>
        </member>
        <member name="F:OxyPlot.Series.IntervalBarSeries.defaultFillColor">
            <summary>
            The default fill color.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.IntervalBarSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.IntervalBarSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IntervalBarSeries.ActualFillColor">
            <summary>
            Gets the actual fill color.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="P:OxyPlot.Series.IntervalBarSeries.ColorField">
            <summary>
            Gets or sets the color field.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IntervalBarSeries.EndField">
            <summary>
            Gets or sets the color field.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IntervalBarSeries.FillColor">
            <summary>
            Gets or sets the default color of the interior of the Maximum bars.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:OxyPlot.Series.IntervalBarSeries.IsStacked">
            <inheritdoc/>
        </member>
        <member name="P:OxyPlot.Series.IntervalBarSeries.OverlapsStack">
            <inheritdoc/>
        </member>
        <member name="P:OxyPlot.Series.IntervalBarSeries.LabelColor">
            <summary>
            Gets or sets the label color.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IntervalBarSeries.LabelFormatString">
            <summary>
            Gets or sets the format string for the maximum labels.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IntervalBarSeries.LabelMargin">
            <summary>
            Gets or sets the label margins.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IntervalBarSeries.StackGroup">
            <inheritdoc/>
        </member>
        <member name="P:OxyPlot.Series.IntervalBarSeries.StartField">
            <summary>
            Gets or sets the color field.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IntervalBarSeries.ActualBarRectangles">
            <summary>
            Gets or sets the actual rectangles for the maximum bars.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.IntervalBarSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.IntervalBarSeries.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.IntervalBarSeries.SetDefaultValues">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.IntervalBarSeries.UpdateMaxMin">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.IntervalBarSeries.IsValid(OxyPlot.Series.IntervalBarItem)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.IntervalBarSeries.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.IntervalBarSeries.UpdateFromDataFields">
            <inheritdoc/>
        </member>
        <member name="T:OxyPlot.Series.IStackableSeries">
            <summary>
            Defines properties for stacked series.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IStackableSeries.IsStacked">
            <summary>
            Gets a value indicating whether this series is stacked.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IStackableSeries.OverlapsStack">
            <summary>
            Gets a value indicating whether this series should overlap its stack when <see cref="P:OxyPlot.Series.IStackableSeries.IsStacked"/> is true.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.IStackableSeries.StackGroup">
            <summary>
            Gets the stack group.
            </summary>
            <value>The stack group.</value>
        </member>
        <member name="T:OxyPlot.Series.LabelPlacement">
            <summary>
            Placement of the labels.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LabelPlacement.Outside">
            <summary>
            Placed outside the bar.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LabelPlacement.Inside">
            <summary>
            Placed inside the bar.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LabelPlacement.Middle">
            <summary>
            Placed inside in the middle/center of the bar.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LabelPlacement.Base">
            <summary>
            Placed inside at the base of the bar.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.LinearBarSeries">
            <summary>
            Represents a series to display bars in a linear axis
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LinearBarSeries.rectangles">
            <summary>
            The rendered rectangles.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LinearBarSeries.rectanglesPointIndexes">
            <summary>
            The indexes matching rendered rectangles.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LinearBarSeries.defaultColor">
            <summary>
            The default color.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.LinearBarSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.LinearBarSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.LinearBarSeries.FillColor">
            <summary>
            Gets or sets the color of the interior of the bars.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:OxyPlot.Series.LinearBarSeries.BarWidth">
            <summary>
            Gets or sets the width of the bars.
            </summary>
            <value>The width of the bars.</value>
        </member>
        <member name="P:OxyPlot.Series.LinearBarSeries.StrokeThickness">
            <summary>
            Gets or sets the thickness of the curve.
            </summary>
            <value> The stroke thickness.</value>
        </member>
        <member name="P:OxyPlot.Series.LinearBarSeries.StrokeColor">
            <summary>
            Gets or sets the color of the border around the bars.
            </summary>
            <value>The color of the stroke.</value>
        </member>
        <member name="P:OxyPlot.Series.LinearBarSeries.NegativeFillColor">
            <summary>
            Gets or sets the color of the interior of the bars when the value is negative.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:OxyPlot.Series.LinearBarSeries.NegativeStrokeColor">
            <summary>
            Gets or sets the color of the border around the bars when the value is negative.
            </summary>
            <value>The color of the stroke.</value>
        </member>
        <member name="P:OxyPlot.Series.LinearBarSeries.ActualColor">
            <summary>
            Gets the actual color.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="M:OxyPlot.Series.LinearBarSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the nearest point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">interpolate if set to <c>true</c> .</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.LinearBarSeries.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.LinearBarSeries.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the legend symbol for the line series on the
            specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="legendBox">The bounding rectangle of the legend box.</param>
        </member>
        <member name="M:OxyPlot.Series.LinearBarSeries.SetDefaultValues">
            <summary>
            Sets default values from the plot model.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.LinearBarSeries.UpdateAxisMaxMin">
            <summary>
            Updates the axes to include the max and min of this series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.LinearBarSeries.FindRectangleIndex(OxyPlot.ScreenPoint)">
            <summary>
            Find the index of a rectangle that contains the specified point.
            </summary>
            <param name="point">the target point</param>
            <returns>the rectangle index</returns>
        </member>
        <member name="M:OxyPlot.Series.LinearBarSeries.RenderBars(OxyPlot.IRenderContext,System.Collections.Generic.List{OxyPlot.DataPoint})">
            <summary>
            Renders the series bars.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="actualPoints">The list of points that should be rendered.</param>
        </member>
        <member name="M:OxyPlot.Series.LinearBarSeries.GetBarWidth(System.Collections.Generic.List{OxyPlot.DataPoint})">
            <summary>
            Computes the bars width.
            </summary>
            <param name="actualPoints">The list of points.</param>
            <returns>The bars width.</returns>
        </member>
        <member name="M:OxyPlot.Series.LinearBarSeries.GetBarColors(System.Double)">
            <summary>
            Gets the colors used to draw a bar.
            </summary>
            <param name="y">The point y value</param>
            <returns>The bar colors</returns>
        </member>
        <member name="T:OxyPlot.Series.LinearBarSeries.BarColors">
            <summary>
            Stores the colors used to draw a bar.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.LinearBarSeries.BarColors.#ctor(OxyPlot.OxyColor,OxyPlot.OxyColor)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.LinearBarSeries.BarColors" /> struct.
            </summary>
            <param name="fillColor">The fill color</param>
            <param name="strokeColor">The stroke color</param>
        </member>
        <member name="P:OxyPlot.Series.LinearBarSeries.BarColors.FillColor">
            <summary>
            Gets the fill color.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.LinearBarSeries.BarColors.StrokeColor">
            <summary>
            Gets the stroke color.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.RectangleBarItem">
            <summary>
            Represents a rectangle item in a RectangleBarSeries.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.RectangleBarItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.RectangleBarItem" /> class.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.RectangleBarItem.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.RectangleBarItem" /> class.
            </summary>
            <param name="x0">The x0.</param>
            <param name="y0">The y0.</param>
            <param name="x1">The x1.</param>
            <param name="y1">The y1.</param>
        </member>
        <member name="P:OxyPlot.Series.RectangleBarItem.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <remarks>If set to Automatic, the FillColor of the RectangleBarSeries will be used.</remarks>
        </member>
        <member name="P:OxyPlot.Series.RectangleBarItem.Title">
            <summary>
            Gets or sets the title.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.RectangleBarItem.X0">
            <summary>
            Gets or sets the x0 coordinate.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.RectangleBarItem.X1">
            <summary>
            Gets or sets the x1 coordinate.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.RectangleBarItem.Y0">
            <summary>
            Gets or sets the y0 coordinate.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.RectangleBarItem.Y1">
            <summary>
            Gets or sets the y1 coordinate.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.RectangleBarItem.ToCode">
            <summary>
            Returns c# code that generates this instance.
            </summary>
            <returns>C# code.</returns>
        </member>
        <member name="T:OxyPlot.Series.RectangleBarSeries">
            <summary>
            Represents a series for bar charts where the bars are defined by rectangles.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.RectangleBarSeries.DefaultTrackerFormatString">
            <summary>
            The default tracker format string
            </summary>
        </member>
        <member name="F:OxyPlot.Series.RectangleBarSeries.defaultFillColor">
            <summary>
            The default fill color.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.RectangleBarSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.RectangleBarSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.RectangleBarSeries.FillColor">
            <summary>
            Gets or sets the default color of the interior of the rectangles.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:OxyPlot.Series.RectangleBarSeries.ActualFillColor">
            <summary>
            Gets the actual fill color.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="P:OxyPlot.Series.RectangleBarSeries.Items">
            <summary>
            Gets the rectangle bar items.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.RectangleBarSeries.LabelColor">
            <summary>
            Gets or sets the label color.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.RectangleBarSeries.LabelFormatString">
            <summary>
            Gets or sets the format string for the labels.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.RectangleBarSeries.StrokeColor">
            <summary>
            Gets or sets the color of the border around the rectangles.
            </summary>
            <value>The color of the stroke.</value>
        </member>
        <member name="P:OxyPlot.Series.RectangleBarSeries.StrokeThickness">
            <summary>
            Gets or sets the thickness of the border around the rectangles.
            </summary>
            <value>The stroke thickness.</value>
        </member>
        <member name="P:OxyPlot.Series.RectangleBarSeries.ActualBarRectangles">
            <summary>
            Gets or sets the actual rectangles for the rectangles.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.RectangleBarSeries.ActualItems">
            <summary>
            Gets or sets the actual rectangle bar items.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.RectangleBarSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the point in the dataset that is nearest the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">Specifies whether to interpolate or not.</param>
            <returns>A <see cref="T:OxyPlot.TrackerHitResult" /> for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.RectangleBarSeries.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.RectangleBarSeries.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the legend symbol on the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="legendBox">The legend rectangle.</param>
        </member>
        <member name="M:OxyPlot.Series.RectangleBarSeries.SetDefaultValues">
            <summary>
            Sets the default values.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.RectangleBarSeries.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.RectangleBarSeries.UpdateMaxMin">
            <summary>
            Updates the maximum and minimum values of the series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.RectangleBarSeries.IsValid(System.Double)">
            <summary>
            Checks if the specified value is valid.
            </summary>
            <param name="v">The value.</param>
            <returns>True if the value is valid.</returns>
        </member>
        <member name="T:OxyPlot.Series.TornadoBarItem">
            <summary>
            Represents an item for the TornadoBarSeries.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.TornadoBarItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.TornadoBarItem" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarItem.BaseValue">
            <summary>
            Gets or sets the base value.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarItem.Maximum">
            <summary>
            Gets or sets the maximum value.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarItem.MaximumColor">
            <summary>
            Gets or sets the color for the maximum bar.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarItem.Minimum">
            <summary>
            Gets or sets the minimum value.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarItem.MinimumColor">
            <summary>
            Gets or sets the color for the minimum bar.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.TornadoBarItem.ToCode">
            <summary>
            Returns c# code that generates this instance.
            </summary>
            <returns>C# code.</returns>
        </member>
        <member name="T:OxyPlot.Series.TornadoBarSeries">
            <summary>
            Represents a series that can be used to create tornado plots.
            </summary>
            <remarks>See http://en.wikipedia.org/wiki/Tornado_diagram.</remarks>
        </member>
        <member name="F:OxyPlot.Series.TornadoBarSeries.DefaultTrackerFormatString">
            <summary>
            The default tracker format string
            </summary>
        </member>
        <member name="F:OxyPlot.Series.TornadoBarSeries.defaultMaximumFillColor">
            <summary>
            The default fill color.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.TornadoBarSeries.defaultMinimumFillColor">
            <summary>
            The default minimum fill color.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.TornadoBarSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.TornadoBarSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarSeries.ActualMaximumFillColor">
            <summary>
            Gets the actual fill color.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarSeries.ActualMinimumFillColor">
            <summary>
            Gets the actual minimum fill color.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarSeries.BaseField">
            <summary>
            Gets or sets the color field.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarSeries.BaseValue">
            <summary>
            Gets or sets the base value.
            </summary>
            <value>The base value.</value>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarSeries.LabelColor">
            <summary>
            Gets or sets the label color.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarSeries.LabelMargin">
            <summary>
            Gets or sets the label margins.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarSeries.MaximumColorField">
            <summary>
            Gets or sets the color field.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarSeries.MaximumField">
            <summary>
            Gets or sets the color field.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarSeries.MaximumFillColor">
            <summary>
            Gets or sets the color of the interior of the Maximum bars.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarSeries.MaximumLabelFormatString">
            <summary>
            Gets or sets the format string for the maximum labels.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarSeries.MinimumColorField">
            <summary>
            Gets or sets the color field.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarSeries.MinimumField">
            <summary>
            Gets or sets the color field.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarSeries.MinimumFillColor">
            <summary>
            Gets or sets the default color of the interior of the Minimum bars.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarSeries.MinimumLabelFormatString">
            <summary>
            Gets or sets the format string for the minimum labels.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarSeries.ActualMaximumBarRectangles">
            <summary>
            Gets or sets the actual rectangles for the maximum bars.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TornadoBarSeries.ActualMinimumBarRectangles">
            <summary>
            Gets or sets the actual rectangles for the minimum bars.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.TornadoBarSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.TornadoBarSeries.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.TornadoBarSeries.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.TornadoBarSeries.SetDefaultValues">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.TornadoBarSeries.UpdateMaxMin">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.TornadoBarSeries.IsValid(OxyPlot.Series.TornadoBarItem)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.TornadoBarSeries.UpdateFromDataFields">
            <inheritdoc/>
        </member>
        <member name="T:OxyPlot.Series.BoxPlotItem">
            <summary>
            Represents an item in a <see cref="T:OxyPlot.Series.BoxPlotSeries" />.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BoxPlotItem.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.BoxPlotItem" /> class.
            </summary>
            <param name="x">The x.</param>
            <param name="lowerWhisker">The lower whisker.</param>
            <param name="boxBottom">The box bottom.</param>
            <param name="median">The median.</param>
            <param name="boxTop">The box top.</param>
            <param name="upperWhisker">The upper whisker.</param>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotItem.BoxBottom">
            <summary>
            Gets or sets the box bottom value (usually the 25th percentile, Q1).
            </summary>
            <value>The lower quartile value.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotItem.BoxTop">
            <summary>
            Gets or sets the box top value (usually the 75th percentile, Q3)).
            </summary>
            <value>The box top value.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotItem.LowerWhisker">
            <summary>
            Gets or sets the lower whisker value.
            </summary>
            <value>The lower whisker value.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotItem.Median">
            <summary>
            Gets or sets the median.
            </summary>
            <value>The median.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotItem.Mean">
            <summary>
            Gets or sets the mean.
            </summary>
            <value>The mean.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotItem.Outliers">
            <summary>
            Gets or sets the outliers.
            </summary>
            <value>The outliers.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotItem.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotItem.UpperWhisker">
            <summary>
            Gets or sets the upper whisker value.
            </summary>
            <value>The upper whisker value.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotItem.Values">
            <summary>
            Gets a list of all the values in the item.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotItem.X">
            <summary>
            Gets or sets the X value.
            </summary>
            <value>The X value.</value>
        </member>
        <member name="M:OxyPlot.Series.BoxPlotItem.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:OxyPlot.Series.BoxPlotSeries">
            <summary>
            Represents a series for box plots.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.BoxPlotSeries.DefaultTrackerFormatString">
            <summary>
            The default tracker format string
            </summary>
        </member>
        <member name="F:OxyPlot.Series.BoxPlotSeries.itemsSourceItems">
            <summary>
            The items from the items source.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.BoxPlotSeries.ownsItemsSourceItems">
            <summary>
            Specifies if the ownsItemsSourceItems list can be modified.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BoxPlotSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.BoxPlotSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.BoxWidth">
            <summary>
            Gets or sets the width of the boxes (specified in x-axis units).
            </summary>
            <value>The width of the boxes.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.Fill">
            <summary>
            Gets or sets the fill color. If <c>null</c>, this color will be automatically set.
            </summary>
            <value>The fill color.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.Items">
            <summary>
            Gets or sets the box plot items.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.LineStyle">
            <summary>
            Gets or sets the line style.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.MedianPointSize">
            <summary>
            Gets or sets the size of the median point.
            </summary>
            <remarks>This property is only used when ShowMedianAsDot = true.</remarks>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.MedianThickness">
            <summary>
            Gets or sets the median thickness, relative to the StrokeThickness.
            </summary>
            <value>The median thickness.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.MeanPointSize">
            <summary>
            Gets or sets the size of the mean point.
            </summary>
            <remarks>This property is only used when ShowMeanAsDot = true.</remarks>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.MeanThickness">
            <summary>
            Gets or sets the mean thickness, relative to the StrokeThickness.
            </summary>
            <value>The mean thickness.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.OutlierSize">
            <summary>
            Gets or sets the diameter of the outlier circles (specified in points).
            </summary>
            <value>The size of the outlier.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.OutlierTrackerFormatString">
            <summary>
            Gets or sets the tracker format string for the outliers.
            </summary>
            <value>The tracker format string for the outliers.</value>
            <remarks>Use {0} for series title, {1} for x- and {2} for y-value.</remarks>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.OutlierType">
            <summary>
            Gets or sets the type of the outliers.
            </summary>
            <value>The type of the outliers.</value>
            <remarks>MarkerType.Custom is currently not supported.</remarks>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.OutlierOutline">
            <summary>
            Gets or sets the a custom polygon outline for the outlier markers. Set <see cref="P:OxyPlot.Series.BoxPlotSeries.OutlierType" /> to <see cref="F:OxyPlot.MarkerType.Custom" /> to use this property.
            </summary>
            <value>A polyline. The default is <c>null</c>.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.ShowBox">
            <summary>
            Gets or sets a value indicating whether to show the boxes.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.ShowMedianAsDot">
            <summary>
            Gets or sets a value indicating whether to show the median as a dot.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.ShowMeanAsDot">
            <summary>
            Gets or sets a value indicating whether to show the mean as a dot.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.Stroke">
            <summary>
            Gets or sets the stroke color.
            </summary>
            <value>The stroke color.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness.
            </summary>
            <value>The stroke thickness.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.WhiskerWidth">
            <summary>
            Gets or sets the width of the whiskers (relative to the BoxWidth).
            </summary>
            <value>The width of the whiskers.</value>
        </member>
        <member name="P:OxyPlot.Series.BoxPlotSeries.ActualItems">
            <summary>
            Gets the list of items that should be rendered.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BoxPlotSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the nearest point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">interpolate if set to <c>true</c> .</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.BoxPlotSeries.IsValidPoint(OxyPlot.Series.BoxPlotItem,OxyPlot.Axes.Axis,OxyPlot.Axes.Axis)">
            <summary>
            Determines whether the specified item contains a valid point.
            </summary>
            <param name="item">The item.</param>
            <param name="xaxis">The x axis.</param>
            <param name="yaxis">The y axis.</param>
            <returns><c>true</c> if the point is valid; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.Series.BoxPlotSeries.Render(OxyPlot.IRenderContext)">
            <summary>
            Renders the series on the specified render context.
            </summary>
            <param name="rc">The rendering context.</param>
        </member>
        <member name="M:OxyPlot.Series.BoxPlotSeries.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the legend symbol on the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="legendBox">The legend rectangle.</param>
        </member>
        <member name="M:OxyPlot.Series.BoxPlotSeries.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BoxPlotSeries.UpdateMaxMin">
            <summary>
            Updates the maximum and minimum values of the series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.BoxPlotSeries.InternalUpdateMaxMin(System.Collections.Generic.IList{OxyPlot.Series.BoxPlotItem})">
            <summary>
            Updates the max and min of the series.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="M:OxyPlot.Series.BoxPlotSeries.GetItem(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <param name="i">The index of the item.</param>
            <returns>The item of the index.</returns>
        </member>
        <member name="M:OxyPlot.Series.BoxPlotSeries.GetBoxRect(OxyPlot.Series.BoxPlotItem)">
            <summary>
            Gets the screen rectangle for the box.
            </summary>
            <param name="item">The box item.</param>
            <returns>A rectangle.</returns>
        </member>
        <member name="M:OxyPlot.Series.BoxPlotSeries.ClearItemsSourceItems">
            <summary>
            Clears or creates the <see cref="F:OxyPlot.Series.BoxPlotSeries.itemsSourceItems"/> list.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.ContourSeries">
            <summary>
            Represents a series that renders contours.
            </summary>
            <remarks>See <a href="http://en.wikipedia.org/wiki/Contour_line">wikipedia</a> and <a href="http://www.mathworks.se/help/techdoc/ref/contour.html">link</a>.</remarks>
        </member>
        <member name="F:OxyPlot.Series.ContourSeries.DefaultTrackerFormatString">
            <summary>
            The default tracker format string
            </summary>
        </member>
        <member name="F:OxyPlot.Series.ContourSeries.contours">
            <summary>
            The contour collection.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.ContourSeries.segments">
            <summary>
            The temporary segment collection.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.ContourSeries.defaultColor">
            <summary>
            The default color.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ContourSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.Series.ContourSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.ActualColor">
            <summary>
            Gets the actual color.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.ColumnCoordinates">
            <summary>
            Gets or sets the column coordinates.
            </summary>
            <value>The column coordinates.</value>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.ContourLevelStep">
            <summary>
            Gets or sets the contour level step size.
            This property is not used if the <see cref="P:OxyPlot.Series.ContourSeries.ContourLevels"/> vector is set.
            </summary>
            <value>The contour level step size.</value>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.ContourLevels">
            <summary>
            Gets or sets the contour levels.
            </summary>
            <value>The contour levels.</value>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.ContourColors">
            <summary>
            Gets or sets the contour colors.
            </summary>
            <value>The contour colors.</value>
            <remarks>These colors will override the Color of the series.
            If there are less colors than the number of contour levels, the colors will cycle.</remarks>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.LabelBackground">
            <summary>
            Gets or sets the text background color.
            </summary>
            <value>The text background color.</value>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.LabelFormatString">
            <summary>
            Gets or sets the format string for contour values.
            </summary>
            <value>The format string.</value>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.LabelSpacing">
            <summary>
            Gets or sets the label spacing, which is the space between labels on the same contour. Not used if <see cref="P:OxyPlot.Series.ContourSeries.MultiLabel"/>==<see langword="false"/>
            </summary>
            <value>The label spacing.</value>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.MultiLabel">
            <summary>
            Gets or sets a value indicating whether multiple labels should be displayed per Contour. The default value is <c>false</c>
            </summary>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.LabelStep">
            <summary>
            Gets or sets the interval between labeled contours. LabelStep = 1 is default and it means that all contours have a label
            </summary>
            <value>The label step.</value>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.LineStyle">
            <summary>
            Gets or sets the line style.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.RowCoordinates">
            <summary>
            Gets or sets the row coordinates.
            </summary>
            <value>The row coordinates.</value>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness.
            </summary>
            <value>The stroke thickness.</value>
        </member>
        <member name="M:OxyPlot.Series.ContourSeries.CalculateContours">
            <summary>
            Calculates the contours.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ContourSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the point in the dataset that is nearest the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">The interpolate.</param>
            <returns>A hit result object.</returns>
        </member>
        <member name="M:OxyPlot.Series.ContourSeries.Render(OxyPlot.IRenderContext)">
            <summary>
            Renders the series on the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
        </member>
        <member name="M:OxyPlot.Series.ContourSeries.SetDefaultValues">
            <summary>
            Sets default values from the plot model.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ContourSeries.UpdateMaxMin">
            <summary>
            Updates the maximum and minimum values of the series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ContourSeries.AreClose(System.Double,System.Double,System.Double)">
            <summary>
            Determines if two values are close.
            </summary>
            <param name="x1">The first value.</param>
            <param name="x2">The second value.</param>
            <param name="eps">The squared tolerance.</param>
            <returns>True if the values are close.</returns>
        </member>
        <member name="M:OxyPlot.Series.ContourSeries.AreClose(OxyPlot.DataPoint,OxyPlot.DataPoint,System.Double)">
            <summary>
            Determines if two points are close.
            </summary>
            <param name="p0">The first point.</param>
            <param name="p1">The second point.</param>
            <param name="eps">The squared tolerance.</param>
            <returns>True if the points are close.</returns>
        </member>
        <member name="M:OxyPlot.Series.ContourSeries.IndexOf(System.Collections.Generic.IList{System.Double},System.Double)">
            <summary>
            Gets the index of item that is closest to the specified value.
            </summary>
            <param name="values">A list of values.</param>
            <param name="value">A value.</param>
            <returns>An index.</returns>
        </member>
        <member name="M:OxyPlot.Series.ContourSeries.AddContourLabels(OxyPlot.Series.ContourSeries.Contour,OxyPlot.ScreenPoint[],System.Collections.Generic.ICollection{OxyPlot.Series.ContourSeries.ContourLabel},System.Double)">
            <summary>
            The add contour labels.
            </summary>
            <param name="contour">The contour.</param>
            <param name="pts">The points of the contour.</param>
            <param name="contourLabels">The contour labels.</param>
            <param name="labelIndex">The index of the point in the list of points, where the label should get added.</param>
        </member>
        <member name="M:OxyPlot.Series.ContourSeries.FindConnectedSegment(OxyPlot.DataPoint,System.Double,System.Double,System.Boolean@)">
            <summary>
            Finds the connected segment.
            </summary>
            <param name="point">The point.</param>
            <param name="contourLevel">The contour level.</param>
            <param name="eps">The distance tolerance.</param>
            <param name="reverse">reverse the segment if set to <c>true</c>.</param>
            <returns>The connected segment, or <c>null</c> if no segment was found.</returns>
        </member>
        <member name="M:OxyPlot.Series.ContourSeries.JoinContourSegments(System.Double)">
            <summary>
            Joins the contour segments.
            </summary>
            <param name="eps">The tolerance for segment ends to connect (squared distance).</param>
        </member>
        <member name="M:OxyPlot.Series.ContourSeries.RenderLabel(OxyPlot.IRenderContext,OxyPlot.Series.ContourSeries.ContourLabel)">
            <summary>
            Renders the contour label.
            </summary>
            <param name="rc">The render context.</param>
            <param name="cl">The contour label.</param>
        </member>
        <member name="M:OxyPlot.Series.ContourSeries.RenderLabelBackground(OxyPlot.IRenderContext,OxyPlot.Series.ContourSeries.ContourLabel)">
            <summary>
            Renders the contour label background.
            </summary>
            <param name="rc">The render context.</param>
            <param name="cl">The contour label.</param>
        </member>
        <member name="T:OxyPlot.Series.ContourSeries.Contour">
            <summary>
            Represents a contour.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.ContourSeries.Contour.ContourLevel">
            <summary>
            Gets or sets the contour level.
            </summary>
            <value>The contour level.</value>
        </member>
        <member name="F:OxyPlot.Series.ContourSeries.Contour.Points">
            <summary>
            Gets or sets the points.
            </summary>
            <value>The points.</value>
        </member>
        <member name="M:OxyPlot.Series.ContourSeries.Contour.#ctor(System.Collections.Generic.List{OxyPlot.DataPoint},System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.ContourSeries.Contour" /> class.
            </summary>
            <param name="points">The points.</param>
            <param name="contourLevel">The contour level.</param>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.Contour.Color">
            <summary>
            Gets or sets the color of the contour.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.ContourSeries.ContourLabel">
            <summary>
            Represents a contour label.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.ContourLabel.Angle">
            <summary>
            Gets or sets the angle.
            </summary>
            <value>The angle.</value>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.ContourLabel.Position">
            <summary>
            Gets or sets the position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:OxyPlot.Series.ContourSeries.ContourLabel.Text">
            <summary>
            Gets or sets the text.
            </summary>
            <value>The text.</value>
        </member>
        <member name="T:OxyPlot.Series.ContourSeries.ContourSegment">
            <summary>
            Represents a contour segment.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.ContourSeries.ContourSegment.ContourLevel">
            <summary>
            The contour level.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.ContourSeries.ContourSegment.EndPoint">
            <summary>
            The end point.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.ContourSeries.ContourSegment.StartPoint">
            <summary>
            The start point.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ContourSeries.ContourSegment.#ctor(OxyPlot.DataPoint,OxyPlot.DataPoint,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.ContourSeries.ContourSegment" /> class.
            </summary>
            <param name="startPoint">The start point.</param>
            <param name="endPoint">The end point.</param>
            <param name="contourLevel">The contour level.</param>
        </member>
        <member name="T:OxyPlot.Series.DataPointSeries">
            <summary>
            Provides an abstract base class for series that contain a collection of <see cref="T:OxyPlot.DataPoint" />s.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.DataPointSeries.points">
            <summary>
            The list of data points.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.DataPointSeries.itemsSourcePoints">
            <summary>
            The data points from the items source.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.DataPointSeries.ownsItemsSourcePoints">
            <summary>
            Specifies if the itemsSourcePoints list can be modified.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.DataPointSeries.CanTrackerInterpolatePoints">
            <summary>
            Gets or sets a value indicating whether the tracker can interpolate points.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.DataPointSeries.DataFieldX">
            <summary>
            Gets or sets the data field X. The default is <c>null</c>.
            </summary>
            <value>The data field X.</value>
        </member>
        <member name="P:OxyPlot.Series.DataPointSeries.DataFieldY">
            <summary>
            Gets or sets the data field Y. The default is <c>null</c>.
            </summary>
            <value>The data field Y.</value>
        </member>
        <member name="P:OxyPlot.Series.DataPointSeries.Mapping">
            <summary>
            Gets or sets the delegate used to map from <see cref="P:OxyPlot.Series.ItemsSeries.ItemsSource" /> to the <see cref="P:OxyPlot.Series.DataPointSeries.ActualPoints" />. The default is <c>null</c>.
            </summary>
            <value>The mapping.</value>
            <remarks>Example: series1.Mapping = item => new DataPoint(((MyType)item).Time,((MyType)item).Value);</remarks>
        </member>
        <member name="P:OxyPlot.Series.DataPointSeries.Points">
            <summary>
            Gets the list of points.
            </summary>
            <value>A list of <see cref="T:OxyPlot.DataPoint" />.</value>
        </member>
        <member name="P:OxyPlot.Series.DataPointSeries.ActualPoints">
            <summary>
            Gets the list of points that should be rendered.
            </summary>
            <value>A list of <see cref="T:OxyPlot.DataPoint" />.</value>
        </member>
        <member name="M:OxyPlot.Series.DataPointSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the point on the series that is nearest the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">Interpolate the series if this flag is set to <c>true</c>.</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.DataPointSeries.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.DataPointSeries.UpdateMaxMin">
            <summary>
            Updates the maximum and minimum values of the series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.DataPointSeries.GetItem(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <param name="i">The index of the item.</param>
            <returns>The item of the index.</returns>
        </member>
        <member name="M:OxyPlot.Series.DataPointSeries.ClearItemsSourcePoints">
            <summary>
            Clears or creates the <see cref="F:OxyPlot.Series.DataPointSeries.itemsSourcePoints"/> list.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.DataPointSeries.UpdateItemsSourcePoints">
            <summary>
            Updates the points from the <see cref="P:OxyPlot.Series.ItemsSeries.ItemsSource" />.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.CandleStickAndVolumeSeries">
            <summary>
            Represents a dual view (candlestick + volume) series for OHLCV bars
            <para/>
            Note that to use this series, one *must* define two y-axes, one named "Bars" and the other named
            "Volume".  Typically would set up the volume on StartPosition =0, EndPosition = fraction and for
            the bar axis StartPosition = fraction + delta, EndPosition = 1.0.
            </summary>
            <remarks>See <a href="http://www.mathworks.com/help/toolbox/finance/highlowfts.html">link</a></remarks>
        </member>
        <member name="F:OxyPlot.Series.CandleStickAndVolumeSeries.DefaultTrackerFormatString">
            <summary>
            The default tracker format string
            </summary>
        </member>
        <member name="F:OxyPlot.Series.CandleStickAndVolumeSeries.data">
            <summary>
            The data series
            </summary>
        </member>
        <member name="F:OxyPlot.Series.CandleStickAndVolumeSeries.minDx">
            <summary>
            The minimum X gap between successive data items
            </summary>
        </member>
        <member name="F:OxyPlot.Series.CandleStickAndVolumeSeries.winIndex">
            <summary>
            The index of the data item at the start of visible window
            </summary>
        </member>
        <member name="M:OxyPlot.Series.CandleStickAndVolumeSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.Series.CandleStickAndVolumeSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.Items">
            <summary>
            Gets or sets the items of the series.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.BarAxis">
            <summary>
            Gets the portion of the Y axis associated with bars
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.VolumeAxis">
            <summary>
            Gets the portion of the Y axis associated with volume
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.VolumeAxisKey">
            <summary>
            Gets or sets the volume axis key (defaults to "Volume")
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.BarAxisKey">
            <summary>
            Gets or sets the bar axis key (defaults to null, as is the primary axis).
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.VolumeStyle">
            <summary>
            Gets or sets the style of volume rendering (defaults to Combined)
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.StrokeThickness">
            <summary>
            Gets or sets the thickness of the bar lines
            </summary>
            <value>The stroke thickness.</value>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.StrokeIntensity">
            <summary>
            Gets or sets the stroke intensity scale (used to generate stroke color from positive or negative color).
            For example, 1.0 = same color and 0.5 is 1/2 of the intensity of the source fill color.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.SeparatorStrokeThickness">
            <summary>
            Gets or sets the thickness of the volume / bar separator
            </summary>
            <value>The stroke thickness.</value>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.SeparatorLineStyle">
            <summary>
            Gets or sets the line style for the volume / bar separator
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.PositiveColor">
            <summary>
            Gets or sets the color used when the closing value is greater than opening value or
            for buying volume.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.NegativeColor">
            <summary>
            Gets or sets the fill color used when the closing value is less than opening value or
            for selling volume
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.SeparatorColor">
            <summary>
            Gets or sets the color of the separator line
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.PositiveHollow">
            <summary>
            Gets or sets a value indicating whether positive bars are shown as filled (false) or hollow (true) candlesticks
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.NegativeHollow">
            <summary>
            Gets or sets a value indicating whether negative bars are shown as filled (false) or hollow (true) candlesticks
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.CandleWidth">
            <summary>
            Gets or sets the bar width in data units (for example if the X axis is date-time based, then should
            use the difference of DateTimeAxis.ToDouble(date) to indicate the width).  By default candlestick
            series will use 0.80 x the minimum difference in data points.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.MinimumVolume">
            <summary>
            Gets or sets the minimum volume seen in the data series.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.MaximumVolume">
            <summary>
            Gets or sets the maximum volume seen in the data series.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickAndVolumeSeries.AverageVolume">
            <summary>
            Gets or sets the average volume seen in the data series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.CandleStickAndVolumeSeries.Append(OxyPlot.Series.OhlcvItem)">
            <summary>
            Append a bar to the series (must be in X order)
            </summary>
            <param name="bar">Bar object.</param>
        </member>
        <member name="M:OxyPlot.Series.CandleStickAndVolumeSeries.FindByX(System.Double,System.Int32)">
            <summary>
            Fast index of bar where max(bar[i].X) &lt;= x 
            </summary>
            <returns>The index of the bar closest to X, where max(bar[i].X) &lt;= x.</returns>
            <param name="x">The x coordinate.</param>
            <param name="startingIndex">starting index</param> 
        </member>
        <member name="M:OxyPlot.Series.CandleStickAndVolumeSeries.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.CandleStickAndVolumeSeries.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the legend symbol for the series on the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="legendBox">The bounding rectangle of the legend box.</param>
        </member>
        <member name="M:OxyPlot.Series.CandleStickAndVolumeSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the point on the series that is nearest the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">Interpolate the series if this flag is set to <c>true</c>.</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.CandleStickAndVolumeSeries.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.CandleStickAndVolumeSeries.EnsureAxes">
            <summary>
            Ensures that the axes of the series is defined.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.CandleStickAndVolumeSeries.UpdateAxisMaxMin">
            <summary>
            Updates the axes to include the max and min of this series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.CandleStickAndVolumeSeries.UpdateMaxMin">
            <summary>
            Updates the maximum and minimum values of the series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.CandleStickAndVolumeSeries.GetClippingRect(OxyPlot.Axes.Axis)">
            <summary>
            Gets the clipping rectangle for the given combination of existing X-Axis and specific Y-Axis
            </summary>
            <returns>The clipping rectangle.</returns>
            <param name="yaxis">Y axis.</param>
        </member>
        <member name="M:OxyPlot.Series.CandleStickAndVolumeSeries.GetSeparationClippingRect">
            <summary>
            Gets the clipping rectangle between plots
            </summary>
            <returns>The clipping rectangle.</returns>
        </member>
        <member name="T:OxyPlot.Series.CandleStickSeries">
            <summary>
            Represents a "higher performance" ordered OHLC series for candlestick charts
            <para>
            Does the following:
            - automatically calculates the appropriate bar width based on available screen + # of bars
            - can render and pan within millions of bars, using a fast approach to indexing in series
            - convenience methods
            </para>
            This implementation is associated with <a href="https://github.com/oxyplot/oxyplot/issues/369">issue 369</a>.
            </summary>
            <remarks>See also <a href="http://en.wikipedia.org/wiki/Candlestick_chart">Wikipedia</a> and
            <a href="http://www.mathworks.com/help/toolbox/finance/candle.html">Matlab documentation</a>.</remarks>
        </member>
        <member name="F:OxyPlot.Series.CandleStickSeries.minDx">
            <summary>
            The minimum X gap between successive data items
            </summary>
        </member>
        <member name="M:OxyPlot.Series.CandleStickSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.Series.CandleStickSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickSeries.IncreasingColor">
            <summary>
            Gets or sets the color used when the closing value is greater than opening value.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickSeries.DecreasingColor">
            <summary>
            Gets or sets the fill color used when the closing value is less than opening value.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.CandleStickSeries.CandleWidth">
            <summary>
            Gets or sets the bar width in data units (for example if the X axis is date/time based, then should
            use the difference of DateTimeAxis.ToDouble(date) to indicate the width).  By default candlestick
            series will use 0.80 x the minimum difference in data points.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.CandleStickSeries.FindByX(System.Double,System.Int32)">
            <summary>
            Fast index of bar where max(bar[i].X) &lt;= x 
            </summary>
            <returns>The index of the bar closest to X, where max(bar[i].X) &lt;= x.</returns>
            <param name="x">The x coordinate.</param>
            <param name="startIndex">starting index</param> 
        </member>
        <member name="M:OxyPlot.Series.CandleStickSeries.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.CandleStickSeries.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the legend symbol for the series on the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="legendBox">The bounding rectangle of the legend box.</param>
        </member>
        <member name="M:OxyPlot.Series.CandleStickSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the point on the series that is nearest the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">Interpolate the series if this flag is set to <c>true</c>.</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.CandleStickSeries.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.HighLowItem">
            <summary>
            Represents an item in a <see cref="T:OxyPlot.Series.HighLowSeries" />.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.HighLowItem.Undefined">
            <summary>
            The undefined.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.HighLowItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.HighLowItem" /> class.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.HighLowItem.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.HighLowItem"/> class.
            </summary>
            <param name="x">
            The x value.
            </param>
            <param name="high">
            The high value.
            </param>
            <param name="low">
            The low value.
            </param>
            <param name="open">
            The open value.
            </param>
            <param name="close">
            The close value.
            </param>
        </member>
        <member name="P:OxyPlot.Series.HighLowItem.Close">
            <summary>
            Gets or sets the close value.
            </summary>
            <value>The close value.</value>
        </member>
        <member name="P:OxyPlot.Series.HighLowItem.High">
            <summary>
            Gets or sets the high value.
            </summary>
            <value>The high value.</value>
        </member>
        <member name="P:OxyPlot.Series.HighLowItem.Low">
            <summary>
            Gets or sets the low value.
            </summary>
            <value>The low value.</value>
        </member>
        <member name="P:OxyPlot.Series.HighLowItem.Open">
            <summary>
            Gets or sets the open value.
            </summary>
            <value>The open value.</value>
        </member>
        <member name="P:OxyPlot.Series.HighLowItem.X">
            <summary>
            Gets or sets the X value (time).
            </summary>
            <value>The X value.</value>
        </member>
        <member name="M:OxyPlot.Series.HighLowItem.ToCode">
            <summary>
            Returns C# code that generates this instance.
            </summary>
            <returns>The C# code.</returns>
        </member>
        <member name="T:OxyPlot.Series.HighLowSeries">
            <summary>
            Represents a series for high-low plots.
            </summary>
            <remarks>See <a href="http://www.mathworks.com/help/toolbox/finance/highlowfts.html">link</a></remarks>
        </member>
        <member name="F:OxyPlot.Series.HighLowSeries.DefaultTrackerFormatString">
            <summary>
            The default tracker format string
            </summary>
        </member>
        <member name="F:OxyPlot.Series.HighLowSeries.items">
            <summary>
            High/low items
            </summary>
        </member>
        <member name="F:OxyPlot.Series.HighLowSeries.defaultColor">
            <summary>
            The default color.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.HighLowSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.Series.HighLowSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.HighLowSeries.Color">
            <summary>
            Gets or sets the color of the item.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:OxyPlot.Series.HighLowSeries.ActualColor">
            <summary>
            Gets the actual color of the item.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="P:OxyPlot.Series.HighLowSeries.Dashes">
            <summary>
            Gets or sets the dashes array.
            If this is not <c>null</c> it overrides the LineStyle property.
            </summary>
            <value>The dashes.</value>
        </member>
        <member name="P:OxyPlot.Series.HighLowSeries.DataFieldClose">
            <summary>
            Gets or sets the data field for the Close value.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.HighLowSeries.DataFieldHigh">
            <summary>
            Gets or sets the data field for the High value.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.HighLowSeries.DataFieldLow">
            <summary>
            Gets or sets the data field for the Low value.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.HighLowSeries.DataFieldOpen">
            <summary>
            Gets or sets the data field for the Open value.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.HighLowSeries.DataFieldX">
            <summary>
            Gets or sets the x data field (time).
            </summary>
        </member>
        <member name="P:OxyPlot.Series.HighLowSeries.Items">
            <summary>
            Gets the items of the series.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:OxyPlot.Series.HighLowSeries.LineJoin">
            <summary>
            Gets or sets the line join.
            </summary>
            <value>The line join.</value>
        </member>
        <member name="P:OxyPlot.Series.HighLowSeries.LineStyle">
            <summary>
            Gets or sets the line style.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:OxyPlot.Series.HighLowSeries.Mapping">
            <summary>
            Gets or sets the mapping delegate.
            </summary>
            <value>The mapping.</value>
            <remarks>Example: series1.Mapping = item => new HighLowItem(((MyType)item).Time,((MyType)item).Value);</remarks>
        </member>
        <member name="P:OxyPlot.Series.HighLowSeries.StrokeThickness">
            <summary>
            Gets or sets the thickness of the curve.
            </summary>
            <value>The stroke thickness.</value>
        </member>
        <member name="P:OxyPlot.Series.HighLowSeries.TickLength">
            <summary>
            Gets or sets the length of the open/close ticks (screen coordinates).
            </summary>
            <value>The length of the open/close ticks.</value>
        </member>
        <member name="M:OxyPlot.Series.HighLowSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the point on the series that is nearest the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">Interpolate the series if this flag is set to <c>true</c>.</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.HighLowSeries.IsValidItem(OxyPlot.Series.HighLowItem,OxyPlot.Axes.Axis,OxyPlot.Axes.Axis)">
            <summary>
            Determines whether the point is valid.
            </summary>
            <param name="pt">The point.</param>
            <param name="xaxis">The x axis.</param>
            <param name="yaxis">The y axis.</param>
            <returns><c>true</c> if the specified point is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OxyPlot.Series.HighLowSeries.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.HighLowSeries.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the legend symbol for the series on the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="legendBox">The bounding rectangle of the legend box.</param>
        </member>
        <member name="M:OxyPlot.Series.HighLowSeries.SetDefaultValues">
            <summary>
            Sets the default values.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.HighLowSeries.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.HighLowSeries.UpdateMaxMin">
            <summary>
            Updates the maximum and minimum values of the series.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.OhlcvItem">
            <summary>
            Represents an item in a <see cref="T:OxyPlot.Series.CandleStickAndVolumeSeries" />.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.OhlcvItem.Undefined">
            <summary>
            The undefined.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.OhlcvItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.OhlcvItem" /> class.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.OhlcvItem.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.OhlcvItem"/> class.
            </summary>
            <param name="x">The x coordinate / time.</param>
            <param name="open">Open value.</param>
            <param name="high">High value.</param>
            <param name="low">Low value.</param>
            <param name="close">Close value.</param>
            <param name="buyvolume">Buy volume.</param>
            <param name="sellvolume">Sell volume.</param>
        </member>
        <member name="P:OxyPlot.Series.OhlcvItem.X">
            <summary>
            Gets or sets the X value (time).
            </summary>
            <value>The X value.</value>
        </member>
        <member name="P:OxyPlot.Series.OhlcvItem.Open">
            <summary>
            Gets or sets the open value.
            </summary>
            <value>The open value.</value>
        </member>
        <member name="P:OxyPlot.Series.OhlcvItem.High">
            <summary>
            Gets or sets the high value.
            </summary>
            <value>The high value.</value>
        </member>
        <member name="P:OxyPlot.Series.OhlcvItem.Low">
            <summary>
            Gets or sets the low value.
            </summary>
            <value>The low value.</value>
        </member>
        <member name="P:OxyPlot.Series.OhlcvItem.Close">
            <summary>
            Gets or sets the close value.
            </summary>
            <value>The close value.</value>
        </member>
        <member name="P:OxyPlot.Series.OhlcvItem.BuyVolume">
            <summary>
            Gets or sets the buy volume.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.OhlcvItem.SellVolume">
            <summary>
            Gets or sets the sell volume.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.OhlcvItem.FindIndex(System.Collections.Generic.List{OxyPlot.Series.OhlcvItem},System.Double,System.Int32)">
            <summary>
            Find index of max(x) &lt;= target x in a list of OHLCV items
            </summary>
            <param name='items'>
            vector of bars
            </param>
            <param name='targetX'>
            target x.
            </param>
            <param name='guessIdx'>
            initial guess.
            </param>
            <returns>
            index of x with max(x) &lt;= target x or -1 if cannot find
            </returns>
        </member>
        <member name="M:OxyPlot.Series.OhlcvItem.IsValid">
            <summary>
            Indicate whether is valid for rendering or not
            </summary>
            <returns><c>true</c> if this instance is valid; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OxyPlot.Series.OldCandleStickSeries">
            <summary>
            Represents a series for candlestick charts.
            </summary>
            <remarks>See also <a href="http://en.wikipedia.org/wiki/Candlestick_chart">Wikipedia</a> and
            <a href="http://www.mathworks.com/help/toolbox/finance/candle.html">Matlab documentation</a>.</remarks>
        </member>
        <member name="M:OxyPlot.Series.OldCandleStickSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.Series.OldCandleStickSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.OldCandleStickSeries.CandleWidth">
            <summary>
            Gets or sets the width of the candle (in screen space units).
            </summary>
        </member>
        <member name="P:OxyPlot.Series.OldCandleStickSeries.IncreasingFill">
            <summary>
            Gets or sets the color used when the closing value is greater than opening value.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.OldCandleStickSeries.DecreasingFill">
            <summary>
            Gets or sets the fill color used when the closing value is less than opening value.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.OldCandleStickSeries.ShadowEndColor">
            <summary>
            Gets or sets the end color of the shadow.
            </summary>
            <value>The end color of the shadow.</value>
        </member>
        <member name="P:OxyPlot.Series.OldCandleStickSeries.ShadowEndLength">
            <summary>
            Gets or sets the lengths of the shadow ends.
            </summary>
            <value>The length relative to the width of the candle.</value>
        </member>
        <member name="P:OxyPlot.Series.OldCandleStickSeries.ActualIncreasingFill">
            <summary>
            Gets the actual increasing fill color.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.OldCandleStickSeries.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.OldCandleStickSeries.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the legend symbol for the series on the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="legendBox">The bounding rectangle of the legend box.</param>
        </member>
        <member name="T:OxyPlot.Series.VolumeSeries">
            <summary>
            Represents a dual view (candlestick + volume) series for OHLCV bars
            </summary>
            <remarks>See <a href="http://www.mathworks.com/help/toolbox/finance/highlowfts.html">link</a></remarks>
        </member>
        <member name="F:OxyPlot.Series.VolumeSeries.DefaultTrackerFormatString">
            <summary>
            The default tracker format string
            </summary>
        </member>
        <member name="F:OxyPlot.Series.VolumeSeries.data">
            <summary>
            The data series
            </summary>
        </member>
        <member name="F:OxyPlot.Series.VolumeSeries.minDx">
            <summary>
            The minimum X gap between successive data items
            </summary>
        </member>
        <member name="F:OxyPlot.Series.VolumeSeries.winIndex">
            <summary>
            The index of the data item at the start of visible window
            </summary>
        </member>
        <member name="M:OxyPlot.Series.VolumeSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.Series.VolumeSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.VolumeSeries.Items">
            <summary>
            Gets or sets the items of the series.
            </summary>
            <value>The items.</value>
        </member>
        <member name="P:OxyPlot.Series.VolumeSeries.VolumeStyle">
            <summary>
            Gets or sets the style of volume rendering (defaults to Combined)
            </summary>
        </member>
        <member name="P:OxyPlot.Series.VolumeSeries.StrokeThickness">
            <summary>
            Gets or sets the thickness of the bar lines
            </summary>
            <value>The stroke thickness.</value>
        </member>
        <member name="P:OxyPlot.Series.VolumeSeries.StrokeIntensity">
            <summary>
            Gets or sets the stroke intensity scale (used to generate stroke color from positive or negative color).
            For example, 1.0 = same color and 0.5 is 1/2 of the intensity of the source fill color.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.VolumeSeries.PositiveColor">
            <summary>
            Gets or sets the color used when the closing value is greater than opening value or
            for buying volume.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.VolumeSeries.NegativeColor">
            <summary>
            Gets or sets the fill color used when the closing value is less than opening value or
            for selling volume
            </summary>
        </member>
        <member name="P:OxyPlot.Series.VolumeSeries.InterceptColor">
            <summary>
            Gets or sets the stroke color of the Y=0 intercept
            </summary>
        </member>
        <member name="P:OxyPlot.Series.VolumeSeries.InterceptStrokeThickness">
            <summary>
            Gets or sets the thickness of the Y=0 intercept
            </summary>
        </member>
        <member name="P:OxyPlot.Series.VolumeSeries.InterceptLineStyle">
            <summary>
            Gets or sets the line style of the Y=0 intercept
            </summary>
        </member>
        <member name="P:OxyPlot.Series.VolumeSeries.PositiveHollow">
            <summary>
            Gets or sets a value indicating whether positive bars are shown as filled (false) or hollow (true) candlesticks
            </summary>
        </member>
        <member name="P:OxyPlot.Series.VolumeSeries.NegativeHollow">
            <summary>
            Gets or sets a value indicating whether negative bars are shown as filled (false) or hollow (true) candlesticks
            </summary>
        </member>
        <member name="P:OxyPlot.Series.VolumeSeries.BarWidth">
            <summary>
            Gets or sets the bar width in data units (for example if the X axis is date/time based, then should
            use the difference of DateTimeAxis.ToDouble(date) to indicate the width).  By default candlestick
            series will use 0.80 x the minimum difference in data points.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.VolumeSeries.MinimumVolume">
            <summary>
            Gets or sets the minimum volume seen in the data series.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.VolumeSeries.MaximumVolume">
            <summary>
            Gets or sets the maximum volume seen in the data series.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.VolumeSeries.AverageVolume">
            <summary>
            Gets or sets the average volume seen in the data series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.VolumeSeries.Append(OxyPlot.Series.OhlcvItem)">
            <summary>
            Append a bar to the series (must be in X order)
            </summary>
            <param name="bar">The Bar.</param>
        </member>
        <member name="M:OxyPlot.Series.VolumeSeries.FindByX(System.Double,System.Int32)">
            <summary>
            Fast index of bar where max(bar[i].X) &lt;= x 
            </summary>
            <returns>The index of the bar closest to X, where max(bar[i].X) &lt;= x.</returns>
            <param name="x">The x coordinate.</param>
            <param name="startingIndex">starting index</param> 
        </member>
        <member name="M:OxyPlot.Series.VolumeSeries.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.VolumeSeries.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the legend symbol for the series on the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="legendBox">The bounding rectangle of the legend box.</param>
        </member>
        <member name="M:OxyPlot.Series.VolumeSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the point on the series that is nearest the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">Interpolate the series if this flag is set to <c>true</c>.</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.VolumeSeries.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.VolumeSeries.UpdateAxisMaxMin">
            <summary>
            Updates the axes to include the max and min of this series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.VolumeSeries.UpdateMaxMin">
            <summary>
            Updates the maximum and minimum values of the series.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.VolumeStyle">
            <summary>
            Represents rendering style for volume in either <see cref="T:OxyPlot.Series.CandleStickAndVolumeSeries" /> or <see cref="T:OxyPlot.Series.VolumeSeries" />.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.VolumeStyle.None">
            <summary>
            Volume is not displayed
            </summary>
        </member>
        <member name="F:OxyPlot.Series.VolumeStyle.Combined">
            <summary>
            Buy + Sell volume summed to produce net positive or negative volume
            </summary>
        </member>
        <member name="F:OxyPlot.Series.VolumeStyle.Stacked">
            <summary>
            Buy and Sell volume is stacked, one on top of the other, with the dominant on top
            </summary>
        </member>
        <member name="F:OxyPlot.Series.VolumeStyle.PositiveNegative">
            <summary>
            Buy volume above y=0 axis and Sell volume below y=0 axis
            </summary>
        </member>
        <member name="T:OxyPlot.Series.FunctionSeries">
            <summary>
            Represents a line series that generates its dataset from a function.
            </summary>
            <remarks>Define <code>f(x)</code> and make a plot on the range <code>[x0,x1]</code> or define <code>x(t)</code> and <code>y(t)</code> and make a plot on the range <code>[t0,t1]</code>.</remarks>
        </member>
        <member name="M:OxyPlot.Series.FunctionSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.Series.FunctionSeries" /> class.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.FunctionSeries.#ctor(System.Func{System.Double,System.Double},System.Double,System.Double,System.Double,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.FunctionSeries" /> class using a function <code>f(x)</code>.
            </summary>
            <param name="f">The function <code>f(x)</code>.</param>
            <param name="x0">The start x value.</param>
            <param name="x1">The end x value.</param>
            <param name="dx">The increment in x.</param>
            <param name="title">The title (optional).</param>
        </member>
        <member name="M:OxyPlot.Series.FunctionSeries.#ctor(System.Func{System.Double,System.Double},System.Double,System.Double,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.FunctionSeries" /> class using a function <code>f(x)</code>.
            </summary>
            <param name="f">The function <code>f(x)</code>.</param>
            <param name="x0">The start x value.</param>
            <param name="x1">The end x value.</param>
            <param name="n">The number of points.</param>
            <param name="title">The title (optional).</param>
        </member>
        <member name="M:OxyPlot.Series.FunctionSeries.#ctor(System.Func{System.Double,System.Double},System.Func{System.Double,System.Double},System.Double,System.Double,System.Double,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.FunctionSeries" /> class using functions <code>x(t)</code> and <code>y(t)</code>.
            </summary>
            <param name="fx">The function <code>x(t)</code>.</param>
            <param name="fy">The function <code>y(t)</code>.</param>
            <param name="t0">The start t parameter.</param>
            <param name="t1">The end t parameter.</param>
            <param name="dt">The increment in t.</param>
            <param name="title">The title.</param>
        </member>
        <member name="M:OxyPlot.Series.FunctionSeries.#ctor(System.Func{System.Double,System.Double},System.Func{System.Double,System.Double},System.Double,System.Double,System.Int32,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.FunctionSeries" /> class using functions <code>x(t)</code> and <code>y(t)</code>.
            </summary>
            <param name="fx">The function <code>x(t)</code>.</param>
            <param name="fy">The function <code>y(t)</code>.</param>
            <param name="t0">The start t parameter.</param>
            <param name="t1">The end t parameter.</param>
            <param name="n">The number of points.</param>
            <param name="title">The title.</param>
        </member>
        <member name="T:OxyPlot.Series.HeatMapCoordinateDefinition">
            <summary>
            Specifies how the heat map coordinates are defined.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.HeatMapCoordinateDefinition.Center">
            <summary>
            The coordinates defines the center of the cells
            </summary>
        </member>
        <member name="F:OxyPlot.Series.HeatMapCoordinateDefinition.Edge">
            <summary>
            The coordinates defines the edge of the cells
            </summary>
        </member>
        <member name="T:OxyPlot.Series.HeatMapRenderMethod">
            <summary>
            Specifies how the heat map coordinates are defined.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.HeatMapRenderMethod.Bitmap">
            <summary>
            The heat map is rendered as a bitmap
            </summary>
        </member>
        <member name="F:OxyPlot.Series.HeatMapRenderMethod.Rectangles">
            <summary>
            The heat map is rendered as a collection of discrete rectangles
            </summary>
        </member>
        <member name="T:OxyPlot.Series.HeatMapSeries">
            <summary>
            Represents a heat map.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.HeatMapSeries.DefaultTrackerFormatString">
            <summary>
            The default tracker format string
            </summary>
        </member>
        <member name="F:OxyPlot.Series.HeatMapSeries.DefaultColorAxisTitle">
            <summary>
            The default color-axis title
            </summary>
        </member>
        <member name="F:OxyPlot.Series.HeatMapSeries.dataHash">
            <summary>
            The hash code of the data when the image was updated.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.HeatMapSeries.colorAxisHash">
            <summary>
            The hash code of the color axis when the image was updated.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.HeatMapSeries.image">
            <summary>
            The image
            </summary>
        </member>
        <member name="M:OxyPlot.Series.HeatMapSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.HeatMapSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.HeatMapSeries.X0">
            <summary>
            Gets or sets the x-coordinate of the elements at index [0,*] in the data set.
            </summary>
            <value>
            If <see cref="P:OxyPlot.Series.HeatMapSeries.CoordinateDefinition" /> equals <see cref="F:OxyPlot.Series.HeatMapCoordinateDefinition.Center"/>, the value defines the mid point of the element at index [0,*] in the data set.
            If <see cref="P:OxyPlot.Series.HeatMapSeries.CoordinateDefinition" /> equals <see cref="F:OxyPlot.Series.HeatMapCoordinateDefinition.Edge"/>, the value defines the coordinate of the left edge of the element at index [0,*] in the data set.
            </value>
        </member>
        <member name="P:OxyPlot.Series.HeatMapSeries.X1">
            <summary>
            Gets or sets the x-coordinate of the mid point for the elements at index [m-1,*] in the data set.
            </summary>
            <value>
            If <see cref="P:OxyPlot.Series.HeatMapSeries.CoordinateDefinition" /> equals <see cref="F:OxyPlot.Series.HeatMapCoordinateDefinition.Center"/>, the value defines the mid point of the element at index [m-1,*] in the data set.
            If <see cref="P:OxyPlot.Series.HeatMapSeries.CoordinateDefinition" /> equals <see cref="F:OxyPlot.Series.HeatMapCoordinateDefinition.Edge"/>, the value defines the coordinate of the right edge of the element at index [m-1,*] in the data set.
            </value>
        </member>
        <member name="P:OxyPlot.Series.HeatMapSeries.Y0">
            <summary>
            Gets or sets the y-coordinate of the mid point for the elements at index [*,0] in the data set.
            </summary>
            <value>
            If <see cref="P:OxyPlot.Series.HeatMapSeries.CoordinateDefinition" /> equals <see cref="F:OxyPlot.Series.HeatMapCoordinateDefinition.Center"/>, the value defines the mid point of the element at index [*,0] in the data set.
            If <see cref="P:OxyPlot.Series.HeatMapSeries.CoordinateDefinition" /> equals <see cref="F:OxyPlot.Series.HeatMapCoordinateDefinition.Edge"/>, the value defines the coordinate of the bottom edge of the element at index [*,0] in the data set.
            </value>
        </member>
        <member name="P:OxyPlot.Series.HeatMapSeries.Y1">
            <summary>
            Gets or sets the y-coordinate of the mid point for the elements at index [*,n-1] in the data set.
            </summary>
            <value>
            If <see cref="P:OxyPlot.Series.HeatMapSeries.CoordinateDefinition" /> equals <see cref="F:OxyPlot.Series.HeatMapCoordinateDefinition.Center"/>, the value defines the mid point of the element at index [*,n-1] in the data set.
            If <see cref="P:OxyPlot.Series.HeatMapSeries.CoordinateDefinition" /> equals <see cref="F:OxyPlot.Series.HeatMapCoordinateDefinition.Edge"/>, the value defines the coordinate of the top edge of the element at index [*,n-1] in the data set.
            </value>
        </member>
        <member name="P:OxyPlot.Series.HeatMapSeries.Data">
            <summary>
            Gets or sets the data array.
            </summary>
            <remarks>Note that the indices of the data array refer to [x,y].
            The first dimension is along the x-axis.
            The second dimension is along the y-axis.
            Remember to call the <see cref="M:OxyPlot.Series.HeatMapSeries.Invalidate" /> method if the contents of the <see cref="P:OxyPlot.Series.HeatMapSeries.Data" /> array is changed.</remarks>
        </member>
        <member name="P:OxyPlot.Series.HeatMapSeries.Interpolate">
            <summary>
            Gets or sets a value indicating whether to interpolate when rendering. The default value is <c>true</c>.
            </summary>
            <remarks>This property is not supported on all platforms. Ignored (off) if <see cref="P:OxyPlot.Series.HeatMapSeries.RenderMethod" /> is <see cref="F:OxyPlot.Series.HeatMapRenderMethod.Rectangles" />.</remarks>
        </member>
        <member name="P:OxyPlot.Series.HeatMapSeries.MinValue">
            <summary>
            Gets the minimum value of the dataset.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.HeatMapSeries.MaxValue">
            <summary>
            Gets the maximum value of the dataset.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.HeatMapSeries.ColorAxis">
            <summary>
            Gets or sets the color axis.
            </summary>
            <value>The color axis.</value>
        </member>
        <member name="P:OxyPlot.Series.HeatMapSeries.ColorAxisKey">
            <summary>
            Gets or sets the color axis key.
            </summary>
            <value>The color axis key.</value>
        </member>
        <member name="P:OxyPlot.Series.HeatMapSeries.CoordinateDefinition">
            <summary>
            Gets or sets the coordinate definition. The default value is <see cref="F:OxyPlot.Series.HeatMapCoordinateDefinition.Center" />.
            </summary>
            <value>The coordinate definition.</value>
        </member>
        <member name="P:OxyPlot.Series.HeatMapSeries.RenderMethod">
            <summary>
            Gets or sets the render method. The default value is <see cref="F:OxyPlot.Series.HeatMapRenderMethod.Bitmap" />.
            </summary>
            <value>The render method.</value>
        </member>
        <member name="P:OxyPlot.Series.HeatMapSeries.LabelFormatString">
            <summary>
            Gets or sets the format string for the cell labels. The default value is <c>0.00</c>.
            </summary>
            <value>The format string.</value>
            <remarks>The label format string is only used when <see cref="P:OxyPlot.Series.HeatMapSeries.LabelFontSize" /> is greater than 0.</remarks>
        </member>
        <member name="P:OxyPlot.Series.HeatMapSeries.LabelFontSize">
            <summary>
            Gets or sets the font size of the labels. The default value is <c>0</c> (labels not visible).
            </summary>
            <value>The font size relative to the cell height.</value>
        </member>
        <member name="M:OxyPlot.Series.HeatMapSeries.Invalidate">
            <summary>
            Invalidates the image that renders the heat map. The image will be regenerated the next time the <see cref="T:OxyPlot.Series.HeatMapSeries" /> is rendered.
            </summary>
            <remarks>Call <see cref="M:OxyPlot.PlotModel.InvalidatePlot(System.Boolean)" /> to refresh the view.</remarks>
        </member>
        <member name="M:OxyPlot.Series.HeatMapSeries.Render(OxyPlot.IRenderContext)">
            <summary>
            Renders the series on the specified render context.
            </summary>
            <param name="rc">The rendering context.</param>
        </member>
        <member name="M:OxyPlot.Series.HeatMapSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the point on the series that is nearest the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">Interpolate the series if this flag is set to <c>true</c>.</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.HeatMapSeries.EnsureAxes">
            <summary>
            Ensures that the axes of the series is defined.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.HeatMapSeries.UpdateMaxMinXY">
            <summary>
            Updates the maximum and minimum values of the series for the x and y dimensions only.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.HeatMapSeries.UpdateMaxMin">
            <summary>
            Updates the maximum and minimum values of the series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.HeatMapSeries.UpdateAxisMaxMin">
            <summary>
            Updates the axes to include the max and min of this series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.HeatMapSeries.RenderLabels(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the labels.
            </summary>
            <param name="rc">The <see cref="T:OxyPlot.IRenderContext" /></param>
            <param name="rect">The bounding rectangle for the data.</param>
        </member>
        <member name="M:OxyPlot.Series.HeatMapSeries.GetLabel(System.Double,System.Int32,System.Int32)">
            <summary>
            Gets the label for the specified cell.
            </summary>
            <param name="v">The value of the cell.</param>
            <param name="i">The first index.</param>
            <param name="j">The second index.</param>
            <returns>The label string.</returns>
        </member>
        <member name="M:OxyPlot.Series.HeatMapSeries.GetValue(System.Double[0:,0:],System.Double,System.Double)">
            <summary>
            Gets the interpolated value at the specified position in the data array (by bilinear interpolation).
            Where interpolation is impossible, return NaN, rather than a calculated nonsense value.
            </summary>
            <param name="data">The data.</param>
            <param name="i">The first index.</param>
            <param name="j">The second index.</param>
            <returns>The interpolated value.</returns>
        </member>
        <member name="M:OxyPlot.Series.HeatMapSeries.IsPointInRange(OxyPlot.DataPoint)">
            <summary>
            Tests if a <see cref="T:OxyPlot.DataPoint" /> is inside the heat map
            </summary>
            <param name="p">The <see cref="T:OxyPlot.DataPoint" /> to test.</param>
            <returns><c>True</c> if the point is inside the heat map.</returns>
        </member>
        <member name="M:OxyPlot.Series.HeatMapSeries.UpdateImage">
            <summary>
            Updates the image.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.HistogramItem">
            <summary>
            Represents an item in a <see cref="T:OxyPlot.Series.HistogramSeries" />, a bin (range) and its area.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.HistogramItem.#ctor(System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.HistogramItem" /> class.
            </summary>
            <param name="rangeStart">The range start.</param>
            <param name="rangeEnd">The range end.</param>
            <param name="area">The area.</param>
            <param name="count">The count.</param>
        </member>
        <member name="M:OxyPlot.Series.HistogramItem.#ctor(System.Double,System.Double,System.Double,System.Int32,OxyPlot.OxyColor)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.HistogramItem" /> class.
            </summary>
            <param name="rangeStart">The range start.</param>
            <param name="rangeEnd">The range end.</param>
            <param name="area">The area.</param>
            <param name="count">The count.</param>
            <param name="color">The color.</param>
        </member>
        <member name="P:OxyPlot.Series.HistogramItem.RangeStart">
            <summary>
            Gets or sets the range start.
            </summary>
            <value>The range start.</value>
        </member>
        <member name="P:OxyPlot.Series.HistogramItem.RangeEnd">
            <summary>
            Gets or sets the range end.
            </summary>
            <value>The range end.</value>
        </member>
        <member name="P:OxyPlot.Series.HistogramItem.Area">
            <summary>
            Gets or sets the area.
            </summary>
            <value>The area.</value>
        </member>
        <member name="P:OxyPlot.Series.HistogramItem.RangeCenter">
            <summary>
            Gets the center of the item.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.HistogramItem.Count">
            <summary>
            Gets or sets the count.
            </summary>
            <value>The count.</value>
        </member>
        <member name="P:OxyPlot.Series.HistogramItem.Color">
            <summary>
            Gets or sets the color.
            </summary>
            <value>The color.</value>
            <remarks>If set to Automatic, the FillColor of the RectangleBarSeries will be used.</remarks>
        </member>
        <member name="P:OxyPlot.Series.HistogramItem.Width">
            <summary>
            Gets the computed width of the item.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.HistogramItem.Height">
            <summary>
            Gets the computed height of the item.
            </summary>
            <value>The computed height of the item.</value>
        </member>
        <member name="P:OxyPlot.Series.HistogramItem.Value">
            <summary>
            Gets the value of the item. Equivalent to the Height.
            </summary>
            <value>The value of the item.</value>
        </member>
        <member name="M:OxyPlot.Series.HistogramItem.Contains(OxyPlot.DataPoint)">
            <summary>
            Determines whether the specified point lies within the boundary of the <see cref="T:OxyPlot.Series.HistogramItem" />.
            </summary>
            <param name="p">The DataPoint to determine whether or not lies within the boundary of the <see cref="T:OxyPlot.Series.HistogramItem" />.</param>
            <returns><c>true</c> if the value of the p parameter is inside the bounds of this instance.</returns>
        </member>
        <member name="M:OxyPlot.Series.HistogramItem.ToCode">
            <summary>
            Returns C# code that generates this instance.
            </summary>
            <returns>The to code.</returns>
        </member>
        <member name="M:OxyPlot.Series.HistogramItem.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:OxyPlot.Series.HistogramSeries">
            <summary>
            Represents a series that can be bound to a collection of <see cref="T:OxyPlot.Series.HistogramItem"/>.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.HistogramSeries.DefaultTrackerFormatString">
            <summary>
            The default tracker format string.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.HistogramSeries.defaultFillColor">
            <summary>
            The default fill color.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.HistogramSeries.actualItems">
            <summary>
            The items originating from the items source.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.HistogramSeries.ownsActualItems">
            <summary>
            Specifies if the <see cref="F:OxyPlot.Series.HistogramSeries.actualItems" /> list can be modified.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.HistogramSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.HistogramSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.HistogramSeries.FillColor">
            <summary>
            Gets or sets the color of the interior of the bars.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:OxyPlot.Series.HistogramSeries.ActualFillColor">
            <summary>
            Gets the actual fill color.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="P:OxyPlot.Series.HistogramSeries.StrokeColor">
            <summary>
            Gets or sets the color of the border around the bars.
            </summary>
            <value>The color of the stroke.</value>
        </member>
        <member name="P:OxyPlot.Series.HistogramSeries.StrokeThickness">
            <summary>
            Gets or sets the thickness of the bar border strokes.
            </summary>
            <value>The stroke thickness.</value>
        </member>
        <member name="P:OxyPlot.Series.HistogramSeries.MinValue">
            <summary>
            Gets the minimum value of the dataset.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.HistogramSeries.MaxValue">
            <summary>
            Gets the maximum value of the dataset.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.HistogramSeries.LabelFormatString">
            <summary>
            Gets or sets the format string for the cell labels. The default value is <c>0.00</c>.
            </summary>
            <value>The format string.</value>
        </member>
        <member name="P:OxyPlot.Series.HistogramSeries.LabelMargin">
            <summary>
            Gets or sets the label margins.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.HistogramSeries.LabelPlacement">
            <summary>
            Gets or sets label placements.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.HistogramSeries.ColorMapping">
            <summary>
            Gets or sets the delegate used to map from histogram item to color.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.HistogramSeries.Mapping">
            <summary>
            Gets or sets the delegate used to map from <see cref="P:OxyPlot.Series.ItemsSeries.ItemsSource" /> to <see cref="T:OxyPlot.Series.HistogramSeries" />. The default is <c>null</c>.
            </summary>
            <value>The mapping.</value>
            <remarks>Example: series1.Mapping = item => new HistogramItem((double)item.BinStart, (double)item.BinStart + item.BinWidth, (double)item.Count / totalCount, item.Count).</remarks>
        </member>
        <member name="P:OxyPlot.Series.HistogramSeries.Items">
            <summary>
            Gets the list of <see cref="T:OxyPlot.Series.HistogramItem" />.
            </summary>
            <value>A list of <see cref="T:OxyPlot.Series.HistogramItem" />. This list is used if <see cref="P:OxyPlot.Series.ItemsSeries.ItemsSource" /> is not set.</value>
        </member>
        <member name="P:OxyPlot.Series.HistogramSeries.ActualItems">
            <summary>
            Gets the list of <see cref="T:OxyPlot.Series.HistogramItem" /> that should be rendered.
            </summary>
            <value>A list of <see cref="T:OxyPlot.Series.HistogramItem" />.</value>
        </member>
        <member name="M:OxyPlot.Series.HistogramSeries.Render(OxyPlot.IRenderContext)">
            <summary>
            Renders the series on the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
        </member>
        <member name="M:OxyPlot.Series.HistogramSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the point on the series that is nearest the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">Interpolate the series if this flag is set to <c>true</c>.</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.HistogramSeries.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the legend symbol on the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="legendBox">The legend rectangle.</param>
        </member>
        <member name="M:OxyPlot.Series.HistogramSeries.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.HistogramSeries.SetDefaultValues">
            <summary>
            Sets the default values.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.HistogramSeries.UpdateMaxMinXY">
            <summary>
            Updates the maximum and minimum values of the series for the x and y dimensions only.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.HistogramSeries.UpdateMaxMin">
            <summary>
            Updates the maximum and minimum values of the series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.HistogramSeries.GetItem(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <param name="i">The index of the item.</param>
            <returns>The item of the index.</returns>
        </member>
        <member name="M:OxyPlot.Series.HistogramSeries.RenderBins(OxyPlot.IRenderContext,System.Collections.Generic.ICollection{OxyPlot.Series.HistogramItem})">
            <summary>
            Renders the points as line, broken line and markers.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="items">The Items to render.</param>
        </member>
        <member name="M:OxyPlot.Series.HistogramSeries.GetItemFillColor(OxyPlot.Series.HistogramItem)">
            <summary>
            Gets the fill color of the given <see cref="T:OxyPlot.Series.HistogramItem"/>.
            </summary>
            <param name="item">The item.</param>
            <returns>The fill color of the item.</returns>
        </member>
        <member name="M:OxyPlot.Series.HistogramSeries.RenderLabel(OxyPlot.IRenderContext,OxyPlot.OxyRect,OxyPlot.Series.HistogramItem)">
            <summary>
            Draws the label.
            </summary>
            <param name="rc">The render context.</param>
            <param name="rect">The column rectangle.</param>
            <param name="item">The item.</param>
        </member>
        <member name="M:OxyPlot.Series.HistogramSeries.IsPointInRange(OxyPlot.DataPoint)">
            <summary>
            Tests if a <see cref="T:OxyPlot.DataPoint" /> is inside the histogram.
            </summary>
            <param name="p">The <see cref="T:OxyPlot.DataPoint" /> to test.</param>
            <returns><c>True</c> if the point is inside the heat map.</returns>
        </member>
        <member name="M:OxyPlot.Series.HistogramSeries.ClearActualItems">
            <summary>
            Clears or creates the <see cref="F:OxyPlot.Series.HistogramSeries.actualItems"/> list.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.HistogramSeries.GetDefaultColor(OxyPlot.Series.HistogramItem)">
            <summary>
            Gets the default color for a HistogramItem.
            </summary>
            <returns>The default color.</returns>
        </member>
        <member name="M:OxyPlot.Series.HistogramSeries.UpdateActualItems">
            <summary>
            Updates the points from the <see cref="P:OxyPlot.Series.ItemsSeries.ItemsSource" />.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.IScatterPointProvider">
            <summary>
            Defines functionality to provide a <see cref="T:OxyPlot.Series.ScatterPoint" />.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.IScatterPointProvider.GetScatterPoint">
            <summary>
            Gets the <see cref="T:OxyPlot.Series.ScatterPoint" /> that represents the element.
            </summary>
            <returns>A <see cref="T:OxyPlot.Series.ScatterPoint" />.</returns>
        </member>
        <member name="T:OxyPlot.Series.ItemsSeries">
            <summary>
            Abstract base class for series that can contain items.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.ItemsSeries.ItemsSource">
            <summary>
            Gets or sets the items source. The default is <c>null</c>.
            </summary>
            <value>The items source.</value>
        </member>
        <member name="M:OxyPlot.Series.ItemsSeries.GetItem(System.Collections.IEnumerable,System.Int32)">
            <summary>
            Gets the item for the specified index.
            </summary>
            <param name="itemsSource">The items source.</param>
            <param name="index">The index.</param>
            <returns>The get item.</returns>
            <remarks>Returns <c>null</c> if ItemsSource is not set, or the index is outside the boundaries.</remarks>
        </member>
        <member name="M:OxyPlot.Series.ItemsSeries.GetItem(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <param name="i">The index of the item.</param>
            <returns>The item of the index.</returns>
        </member>
        <member name="T:OxyPlot.Series.LineLegendPosition">
            <summary>
            Specifies the position of legends rendered on a <see cref="T:OxyPlot.Series.LineSeries" />.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LineLegendPosition.None">
            <summary>
            Do not render legend on the line.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LineLegendPosition.Start">
            <summary>
            Render legend at the start of the line.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LineLegendPosition.End">
            <summary>
            Render legend at the end of the line.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.LineSeries">
            <summary>
            Represents a line series.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LineSeries.ToleranceDivisor">
            <summary>
            The divisor value used to calculate tolerance for line smoothing.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LineSeries.outputBuffer">
            <summary>
            The output buffer.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LineSeries.contiguousScreenPointsBuffer">
            <summary>
            The buffer for contiguous screen points.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LineSeries.decimatorBuffer">
            <summary>
            The buffer for decimated points.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LineSeries.defaultColor">
            <summary>
            The default color.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LineSeries.defaultMarkerFill">
            <summary>
            The default marker fill color.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LineSeries.defaultLineStyle">
            <summary>
            The default line style.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.LineSeries.smoothedPoints">
            <summary>
            The smoothed points.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.LineSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.Series.LineSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.Color">
            <summary>
            Gets or sets the color of the curve.
            </summary>
            <value>The color.</value>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.BrokenLineColor">
            <summary>
            Gets or sets the color of the broken line segments. The default is <see cref="F:OxyPlot.OxyColors.Undefined"/>. Set it to <see cref="F:OxyPlot.OxyColors.Automatic"/> if it should follow the <see cref="P:OxyPlot.Series.LineSeries.Color" />.
            </summary>
            <remarks>Add <c>DataPoint.Undefined</c> in the Points collection to create breaks in the line.</remarks>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.BrokenLineStyle">
            <summary>
            Gets or sets the broken line style. The default is <see cref="F:OxyPlot.LineStyle.Solid" />.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.BrokenLineThickness">
            <summary>
            Gets or sets the broken line thickness. The default is <c>0</c> (no line).
            </summary>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.Dashes">
            <summary>
            Gets or sets the dash array for the rendered line (overrides <see cref="P:OxyPlot.Series.LineSeries.LineStyle" />). The default is <c>null</c>.
            </summary>
            <value>The dash array.</value>
            <remarks>If this is not <c>null</c> it overrides the <see cref="P:OxyPlot.Series.LineSeries.LineStyle" /> property.</remarks>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.Decimator">
            <summary>
            Gets or sets the decimator.
            </summary>
            <value>
            The decimator action.
            </value>
            <remarks>The decimator can be used to improve the performance of the rendering. See the example.</remarks>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.LabelFormatString">
            <summary>
            Gets or sets the label format string. The default is <c>null</c> (no labels).
            </summary>
            <value>The label format string.</value>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.LabelMargin">
            <summary>
            Gets or sets the label margins. The default is <c>6</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.LineJoin">
            <summary>
            Gets or sets the line join. The default is <see cref="F:OxyPlot.LineJoin.Bevel" />.
            </summary>
            <value>The line join.</value>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.LineStyle">
            <summary>
            Gets or sets the line style. The default is <see cref="F:OxyPlot.LineStyle.Automatic" />.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.LineLegendPosition">
            <summary>
            Gets or sets a value specifying the position of a legend rendered on the line. The default is <c>LineLegendPosition.None</c>.
            </summary>
            <value>A value specifying the position of the legend.</value>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.MarkerFill">
            <summary>
            Gets or sets the marker fill color. The default is <see cref="F:OxyPlot.OxyColors.Automatic" />.
            </summary>
            <value>The marker fill.</value>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.MarkerOutline">
            <summary>
            Gets or sets the a custom polygon outline for the markers. Set <see cref="P:OxyPlot.Series.LineSeries.MarkerType" /> to <see cref="F:OxyPlot.MarkerType.Custom" /> to use this property. The default is <c>null</c>.
            </summary>
            <value>A polyline.</value>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.MarkerResolution">
            <summary>
            Gets or sets the marker resolution. The default is <c>0</c>.
            </summary>
            <value>The marker resolution.</value>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.MarkerSize">
            <summary>
            Gets or sets the size of the marker. The default is <c>3</c>.
            </summary>
            <value>The size of the marker.</value>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.MarkerStroke">
            <summary>
            Gets or sets the marker stroke. The default is <c>OxyColors.Automatic</c>.
            </summary>
            <value>The marker stroke.</value>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.MarkerStrokeThickness">
            <summary>
            Gets or sets the marker stroke thickness. The default is <c>2</c>.
            </summary>
            <value>The marker stroke thickness.</value>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.MarkerType">
            <summary>
            Gets or sets the type of the marker. The default is <c>MarkerType.None</c>.
            </summary>
            <value>The type of the marker.</value>
            <remarks>If MarkerType.Custom is used, the MarkerOutline property must be specified.</remarks>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.MinimumSegmentLength">
            <summary>
            Gets or sets the minimum length of the segment.
            Increasing this number will increase performance,
            but make the curve less accurate. The default is <c>2</c>.
            </summary>
            <value>The minimum length of the segment.</value>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.InterpolationAlgorithm">
            <summary>
            Gets or sets a type of interpolation algorithm used for smoothing this <see cref = "T:OxyPlot.Series.DataPointSeries" />.
            </summary>
            <value>Type of interpolation algorithm.</value>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.StrokeThickness">
            <summary>
            Gets or sets the thickness of the curve.
            </summary>
            <value>The stroke thickness.</value>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.ActualColor">
            <summary>
            Gets the actual color.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.ActualMarkerFill">
            <summary>
            Gets the actual marker fill color.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.ActualLineStyle">
            <summary>
            Gets the actual line style.
            </summary>
            <value>The actual line style.</value>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.ActualDashArray">
            <summary>
            Gets the actual dash array for the line.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.SmoothedPoints">
            <summary>
            Gets the smoothed points.
            </summary>
            <value>The smoothed points.</value>
        </member>
        <member name="M:OxyPlot.Series.LineSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the point on the series that is nearest the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">Interpolate the series if this flag is set to <c>true</c>.</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.LineSeries.Render(OxyPlot.IRenderContext)">
            <summary>
            Renders the series on the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
        </member>
        <member name="M:OxyPlot.Series.LineSeries.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the legend symbol for the line series on the
            specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="legendBox">The bounding rectangle of the legend box.</param>
        </member>
        <member name="M:OxyPlot.Series.LineSeries.SetDefaultValues">
            <summary>
            Sets default values from the plot model.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.LineSeries.UpdateMaxMin">
            <summary>
            Updates the maximum and minimum values of the series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.LineSeries.RenderPoints(OxyPlot.IRenderContext,System.Collections.Generic.IList{OxyPlot.DataPoint})">
            <summary>
            Renders the points as line, broken line and markers.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="points">The points to render.</param>
        </member>
        <member name="M:OxyPlot.Series.LineSeries.ExtractNextContiguousLineSegment(System.Collections.Generic.IList{OxyPlot.DataPoint},System.Int32@,System.Nullable{OxyPlot.ScreenPoint}@,System.Double,System.Collections.Generic.List{OxyPlot.ScreenPoint},System.Collections.Generic.List{OxyPlot.ScreenPoint})">
            <summary>
            Extracts a single contiguous line segment beginning with the element at the position of the enumerator when the method
            is called. Initial invalid data points are ignored.
            </summary>
            <param name="pointIdx">Current point index</param>
            <param name="previousContiguousLineSegmentEndPoint">Initially set to null, but I will update I won't give a broken line if this is null</param>
            <param name="xmax">Maximum visible X value</param>
            <param name="broken">place to put broken segment</param>
            <param name="contiguous">place to put contiguous segment</param>
            <param name="points">Points collection</param>
            <returns>
              <c>true</c> if line segments are extracted, <c>false</c> if reached end.
            </returns>
        </member>
        <member name="M:OxyPlot.Series.LineSeries.RenderPointLabels(OxyPlot.IRenderContext)">
            <summary>
            Renders the point labels.
            </summary>
            <param name="rc">The render context.</param>
        </member>
        <member name="M:OxyPlot.Series.LineSeries.RenderLegendOnLine(OxyPlot.IRenderContext)">
            <summary>
            Renders a legend on the line.
            </summary>
            <param name="rc">The render context.</param>
        </member>
        <member name="M:OxyPlot.Series.LineSeries.RenderLineAndMarkers(OxyPlot.IRenderContext,System.Collections.Generic.IList{OxyPlot.ScreenPoint})">
            <summary>
            Renders the transformed points as a line (smoothed if <see cref="P:OxyPlot.Series.LineSeries.InterpolationAlgorithm"/> isn’t <c>null</c>) and markers (if <see cref="P:OxyPlot.Series.LineSeries.MarkerType"/> is not <c>None</c>).
            </summary>
            <param name="rc">The render context.</param>
            <param name="pointsToRender">The points to render.</param>
        </member>
        <member name="M:OxyPlot.Series.LineSeries.RenderLine(OxyPlot.IRenderContext,System.Collections.Generic.IList{OxyPlot.ScreenPoint})">
            <summary>
            Renders a continuous line.
            </summary>
            <param name="rc">The render context.</param>
            <param name="pointsToRender">The points to render.</param>
        </member>
        <member name="M:OxyPlot.Series.LineSeries.ResetSmoothedPoints">
            <summary>
            Force the smoothed points to be re-evaluated.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.LineSeries.Segment">
            <summary>
            Represents a line segment.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.LineSeries.Segment.#ctor(OxyPlot.DataPoint,OxyPlot.DataPoint)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.LineSeries.Segment" /> class.
            </summary>
            <param name="point1">The first point of the segment.</param>
            <param name="point2">The second point of the segment.</param>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.Segment.Point1">
            <summary>
            Gets the first point1 of the segment.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.LineSeries.Segment.Point2">
            <summary>
            Gets the second point of the segment.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.PieSeries">
            <summary>
            Represents a series for pie/circle/doughnut charts.
            </summary>
            <remarks>The arc length/central angle/area of each slice is proportional to the quantity it represents.
            See <a href="http://en.wikipedia.org/wiki/Pie_chart">Pie charts</a>.</remarks>
        </member>
        <member name="F:OxyPlot.Series.PieSeries.DefaultTrackerFormatString">
            <summary>
            The default tracker format string
            </summary>
        </member>
        <member name="F:OxyPlot.Series.PieSeries.slices">
            <summary>
            The slices.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.PieSeries.slicePoints">
            <summary>
            The actual points of the slices.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.PieSeries.total">
            <summary>
            The total value of all the pie slices.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.PieSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.PieSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.AngleIncrement">
            <summary>
            Gets or sets the angle increment.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.AngleSpan">
            <summary>
            Gets or sets the angle span.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.AreInsideLabelsAngled">
            <summary>
            Gets or sets a value indicating whether inside labels are angled.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.ColorField">
            <summary>
            Gets or sets the name of the property containing the color.
            </summary>
            <value>The color field.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.Diameter">
            <summary>
            Gets or sets the diameter.
            </summary>
            <value>The diameter.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.ExplodedDistance">
            <summary>
            Gets or sets the exploded distance.
            </summary>
            <value>The exploded distance.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.InnerDiameter">
            <summary>
            Gets or sets the inner diameter.
            </summary>
            <value>The inner diameter.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.InsideLabelColor">
            <summary>
            Gets or sets the color of the inside labels.
            </summary>
            <remarks>If the value is <c>OxyColors.Automatic</c>, the <see cref="P:OxyPlot.PlotElement.TextColor" /> will be used.</remarks>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.InsideLabelFormat">
            <summary>
            Gets or sets the inside label format.
            </summary>
            <value>The inside label format.</value>
            <remarks>The formatting arguments are: value {0}, label {1} and percentage {2}.</remarks>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.InsideLabelPosition">
            <summary>
            Gets or sets the inside label position.
            </summary>
            <value>The inside label position.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.IsExplodedField">
            <summary>
            Gets or sets the is exploded field.
            </summary>
            <value>The is exploded field.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.LabelField">
            <summary>
            Gets or sets the label field.
            </summary>
            <value>The label field.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.LegendFormat">
            <summary>
            Gets or sets the legend format.
            </summary>
            <value>The legend format.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.OutsideLabelFormat">
            <summary>
            Gets or sets the outside label format.
            </summary>
            <value>The outside label format.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.Slices">
            <summary>
            Gets or sets the slices.
            </summary>
            <value>The slices.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.StartAngle">
            <summary>
            Gets or sets the start angle.
            </summary>
            <value>The start angle.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.Stroke">
            <summary>
            Gets or sets the stroke color.
            </summary>
            <value>The stroke color.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.StrokeThickness">
            <summary>
            Gets or sets the stroke thickness.
            </summary>
            <value>The stroke thickness.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.TickDistance">
            <summary>
            Gets or sets the distance from the edge of the pie slice to the tick line.
            </summary>
            <value>The distance.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.TickHorizontalLength">
            <summary>
            Gets or sets the length of the horizontal part of the tick.
            </summary>
            <value>The length.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.TickLabelDistance">
            <summary>
            Gets or sets the distance from the tick line to the outside label.
            </summary>
            <value>The distance.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.TickRadialLength">
            <summary>
            Gets or sets the length of the radial part of the tick line.
            </summary>
            <value>The length.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSeries.ValueField">
            <summary>
            Gets or sets the name of the property containing the value.
            </summary>
            <value>The value field.</value>
        </member>
        <member name="M:OxyPlot.Series.PieSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the point on the series that is nearest the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">Interpolate the series if this flag is set to <c>true</c> .</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.PieSeries.Render(OxyPlot.IRenderContext)">
            <summary>
            Renders the series on the specified render context.
            </summary>
            <param name="rc">The rendering context.</param>
        </member>
        <member name="M:OxyPlot.Series.PieSeries.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the legend symbol on the specified render context.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="legendBox">The legend rectangle.</param>
        </member>
        <member name="M:OxyPlot.Series.PieSeries.AreAxesRequired">
            <summary>
            Checks if this data series requires X/Y axes. (e.g. PieSeries does not require axes)
            </summary>
            <returns>True if no axes are required.</returns>
        </member>
        <member name="M:OxyPlot.Series.PieSeries.EnsureAxes">
            <summary>
            Ensures that the axes of the series is defined.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.PieSeries.IsUsing(OxyPlot.Axes.Axis)">
            <summary>
            Check if the data series is using the specified axis.
            </summary>
            <param name="axis">An axis.</param>
            <returns>True if the axis is in use.</returns>
        </member>
        <member name="M:OxyPlot.Series.PieSeries.SetDefaultValues">
            <summary>
            Sets the default values.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.PieSeries.UpdateAxisMaxMin">
            <summary>
            Updates the maximum and minimum values of the axes used by this series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.PieSeries.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.PieSeries.UpdateMaxMin">
            <summary>
            Updates the maximum and minimum values of the series.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.PieSlice">
            <summary>
            Represent a slice of a <see cref="T:OxyPlot.Series.PieSeries" />.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.PieSlice.#ctor(System.String,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.PieSlice" /> class.
            </summary>
            <param name="label">The label.</param>
            <param name="value">The value.</param>
        </member>
        <member name="P:OxyPlot.Series.PieSlice.Fill">
            <summary>
            Gets or sets the fill color.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.PieSlice.ActualFillColor">
            <summary>
            Gets the actual fill color.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="P:OxyPlot.Series.PieSlice.IsExploded">
            <summary>
            Gets or sets a value indicating whether the slice is exploded.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.PieSlice.Label">
            <summary>
            Gets the label.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.PieSlice.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.PieSlice.DefaultFillColor">
            <summary>
            Gets or sets the default fill color.
            </summary>
            <value>The default fill color.</value>
        </member>
        <member name="M:OxyPlot.Series.PieSlice.ToCode">
            <summary>
            Returns C# code that generates this instance.
            </summary>
            <returns>C# code.</returns>
        </member>
        <member name="T:OxyPlot.Series.RectangleItem">
            <summary>
            Represents an item in a <see cref="T:OxyPlot.Series.RectangleSeries" />.
            </summary>
            <remarks><see cref="T:OxyPlot.Series.RectangleItem" />s are transformed to <see cref="T:OxyPlot.OxyRect" />s.</remarks>
        </member>
        <member name="F:OxyPlot.Series.RectangleItem.Undefined">
            <summary>
            The undefined rectangle item.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.RectangleItem.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.RectangleItem" /> struct.
            </summary>
            <param name="x1">The x coordinate of the first corner.</param>
            <param name="x2">The x coordinate of the diagonally-opposite corner.</param>
            <param name="y1">The y coordinate of the first corner.</param>
            <param name="y2">The y coordinate of the diagonally-opposite corner.</param>
            <param name="value">The value of the data rect.</param>
        </member>
        <member name="M:OxyPlot.Series.RectangleItem.#ctor(OxyPlot.DataPoint,OxyPlot.DataPoint,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.RectangleItem" /> struct.
            </summary>
            <param name="a">The first corner.</param>
            <param name="b">The diagonally-opposite corner.</param>
            <param name="value">The value of the data rect.</param>
        </member>
        <member name="P:OxyPlot.Series.RectangleItem.A">
            <summary>
            Gets the first data point.
            </summary>
            <value>The first data point.</value>
        </member>
        <member name="P:OxyPlot.Series.RectangleItem.B">
            <summary>
            Gets the diagonally-opposite data point.
            </summary>
            <value>The diagonally-opposite data point.</value>
        </member>
        <member name="P:OxyPlot.Series.RectangleItem.Value">
            <summary>
            Gets the value of the item.
            </summary>
            <value>The value can be used to color-code the rectangle.</value>
        </member>
        <member name="M:OxyPlot.Series.RectangleItem.Contains(OxyPlot.DataPoint)">
            <summary>
            Determines whether the specified point lies within the boundary of the rectangle.
            </summary>
            <returns><c>true</c> if the value of the <param name="p"/> parameter is inside the bounds of this instance.</returns>
        </member>
        <member name="M:OxyPlot.Series.RectangleItem.ToCode">
            <summary>
            Returns C# code that generates this instance.
            </summary>
            <returns>The to code.</returns>
        </member>
        <member name="M:OxyPlot.Series.RectangleItem.Equals(OxyPlot.Series.RectangleItem)">
            <summary>
            Determines whether this instance and another specified <see cref="T:RectangleItem" /> object have the same value.
            </summary>
            <param name="other">The point to compare to this instance.</param>
            <returns><c>true</c> if the value of the <paramref name="other" /> parameter is the same as the value of this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:OxyPlot.Series.RectangleItem.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="M:OxyPlot.Series.RectangleItem.IsDefined">
            <summary>
            Determines whether this rectangle item is defined.
            </summary>
            <returns><c>true</c> if this point is defined; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:OxyPlot.Series.RectangleSeries">
            <summary>
            Represents a series that can be bound to a collection of <see cref="T:OxyPlot.Series.RectangleItem"/>.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.RectangleSeries.actualItems">
            <summary>
            The items originating from the items source.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.RectangleSeries.ownsActualItems">
            <summary>
            Specifies if the <see cref="F:OxyPlot.Series.RectangleSeries.actualItems" /> list can be modified.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.RectangleSeries.DefaultTrackerFormatString">
            <summary>
            The default tracker format string
            </summary>
        </member>
        <member name="F:OxyPlot.Series.RectangleSeries.DefaultColorAxisTitle">
            <summary>
            The default color-axis title
            </summary>
        </member>
        <member name="M:OxyPlot.Series.RectangleSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.HeatMapSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.RectangleSeries.MinValue">
            <summary>
            Gets the minimum value of the dataset.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.RectangleSeries.MaxValue">
            <summary>
            Gets the maximum value of the dataset.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.RectangleSeries.ColorAxis">
            <summary>
            Gets or sets the color axis.
            </summary>
            <value>The color axis.</value>
        </member>
        <member name="P:OxyPlot.Series.RectangleSeries.ColorAxisKey">
            <summary>
            Gets or sets the color axis key.
            </summary>
            <value>The color axis key.</value>
        </member>
        <member name="P:OxyPlot.Series.RectangleSeries.LabelFormatString">
            <summary>
            Gets or sets the format string for the cell labels. The default value is <c>0.00</c>.
            </summary>
            <value>The format string.</value>
            <remarks>The label format string is only used when <see cref="P:OxyPlot.Series.RectangleSeries.LabelFontSize" /> is greater than 0.</remarks>
        </member>
        <member name="P:OxyPlot.Series.RectangleSeries.LabelFontSize">
            <summary>
            Gets or sets the font size of the labels. The default value is <c>0</c> (labels not visible).
            </summary>
            <value>The font size relative to the cell height.</value>
        </member>
        <member name="P:OxyPlot.Series.RectangleSeries.CanTrackerInterpolatePoints">
            <summary>
            Gets or sets a value indicating whether the tracker can interpolate points.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.RectangleSeries.Mapping">
            <summary>
            Gets or sets the delegate used to map from <see cref="P:OxyPlot.Series.ItemsSeries.ItemsSource" /> to <see cref="T:OxyPlot.Series.RectangleItem" />. The default is <c>null</c>.
            </summary>
            <value>The mapping.</value>
            <remarks>Example: series1.Mapping = item => new RectangleItem(new DataPoint((MyType)item).Time1, ((MyType)item).Value1), new DataPoint((MyType)item).Time2, ((MyType)item).Value2));</remarks>
        </member>
        <member name="P:OxyPlot.Series.RectangleSeries.Items">
            <summary>
            Gets the list of rectangles.
            </summary>
            <value>A list of <see cref="T:OxyPlot.Series.RectangleItem" />. This list is used if <see cref="P:OxyPlot.Series.ItemsSeries.ItemsSource" /> is not set.</value>
        </member>
        <member name="P:OxyPlot.Series.RectangleSeries.ActualItems">
            <summary>
            Gets the list of rectangles that should be rendered.
            </summary>
            <value>A list of <see cref="T:OxyPlot.Series.RectangleItem" />.</value>
        </member>
        <member name="M:OxyPlot.Series.RectangleSeries.Render(OxyPlot.IRenderContext)">
            <summary>
            Renders the series on the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
        </member>
        <member name="M:OxyPlot.Series.RectangleSeries.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.RectangleSeries.GetItem(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <param name="i">The index of the item.</param>
            <returns>The item of the index.</returns>
        </member>
        <member name="M:OxyPlot.Series.RectangleSeries.ClearActualItems">
            <summary>
            Clears or creates the <see cref="F:OxyPlot.Series.RectangleSeries.actualItems"/> list.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.RectangleSeries.UpdateActualItems">
            <summary>
            Updates the points from the <see cref="P:OxyPlot.Series.ItemsSeries.ItemsSource" />.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.RectangleSeries.RenderRectangles(OxyPlot.IRenderContext,System.Collections.Generic.ICollection{OxyPlot.Series.RectangleItem})">
            <summary>
            Renders the points as line, broken line and markers.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="items">The Items to render.</param>
        </member>
        <member name="M:OxyPlot.Series.RectangleSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the point on the series that is nearest the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">Interpolate the series if this flag is set to <c>true</c>.</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.RectangleSeries.EnsureAxes">
            <summary>
            Ensures that the axes of the series is defined.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.RectangleSeries.UpdateMaxMinXY">
            <summary>
            Updates the maximum and minimum values of the series for the x and y dimensions only.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.RectangleSeries.UpdateMaxMin">
            <summary>
            Updates the maximum and minimum values of the series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.RectangleSeries.UpdateAxisMaxMin">
            <summary>
            Updates the axes to include the max and min of this series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.RectangleSeries.IsPointInRange(OxyPlot.DataPoint)">
            <summary>
            Tests if a <see cref="T:OxyPlot.DataPoint" /> is inside the heat map
            </summary>
            <param name="p">The <see cref="T:OxyPlot.DataPoint" /> to test.</param>
            <returns><c>True</c> if the point is inside the heat map.</returns>
        </member>
        <member name="T:OxyPlot.Series.ScatterErrorPoint">
            <summary>
            Represents a point in a <see cref="T:OxyPlot.Series.ScatterErrorSeries" />.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ScatterErrorPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.ScatterErrorPoint"/> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="errorX">The X error.</param>
            <param name="errorY">The Y error.</param>
            <param name="size">The size.</param>
            <param name="value">The value.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="P:OxyPlot.Series.ScatterErrorPoint.ErrorX">
            <summary>
            Gets the error in X.
            </summary>
            <value>
            The error.
            </value>
        </member>
        <member name="P:OxyPlot.Series.ScatterErrorPoint.ErrorY">
            <summary>
            Gets the error in Y.
            </summary>
            <value>
            The error.
            </value>
        </member>
        <member name="M:OxyPlot.Series.ScatterErrorPoint.ToCode">
            <summary>
            Returns C# code that generates this instance.
            </summary>
            <returns>C# code.</returns>
        </member>
        <member name="T:OxyPlot.Series.ScatterErrorSeries">
            <summary>
            Represents a series for scatter plots with the possibility to display error bars.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ScatterErrorSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.ScatterErrorSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.ScatterErrorSeries.DataFieldErrorX">
            <summary>
            Gets or sets the data field for the X error property.
            </summary>
            <value>
            The data field.
            </value>
        </member>
        <member name="P:OxyPlot.Series.ScatterErrorSeries.DataFieldErrorY">
            <summary>
            Gets or sets the data field for the Y error property.
            </summary>
            <value>
            The data field.
            </value>
        </member>
        <member name="P:OxyPlot.Series.ScatterErrorSeries.ErrorBarColor">
            <summary>
            Gets or sets the color of the error bar.
            </summary>
            <value>
            The color of the error bar.
            </value>
        </member>
        <member name="P:OxyPlot.Series.ScatterErrorSeries.ErrorBarStopWidth">
            <summary>
            Gets or sets the width of the error bar stop.
            </summary>
            <value>
            The width of the error bar stop.
            </value>
        </member>
        <member name="P:OxyPlot.Series.ScatterErrorSeries.ErrorBarStrokeThickness">
            <summary>
            Gets or sets the error bar stroke thickness.
            </summary>
            <value>
            The error bar stroke thickness.
            </value>
        </member>
        <member name="P:OxyPlot.Series.ScatterErrorSeries.MinimumErrorSize">
            <summary>
            Gets or sets the minimum size (relative to <see cref="P:OxyPlot.Series.ScatterSeries`1.MarkerSize" />) of the error bars to be shown.
            </summary>
            <value>
            The minimum size of the error.
            </value>
        </member>
        <member name="M:OxyPlot.Series.ScatterErrorSeries.Render(OxyPlot.IRenderContext)">
            <summary>
            Renders the series on the specified rendering context.
            </summary>
            <param name="rc">
            The rendering context.
            </param>
        </member>
        <member name="M:OxyPlot.Series.ScatterErrorSeries.SelectAll(System.Func{OxyPlot.Series.ScatterErrorPoint,System.Boolean})">
            <summary>
            Selects all points for which the passed function returns true.
            </summary>
            <param name="func">
            The function.
            </param>
        </member>
        <member name="M:OxyPlot.Series.ScatterErrorSeries.UpdateFromDataFields">
            <summary>
            Updates from data fields.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.ScatterPoint">
            <summary>
            Represents a point in a <see cref="T:OxyPlot.Series.ScatterSeries" />.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ScatterPoint.#ctor(System.Double,System.Double,System.Double,System.Double,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.ScatterPoint" /> class.
            </summary>
            <param name="x">The x.</param>
            <param name="y">The y.</param>
            <param name="size">The size.</param>
            <param name="value">The value.</param>
            <param name="tag">The tag.</param>
        </member>
        <member name="P:OxyPlot.Series.ScatterPoint.X">
            <summary>
            Gets the X.
            </summary>
            <value>The X.</value>
        </member>
        <member name="P:OxyPlot.Series.ScatterPoint.Y">
            <summary>
            Gets the Y.
            </summary>
            <value>The Y.</value>
        </member>
        <member name="P:OxyPlot.Series.ScatterPoint.Size">
            <summary>
            Gets or sets the size.
            </summary>
            <value>The size.</value>
        </member>
        <member name="P:OxyPlot.Series.ScatterPoint.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>The value.</value>
        </member>
        <member name="P:OxyPlot.Series.ScatterPoint.Tag">
            <summary>
            Gets or sets the tag.
            </summary>
            <value>The tag.</value>
        </member>
        <member name="M:OxyPlot.Series.ScatterPoint.ToCode">
            <summary>
            Returns C# code that generates this instance.
            </summary>
            <returns>C# code.</returns>
        </member>
        <member name="M:OxyPlot.Series.ScatterPoint.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:OxyPlot.Series.ScatterSeries">
            <summary>
            Represents a series for scatter plots.
            </summary>
            <remarks>See http://en.wikipedia.org/wiki/Scatter_plot</remarks>
        </member>
        <member name="M:OxyPlot.Series.ScatterSeries.UpdateFromDataFields">
            <summary>
            Updates the <see cref="F:ItemsSourcePoints" /> from the <see cref="P:ItemsSource" /> and data fields.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.ScatterSeries`1">
            <summary>
            Provides a base class for scatter series.
            </summary>
            <typeparam name="T">The type of the data points.</typeparam>
        </member>
        <member name="F:OxyPlot.Series.ScatterSeries`1.DefaultColorAxisTitle">
            <summary>
            The default color-axis title
            </summary>
        </member>
        <member name="F:OxyPlot.Series.ScatterSeries`1.points">
            <summary>
            The list of data points.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.ScatterSeries`1.defaultMarkerFillColor">
            <summary>
            The default fill color.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ScatterSeries`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.ScatterSeries`1"/> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.Points">
            <summary>
            Gets the list of points.
            </summary>
            <value>A list of <see cref="T:OxyPlot.Series.ScatterPoint" />.</value>
            <remarks>If the <see cref="P:OxyPlot.Series.ItemsSeries.ItemsSource" /> is specified, this list will not be used.</remarks>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.LabelFormatString">
            <summary>
            Gets or sets the label format string. The default is <c>null</c> (no labels).
            </summary>
            <value>The label format string.</value>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.LabelMargin">
            <summary>
            Gets or sets the label margins. The default is <c>6</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.Mapping">
            <summary>
            Gets or sets a function that maps from elements in the <see cref="P:OxyPlot.Series.ItemsSeries.ItemsSource" /> to <see cref="T:OxyPlot.Series.ScatterPoint" /> points to be rendered.
            </summary>
            <value>The mapping function. The default is <c>null</c>.</value>
            <remarks>Example: series1.Mapping = item => new DataPoint(((MyType)item).Time,((MyType)item).Value);
            </remarks>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.BinSize">
            <summary>
            Gets or sets the size of the 'binning' feature. 
            If this number is greater than 1, bins of the specified is created for both x and y directions. Only one point will be drawn in each bin.
            </summary>
            <value>
            The size of the bins. The default is <c>0</c> - no binning.
            </value>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.ColorAxis">
            <summary>
            Gets the actual color axis.
            </summary>
            <value>A <see cref="T:OxyPlot.Axes.IColorAxis" />.</value>
            <remarks>This is used to map scatter point values to colors. Use the <see cref="P:OxyPlot.Series.ScatterSeries`1.ColorAxisKey" /> to specify a color axis. 
            If the <see cref="P:OxyPlot.Series.ScatterSeries`1.ColorAxisKey" /> is not specified, the first <see cref="T:OxyPlot.Axes.IColorAxis" /> of the <see cref="T:OxyPlot.PlotModel" /> will be used.</remarks>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.ColorAxisKey">
            <summary>
            Gets or sets the color axis key.
            </summary>
            <value>The color axis key. The default is <c>null</c>.</value>
            <remarks>If set to <c>null</c>, the first <see cref="T:OxyPlot.Axes.IColorAxis" /> of the <see cref="T:OxyPlot.PlotModel" /> will be used. 
            Make sure that the points contains values.
            If your <see cref="T:OxyPlot.PlotModel" /> contains a <see cref="T:OxyPlot.Axes.IColorAxis" />, but you don't want to use a color axis, set the value to <c>string.Empty</c> or some other key that is not in use.</remarks>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.DataFieldX">
            <summary>
            Gets or sets the name of the property that specifies X coordinates in the <see cref="P:OxyPlot.Series.ItemsSeries.ItemsSource" /> elements.
            </summary>
            <value>The name of the property. The default is <c>null</c>.</value>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.DataFieldY">
            <summary>
            Gets or sets the name of the property that specifies Y coordinates in the <see cref="P:OxyPlot.Series.ItemsSeries.ItemsSource" /> elements.
            </summary>
            <value>The name of the property. The default is <c>null</c>.</value>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.DataFieldSize">
            <summary>
            Gets or sets the name of the property that specifies the size in the <see cref="P:OxyPlot.Series.ItemsSeries.ItemsSource" /> elements.
            </summary>
            <value>The name of the property. The default is <c>null</c>.</value>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.DataFieldTag">
            <summary>
            Gets or sets the name of the property that specifies the tag in the <see cref="P:OxyPlot.Series.ItemsSeries.ItemsSource" /> elements.
            </summary>
            <value>The name of the property. The default is <c>null</c>.</value>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.DataFieldValue">
            <summary>
            Gets or sets the name of the property that specifies the color value in the <see cref="P:OxyPlot.Series.ItemsSeries.ItemsSource" /> elements.
            </summary>
            <value>The name of the property. The default is <c>null</c>.</value>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.MarkerFill">
            <summary>
            Gets or sets the marker fill color. If <c>null</c>, this color will be automatically set.
            </summary>
            <value>The fill color of the markers. The default is <see cref="F:OxyPlot.OxyColors.Automatic" />.</value>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.ActualMarkerFillColor">
            <summary>
            Gets the actual fill color.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.MarkerOutline">
            <summary>
            Gets or sets the custom marker outline polygon. Set <see cref="P:OxyPlot.Series.ScatterSeries`1.MarkerType" /> to <see cref="T:MarkerType.Custom" /> to use this.
            </summary>
            <value>A polyline. The default is <c>null</c>.</value>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.MarkerSize">
            <summary>
            Gets or sets the size of the marker (same size for all items).
            </summary>
            <value>The size of the markers. The default is <c>5</c>.</value>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.MarkerStroke">
            <summary>
            Gets or sets the marker stroke.
            </summary>
            <value>The marker stroke. The default is <see cref="F:OxyPlot.OxyColors.Automatic" />.</value>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.MarkerStrokeThickness">
            <summary>
            Gets or sets thickness of the the marker strokes.
            </summary>
            <value>The thickness. The default is <c>1</c>.</value>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.MarkerType">
            <summary>
            Gets or sets the type of the marker.
            </summary>
            <value>The type of the marker. The default is <see cref="T:MarkerType.Square" />.</value>
            <remarks>If <see cref="T:MarkerType.Custom" /> is used, the <see cref="P:OxyPlot.Series.ScatterSeries`1.MarkerOutline" /> property must be specified.</remarks>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.MaxValue">
            <summary>
            Gets the maximum value of the points.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.MinValue">
            <summary>
            Gets the minimum value of the points.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.ActualPoints">
            <summary>
            Gets the actual points.
            </summary>
            <value>
            A read-only list of points.
            </value>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.ActualPointsList">
            <summary>
            Gets the list of points that should be rendered.
            </summary>
            <value>A list of <see cref="T:OxyPlot.DataPoint" />.</value>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.ItemsSourcePoints">
            <summary>
            Gets or sets the data points from the items source.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.ScatterSeries`1.OwnsItemsSourcePoints">
            <summary>
            Gets or sets a value indicating whether the <see cref="P:OxyPlot.Series.ScatterSeries`1.ItemsSourcePoints" /> list can be modified.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ScatterSeries`1.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the nearest point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">interpolate if set to <c>true</c> .</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.ScatterSeries`1.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.ScatterSeries`1.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the legend symbol for the line series on the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="legendBox">The bounding rectangle of the legend box.</param>
        </member>
        <member name="M:OxyPlot.Series.ScatterSeries`1.EnsureAxes">
            <summary>
            Ensures that the axes of the series is defined.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ScatterSeries`1.SetDefaultValues">
            <summary>
            Sets the default values.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ScatterSeries`1.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ScatterSeries`1.UpdateMaxMin">
            <summary>
            Updates the maximum and minimum values of the series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ScatterSeries`1.RenderPointLabels(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the point labels.
            </summary>
            <param name="rc">The render context.</param>
            <param name="clippingRect">The clipping rectangle.</param>
        </member>
        <member name="M:OxyPlot.Series.ScatterSeries`1.InternalUpdateMaxMinValue(System.Collections.Generic.List{`0})">
            <summary>
            Updates the Max/Min limits from the values in the specified point list.
            </summary>
            <param name="pts">The points.</param>
        </member>
        <member name="M:OxyPlot.Series.ScatterSeries`1.InternalUpdateMaxMinValue(System.Collections.Generic.IList{OxyPlot.Series.ScatterPoint})">
            <summary>
            Updates the Max/Min limits from the values in the specified point list.
            </summary>
            <param name="pts">The points.</param>
        </member>
        <member name="M:OxyPlot.Series.ScatterSeries`1.ClearItemsSourcePoints">
            <summary>
            Clears or creates the <see cref="P:OxyPlot.Series.ScatterSeries`1.ItemsSourcePoints"/> list.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ScatterSeries`1.UpdateFromDataFields">
            <summary>
            Updates the <see cref="F:ItemsSourcePoints" /> from the <see cref="P:ItemsSource" /> and data fields.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ScatterSeries`1.UpdateItemsSourcePoints">
            <summary>
            Updates the points from the <see cref="P:OxyPlot.Series.ItemsSeries.ItemsSource" />.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.Series">
            <summary>
            Provides an abstract base class for plot series.
            </summary>
            <remarks>This class contains internal methods that should be called only from the PlotModel.</remarks>
        </member>
        <member name="M:OxyPlot.Series.Series.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.Series" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.Series.Background">
            <summary>
            Gets or sets the background color of the series. The default is <c>OxyColors.Undefined</c>.
            </summary>
            <remarks>This property defines the background color in the area defined by the x and y axes used by this series.</remarks>
        </member>
        <member name="P:OxyPlot.Series.Series.IsVisible">
            <summary>
            Gets or sets a value indicating whether this series is visible. The default is <c>true</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.Series.Title">
            <summary>
            Gets or sets the title of the series. The default is <c>null</c>.
            </summary>
            <value>The title that is shown in the legend of the plot. The default value is <c>null</c>.</value>
        </member>
        <member name="P:OxyPlot.Series.Series.LegendKey">
            <summary>
            Gets or sets the key for the Legend to use on this series. The default is <c>null</c>.
            </summary>
            <remarks>
            This key may be used by the plot model to show a custom Legend for the series.
            </remarks>
        </member>
        <member name="P:OxyPlot.Series.Series.SeriesGroupName">
            <summary>
            Gets or sets the groupname for the Series. The default is <c>null</c>.
            </summary>
            <remarks>
            This groupname may for e.g. be used by the Legend class to group series into separated blocks.
            </remarks>
        </member>
        <member name="P:OxyPlot.Series.Series.RenderInLegend">
            <summary>
            Gets or sets a value indicating whether the series should be rendered in the legend. The default is <c>true</c>.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.Series.TrackerFormatString">
            <summary>
            Gets or sets a format string used for the tracker. The default depends on the series.
            </summary>
            <remarks>
            The arguments for the format string may be different for each type of series. See the documentation.
            </remarks>
        </member>
        <member name="P:OxyPlot.Series.Series.TrackerKey">
            <summary>
            Gets or sets the key for the tracker to use on this series. The default is <c>null</c>.
            </summary>
            <remarks>
            This key may be used by the plot view to show a custom tracker for the series.
            </remarks>
        </member>
        <member name="M:OxyPlot.Series.Series.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the point on the series that is nearest the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">Interpolate the series if this flag is set to <c>true</c>.</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.Series.Render(OxyPlot.IRenderContext)">
            <summary>
            Renders the series on the specified render context.
            </summary>
            <param name="rc">The rendering context.</param>
        </member>
        <member name="M:OxyPlot.Series.Series.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the legend symbol on the specified render context.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="legendBox">The legend rectangle.</param>
        </member>
        <member name="M:OxyPlot.Series.Series.AreAxesRequired">
            <summary>
            Checks if this data series requires X/Y axes. (e.g. Pie series do not require axes)
            </summary>
            <returns><c>true</c> if axes are required.</returns>
        </member>
        <member name="M:OxyPlot.Series.Series.EnsureAxes">
            <summary>
            Ensures that the axes of the series are defined.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.Series.IsUsing(OxyPlot.Axes.Axis)">
            <summary>
            Checks if the data series is using the specified axis.
            </summary>
            <param name="axis">The axis that should be checked.</param>
            <returns><c>true</c> if the axis is in use.</returns>
        </member>
        <member name="M:OxyPlot.Series.Series.SetDefaultValues">
            <summary>
            Sets the default values (colors, line style etc.) from the plot model.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.Series.UpdateAxisMaxMin">
            <summary>
            Updates the maximum and minimum values of the axes used by this series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.Series.UpdateData">
            <summary>
            Updates the data of the series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.Series.UpdateMaxMin">
            <summary>
            Updates the maximum and minimum values of the series.
            </summary>
            <remarks>This method is called when the <see cref="T:OxyPlot.PlotModel" /> is updated with the <c>updateData</c> parameter set to <c>true</c>.</remarks>
        </member>
        <member name="M:OxyPlot.Series.Series.HitTestOverride(OxyPlot.HitTestArguments)">
            <summary>
            When overridden in a derived class, tests if the plot element is hit by the specified point.
            </summary>
            <param name="args">The hit test arguments.</param>
            <returns>
            The result of the hit test.
            </returns>
        </member>
        <member name="T:OxyPlot.Series.StairStepSeries">
            <summary>
            Represents a series for stair step graphs.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.StairStepSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.Series.StairStepSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.StairStepSeries.VerticalStrokeThickness">
            <summary>
            Gets or sets the stroke thickness of the vertical line segments.
            </summary>
            <value>The vertical stroke thickness.</value>
            <remarks>Set the value to NaN to use the StrokeThickness property for both horizontal and vertical segments.
            Using the VerticalStrokeThickness property will have a small performance hit.</remarks>
        </member>
        <member name="P:OxyPlot.Series.StairStepSeries.VerticalLineStyle">
            <summary>
            Gets or sets the line style of the vertical line segments.
            </summary>
            <value>The vertical line style.</value>
        </member>
        <member name="M:OxyPlot.Series.StairStepSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the nearest point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">interpolate if set to <c>true</c> .</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.StairStepSeries.Render(OxyPlot.IRenderContext)">
            <summary>
            Renders the LineSeries on the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
        </member>
        <member name="T:OxyPlot.Series.StemSeries">
            <summary>
            Represents a series that plots discrete data in a stem plot.
            </summary>
            <remarks>See <a href="http://en.wikipedia.org/wiki/Stemplot">Stem plot</a> and
            <a href="http://www.mathworks.com/help/techdoc/ref/stem.html">stem</a>.</remarks>
        </member>
        <member name="M:OxyPlot.Series.StemSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.Series.StemSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.StemSeries.Base">
            <summary>
            Gets or sets Base.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.StemSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the point on the series that is nearest the specified point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">Interpolate the series if this flag is set to <c>true</c>.</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.StemSeries.Render(OxyPlot.IRenderContext)">
            <summary>
            Renders the LineSeries on the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
        </member>
        <member name="T:OxyPlot.Series.ThreeColorLineSeries">
            <summary>
            Represents a two-color line series.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.ThreeColorLineSeries.defaultColorLo">
            <summary>
            The default low color.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.ThreeColorLineSeries.defaultColorHi">
            <summary>
            The default hi color.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ThreeColorLineSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.Series.ThreeColorLineSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.ThreeColorLineSeries.ColorLo">
            <summary>
            Gets or sets the color for the part of the line that is below the limit.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.ThreeColorLineSeries.ColorHi">
            <summary>
            Gets or sets the color for the part of the line that is above the limit.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.ThreeColorLineSeries.ActualColorLo">
            <summary>
            Gets the actual hi color.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="P:OxyPlot.Series.ThreeColorLineSeries.ActualColorHi">
            <summary>
            Gets the actual low color.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="P:OxyPlot.Series.ThreeColorLineSeries.LimitHi">
            <summary>
            Gets or sets the high limit.
            </summary>
            <remarks>The parts of the line that is below this limit will be rendered with ColorHi.
            The parts of the line that is above the limit will be rendered with Color.</remarks>
        </member>
        <member name="P:OxyPlot.Series.ThreeColorLineSeries.LimitLo">
            <summary>
            Gets or sets the low limit.
            </summary>
            <remarks>The parts of the line that is below this limit will be rendered with ColorLo.
            The parts of the line that is above the limit will be rendered with Color.</remarks>
        </member>
        <member name="P:OxyPlot.Series.ThreeColorLineSeries.DashesHi">
            <summary>
            Gets or sets the dash array for the rendered line that is above the limit (overrides <see cref="T:OxyPlot.LineStyle" />).
            </summary>
            <value>The dash array.</value>
            <remarks>If this is not <c>null</c> it overrides the <see cref="T:OxyPlot.LineStyle" /> property.</remarks>
        </member>
        <member name="P:OxyPlot.Series.ThreeColorLineSeries.DashesLo">
            <summary>
            Gets or sets the dash array for the rendered line that is below the limit (overrides <see cref="T:OxyPlot.LineStyle" />).
            </summary>
            <value>The dash array.</value>
            <remarks>If this is not <c>null</c> it overrides the <see cref="T:OxyPlot.LineStyle" /> property.</remarks>
        </member>
        <member name="P:OxyPlot.Series.ThreeColorLineSeries.LineStyleHi">
            <summary>
            Gets or sets the line style for the part of the line that is above the limit.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:OxyPlot.Series.ThreeColorLineSeries.LineStyleLo">
            <summary>
            Gets or sets the line style for the part of the line that is below the limit.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:OxyPlot.Series.ThreeColorLineSeries.ActualLineStyleHi">
            <summary>
            Gets the actual line style for the part of the line that is above the limit.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:OxyPlot.Series.ThreeColorLineSeries.ActualLineStyleLo">
            <summary>
            Gets the actual line style for the part of the line that is below the limit.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:OxyPlot.Series.ThreeColorLineSeries.ActualDashArrayHi">
            <summary>
            Gets the actual dash array for the line that is above the limit.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.ThreeColorLineSeries.ActualDashArrayLo">
            <summary>
            Gets the actual dash array for the line that is below the limit.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ThreeColorLineSeries.SetDefaultValues">
            <summary>
            Sets the default values.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.ThreeColorLineSeries.RenderLine(OxyPlot.IRenderContext,System.Collections.Generic.IList{OxyPlot.ScreenPoint})">
            <inheritdoc/>
        </member>
        <member name="T:OxyPlot.Series.TwoColorAreaSeries">
            <summary>
            Represents a two-color area series.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.TwoColorAreaSeries.defaultColor2">
            <summary>
            The default second color.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.TwoColorAreaSeries.abovePoints">
            <summary>
            The collection of points above the limit.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.TwoColorAreaSeries.belowPoints">
            <summary>
            The collection of points below the limit.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.TwoColorAreaSeries.markerStartIndex">
            <summary>
            Start index of a visible rendering window for markers.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.TwoColorAreaSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.Series.TwoColorAreaSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TwoColorAreaSeries.Fill2">
            <summary>
            Gets or sets the area fill color below the limit line.
            </summary>
            <value>The fill below the limit line.</value>
        </member>
        <member name="P:OxyPlot.Series.TwoColorAreaSeries.ActualFill2">
            <summary>
            Gets the actual fill color below the limit line.
            </summary>
            <value>The actual fill below the limit line.</value>
        </member>
        <member name="P:OxyPlot.Series.TwoColorAreaSeries.ActualColor2">
            <summary>
            Gets the actual second color.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="P:OxyPlot.Series.TwoColorAreaSeries.Dashes2">
            <summary>
            Gets or sets the dash array for the rendered line that is below the limit (overrides <see cref="T:OxyPlot.LineStyle" />).
            </summary>
            <value>The dash array.</value>
            <remarks>If this is not <c>null</c> it overrides the <see cref="T:OxyPlot.LineStyle" /> property.</remarks>
        </member>
        <member name="P:OxyPlot.Series.TwoColorAreaSeries.LineStyle2">
            <summary>
            Gets or sets the line style for the part of the line that is below the limit.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:OxyPlot.Series.TwoColorAreaSeries.ActualLineStyle2">
            <summary>
            Gets the actual line style for the part of the line that is below the limit.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:OxyPlot.Series.TwoColorAreaSeries.ActualDashArray2">
            <summary>
            Gets the actual dash array for the line that is below the limit.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TwoColorAreaSeries.MarkerFill2">
            <summary>
            Gets or sets the marker fill color which is below the limit line. The default is <see cref="F:OxyPlot.OxyColors.Automatic" />.
            </summary>
            <value>The marker fill.</value>
        </member>
        <member name="P:OxyPlot.Series.TwoColorAreaSeries.MarkerStroke2">
            <summary>
            Gets or sets the marker stroke which is below the limit line. The default is <c>OxyColors.Automatic</c>.
            </summary>
            <value>The marker stroke.</value>
        </member>
        <member name="P:OxyPlot.Series.TwoColorAreaSeries.Limit">
            <summary>
            Gets or sets a baseline for the series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.TwoColorAreaSeries.GetNearestPoint(OxyPlot.ScreenPoint,System.Boolean)">
            <summary>
            Gets the nearest point.
            </summary>
            <param name="point">The point.</param>
            <param name="interpolate">Interpolate if set to <c>true</c> .</param>
            <returns>A TrackerHitResult for the current hit.</returns>
        </member>
        <member name="M:OxyPlot.Series.TwoColorAreaSeries.Render(OxyPlot.IRenderContext)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.TwoColorAreaSeries.SetDefaultValues">
            <summary>
            Sets the default values.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.TwoColorAreaSeries.UpdateData">
            <summary>
            The update data.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.TwoColorAreaSeries.RenderScreenPoints(OxyPlot.Series.AreaSeries.AreaRenderContext,System.Collections.Generic.List{OxyPlot.ScreenPoint})">
            <summary>
            Renders a chunk of points on the screen.
            </summary>
            <param name="context">Render context.</param>
            <param name="points">Screen points.</param>
            <returns>The list of resampled points.</returns>
        </member>
        <member name="M:OxyPlot.Series.TwoColorAreaSeries.SplitPoints(System.Collections.Generic.List{OxyPlot.DataPoint})">
            <summary>
            Splits a collection of points into two collections based on their Y value.
            </summary>
            <param name="source">A collection of points to split.</param>
        </member>
        <member name="M:OxyPlot.Series.TwoColorAreaSeries.GetConstantScreenPoints2(System.Collections.Generic.List{OxyPlot.ScreenPoint},System.Double)">
            <summary>
            Gets the screen points when baseline is used.
            </summary>
            <param name="source">The list of polygon screen points.</param>
            <param name="baseline">Baseline Y value for the polygon.</param>
            <returns>A sequence of <see cref="T:DataPoint"/>.</returns>
        </member>
        <member name="M:OxyPlot.Series.TwoColorAreaSeries.GetInterpolatedX(OxyPlot.DataPoint,OxyPlot.DataPoint,System.Double)">
            <summary>
            Gets interpolated X coordinate for given Y on a straight line
            between two points.
            </summary>
            <param name="a">First point.</param>
            <param name="b">Second point.</param>
            <param name="y">Y coordinate.</param>
            <returns>Corresponding X coordinate.</returns>
        </member>
        <member name="T:OxyPlot.Series.TwoColorAreaSeries.TwoColorAreaRenderContext">
            <summary>
            Render context for two color area plot.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TwoColorAreaSeries.TwoColorAreaRenderContext.Baseline">
            <summary>
            Gets or sets area baseline value.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TwoColorAreaSeries.TwoColorAreaRenderContext.Fill">
            <summary>
            Gets or sets polygon fill color.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TwoColorAreaSeries.TwoColorAreaRenderContext.MarkerFill">
            <summary>
            Gets or sets marker fill color.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TwoColorAreaSeries.TwoColorAreaRenderContext.MarkerStroke">
            <summary>
            Gets or sets marker stroke color.
            </summary>
        </member>
        <member name="T:OxyPlot.Series.TwoColorLineSeries">
            <summary>
            Represents a two-color line series.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.TwoColorLineSeries.defaultColor2">
            <summary>
            The default second color.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.TwoColorLineSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.Series.TwoColorLineSeries" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TwoColorLineSeries.Color2">
            <summary>
            Gets or sets the color for the part of the line that is below the limit.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.TwoColorLineSeries.ActualColor2">
            <summary>
            Gets the actual second color.
            </summary>
            <value>The actual color.</value>
        </member>
        <member name="P:OxyPlot.Series.TwoColorLineSeries.Limit">
            <summary>
            Gets or sets the limit.
            </summary>
            <remarks>The parts of the line that is below this limit will be rendered with Color2.
            The parts of the line that is above the limit will be rendered with Color.</remarks>
        </member>
        <member name="P:OxyPlot.Series.TwoColorLineSeries.Dashes2">
            <summary>
            Gets or sets the dash array for the rendered line that is below the limit (overrides <see cref="T:OxyPlot.LineStyle" />).
            </summary>
            <value>The dash array.</value>
            <remarks>If this is not <c>null</c> it overrides the <see cref="T:OxyPlot.LineStyle" /> property.</remarks>
        </member>
        <member name="P:OxyPlot.Series.TwoColorLineSeries.LineStyle2">
            <summary>
            Gets or sets the line style for the part of the line that is below the limit.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:OxyPlot.Series.TwoColorLineSeries.ActualLineStyle2">
            <summary>
            Gets the actual line style for the part of the line that is below the limit.
            </summary>
            <value>The line style.</value>
        </member>
        <member name="P:OxyPlot.Series.TwoColorLineSeries.ActualDashArray2">
            <summary>
            Gets the actual dash array for the line that is below the limit.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.TwoColorLineSeries.SetDefaultValues">
            <summary>
            Sets the default values.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.TwoColorLineSeries.RenderLine(OxyPlot.IRenderContext,System.Collections.Generic.IList{OxyPlot.ScreenPoint})">
            <inheritdoc/>
        </member>
        <member name="T:OxyPlot.Series.XYAxisSeries">
            <summary>
            Provides an abstract base class for series that are related to an X-axis and a Y-axis.
            </summary>
        </member>
        <member name="F:OxyPlot.Series.XYAxisSeries.DefaultTrackerFormatString">
            <summary>
            The default tracker format string
            </summary>
        </member>
        <member name="F:OxyPlot.Series.XYAxisSeries.DefaultXAxisTitle">
            <summary>
            The default x-axis title
            </summary>
        </member>
        <member name="F:OxyPlot.Series.XYAxisSeries.DefaultYAxisTitle">
            <summary>
            The default y-axis title
            </summary>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.Series.XYAxisSeries"/> class.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.XYAxisSeries.MaxX">
            <summary>
            Gets or sets the maximum x-coordinate of the dataset.
            </summary>
            <value>The maximum x-coordinate.</value>
        </member>
        <member name="P:OxyPlot.Series.XYAxisSeries.MaxY">
            <summary>
            Gets or sets the maximum y-coordinate of the dataset.
            </summary>
            <value>The maximum y-coordinate.</value>
        </member>
        <member name="P:OxyPlot.Series.XYAxisSeries.MinX">
            <summary>
            Gets or sets the minimum x-coordinate of the dataset.
            </summary>
            <value>The minimum x-coordinate.</value>
        </member>
        <member name="P:OxyPlot.Series.XYAxisSeries.MinY">
            <summary>
            Gets or sets the minimum y-coordinate of the dataset.
            </summary>
            <value>The minimum y-coordinate.</value>
        </member>
        <member name="P:OxyPlot.Series.XYAxisSeries.XAxis">
            <summary>
            Gets the x-axis.
            </summary>
            <value>The x-axis.</value>
        </member>
        <member name="P:OxyPlot.Series.XYAxisSeries.XAxisKey">
            <summary>
            Gets or sets the x-axis key. The default is <c>null</c>.
            </summary>
            <value>The x-axis key.</value>
        </member>
        <member name="P:OxyPlot.Series.XYAxisSeries.YAxis">
            <summary>
            Gets the y-axis.
            </summary>
            <value>The y-axis.</value>
        </member>
        <member name="P:OxyPlot.Series.XYAxisSeries.YAxisKey">
            <summary>
            Gets or sets the y-axis key. The default is <c>null</c>.
            </summary>
            <value>The y-axis key.</value>
        </member>
        <member name="P:OxyPlot.Series.XYAxisSeries.IsXMonotonic">
            <summary>
            Gets or sets a value indicating whether the X coordinate of all data point increases monotonically.
            </summary>
        </member>
        <member name="P:OxyPlot.Series.XYAxisSeries.WindowStartIndex">
            <summary>
            Gets or sets the last visible window start position in the data points collection.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.GetClippingRect">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.GetScreenRectangle">
            <summary>
            Gets the rectangle the series uses on the screen (screen coordinates).
            </summary>
            <returns>The rectangle.</returns>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.InverseTransform(OxyPlot.ScreenPoint)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.RenderLegend(OxyPlot.IRenderContext,OxyPlot.OxyRect)">
            <summary>
            Renders the legend symbol on the specified rendering context.
            </summary>
            <param name="rc">The rendering context.</param>
            <param name="legendBox">The legend rectangle.</param>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.Transform(OxyPlot.DataPoint)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.AreAxesRequired">
            <summary>
            Check if this data series requires X/Y axes. (e.g. Pie series do not require axes)
            </summary>
            <returns>The are axes required.</returns>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.EnsureAxes">
            <summary>
            Ensures that the axes of the series is defined.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.IsUsing(OxyPlot.Axes.Axis)">
            <summary>
            Check if the data series is using the specified axis.
            </summary>
            <param name="axis">An axis.</param>
            <returns>True if the axis is in use.</returns>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.SetDefaultValues">
            <summary>
            Sets default values from the plot model.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.UpdateAxisMaxMin">
            <summary>
            Updates the axes to include the max and min of this series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.UpdateData">
            <summary>
            Updates the data.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.UpdateMaxMin">
            <summary>
            Updates the maximum and minimum values of the series.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.GetNearestInterpolatedPointInternal(System.Collections.Generic.List{OxyPlot.DataPoint},OxyPlot.ScreenPoint)">
            <summary>
            Gets the point on the curve that is nearest the specified point.
            </summary>
            <param name="points">The point list.</param>
            <param name="point">The point.</param>
            <returns>A tracker hit result if a point was found.</returns>
            <remarks>The Text property of the result will not be set, since the formatting depends on the various series.</remarks>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.GetNearestInterpolatedPointInternal(System.Collections.Generic.List{OxyPlot.DataPoint},System.Int32,OxyPlot.ScreenPoint)">
            <summary>
            Gets the point on the curve that is nearest the specified point.
            </summary>
            <param name="points">The point list.</param>
            <param name="startIdx">The index to start from.</param>
            <param name="point">The point.</param>
            <returns>A tracker hit result if a point was found.</returns>
            <remarks>The Text property of the result will not be set, since the formatting depends on the various series.</remarks>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.GetNearestPointInternal(System.Collections.Generic.IEnumerable{OxyPlot.DataPoint},OxyPlot.ScreenPoint)">
            <summary>
            Gets the nearest point.
            </summary>
            <param name="points">The points (data coordinates).</param>
            <param name="point">The point (screen coordinates).</param>
            <returns>A <see cref="T:OxyPlot.TrackerHitResult" /> if a point was found, <c>null</c> otherwise.</returns>
            <remarks>The Text property of the result will not be set, since the formatting depends on the various series.</remarks>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.GetNearestPointInternal(System.Collections.Generic.IEnumerable{OxyPlot.DataPoint},System.Int32,OxyPlot.ScreenPoint)">
            <summary>
            Gets the nearest point.
            </summary>
            <param name="points">The points (data coordinates).</param>
            <param name="startIdx">The index to start from.</param>
            <param name="point">The point (screen coordinates).</param>
            <returns>A <see cref="T:OxyPlot.TrackerHitResult" /> if a point was found, <c>null</c> otherwise.</returns>
            <remarks>The Text property of the result will not be set, since the formatting depends on the various series.</remarks>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.IsValidPoint(OxyPlot.DataPoint)">
            <summary>
            Determines whether the specified point is valid.
            </summary>
            <param name="pt">The point.</param>
            <returns><c>true</c> if the point is valid; otherwise, <c>false</c> .</returns>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.IsValidPoint(System.Double,System.Double)">
            <summary>
            Determines whether the specified point is valid.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns><c>true</c> if the point is valid; otherwise, <c>false</c> . </returns>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.InternalUpdateMaxMin(System.Collections.Generic.List{OxyPlot.DataPoint})">
            <summary>
            Updates the Max/Min limits from the specified <see cref="T:OxyPlot.DataPoint" /> list.
            </summary>
            <param name="points">The list of points.</param>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.InternalUpdateMaxMin``1(System.Collections.Generic.List{``0},System.Func{``0,System.Double},System.Func{``0,System.Double})">
            <summary>
            Updates the Max/Min limits from the specified list.
            </summary>
            <typeparam name="T">The type of the elements in the list.</typeparam>
            <param name="items">The items.</param>
            <param name="xf">A function that provides the x value for each item.</param>
            <param name="yf">A function that provides the y value for each item.</param>
            <exception cref="T:System.ArgumentNullException">The items argument cannot be null.</exception>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.InternalUpdateMaxMin``1(System.Collections.Generic.List{``0},System.Func{``0,System.Double},System.Func{``0,System.Double},System.Func{``0,System.Double},System.Func{``0,System.Double})">
            <summary>
            Updates the Max/Min limits from the specified collection.
            </summary>
            <typeparam name="T">The type of the items in the collection.</typeparam>
            <param name="items">The items.</param>
            <param name="xmin">A function that provides the x minimum for each item.</param>
            <param name="xmax">A function that provides the x maximum for each item.</param>
            <param name="ymin">A function that provides the y minimum for each item.</param>
            <param name="ymax">A function that provides the y maximum for each item.</param>
            <exception cref="T:System.ArgumentNullException">The items argument cannot be null.</exception>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.VerifyAxes">
            <summary>
            Verifies that both axes are defined.
            </summary>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.UpdateWindowStartIndex``1(System.Collections.Generic.IList{``0},System.Func{``0,System.Double},System.Double,System.Int32)">
            <summary>
            Updates visible window start index.
            </summary>
            <typeparam name="T">The type of the list items.</typeparam>
            <param name="items">Data points.</param>
            <param name="xgetter">Function that gets data point X coordinate.</param>
            <param name="targetX">X coordinate of visible window start.</param>
            <param name="lastIndex">Last window index.</param>
            <returns>The new window start index.</returns>
        </member>
        <member name="M:OxyPlot.Series.XYAxisSeries.FindWindowStartIndex``1(System.Collections.Generic.IList{``0},System.Func{``0,System.Double},System.Double,System.Int32)">
            <summary>
            Finds the index of max(x) &lt;= target x in a list of data points
            </summary>
            <typeparam name="T">The type of the list items.</typeparam>
            <param name="items">vector of data points</param>
            <param name="xgetter">Function that gets data point X coordinate.</param>
            <param name="targetX">target x.</param>
            <param name="initialGuess">initial guess index.</param>
            <returns>
            index of x with max(x) &lt;= target x or 0 if cannot find
            </returns>
        </member>
        <member name="T:OxyPlot.SvgExporter">
            <summary>
            Provides functionality to export plots to scalable vector graphics.
            </summary>
        </member>
        <member name="M:OxyPlot.SvgExporter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.SvgExporter" /> class.
            </summary>
        </member>
        <member name="P:OxyPlot.SvgExporter.Width">
            <summary>
            Gets or sets the width (in user units) of the output area.
            </summary>
        </member>
        <member name="P:OxyPlot.SvgExporter.Height">
            <summary>
            Gets or sets the height (in user units) of the output area.
            </summary>
        </member>
        <member name="P:OxyPlot.SvgExporter.IsDocument">
            <summary>
            Gets or sets a value indicating whether the xml headers should be included.
            </summary>
        </member>
        <member name="P:OxyPlot.SvgExporter.UseVerticalTextAlignmentWorkaround">
            <summary>
            Gets or sets a value indicating whether to use a workaround for vertical text alignment to support renderers with limited support for the dominate-baseline attribute.
            </summary>
        </member>
        <member name="P:OxyPlot.SvgExporter.TextMeasurer">
            <summary>
            Gets or sets the text measurer.
            </summary>
        </member>
        <member name="M:OxyPlot.SvgExporter.Export(OxyPlot.IPlotModel,System.IO.Stream,System.Double,System.Double,System.Boolean,OxyPlot.IRenderContext,System.Boolean)">
            <summary>
            Exports the specified model to a stream.
            </summary>
            <param name="model">The model.</param>
            <param name="stream">The output stream.</param>
            <param name="width">The width (points).</param>
            <param name="height">The height (points).</param>
            <param name="isDocument">if set to <c>true</c>, the xml headers will be included (?xml and !DOCTYPE).</param>
            <param name="textMeasurer">The text measurer.</param>
            <param name="useVerticalTextAlignmentWorkaround">Whether to use the workaround for vertical text alignment</param>
        </member>
        <member name="M:OxyPlot.SvgExporter.ExportToString(OxyPlot.IPlotModel,System.Double,System.Double,System.Boolean,OxyPlot.IRenderContext,System.Boolean)">
            <summary>
            Exports to string.
            </summary>
            <param name="model">The model.</param>
            <param name="width">The width (points).</param>
            <param name="height">The height (points).</param>
            <param name="isDocument">if set to <c>true</c>, the xml headers will be included (?xml and !DOCTYPE).</param>
            <param name="textMeasurer">The text measurer.</param>
            <returns>The plot as an <c>SVG</c> string.</returns>
            <param name="useVerticalTextAlignmentWorkaround">Whether to use the workaround for vertical text alignment</param>
        </member>
        <member name="M:OxyPlot.SvgExporter.Export(OxyPlot.IPlotModel,System.IO.Stream)">
            <summary>
            Exports the specified <see cref="T:OxyPlot.PlotModel" /> to a <see cref="T:System.IO.Stream" />.
            </summary>
            <param name="model">The model to export.</param>
            <param name="stream">The target stream.</param>
        </member>
        <member name="M:OxyPlot.SvgExporter.ExportToString(OxyPlot.IPlotModel)">
            <summary>
            Exports the specified <see cref="T:OxyPlot.PlotModel" /> to a string.
            </summary>
            <param name="model">The model.</param>
            <returns>the SVG content as a string.</returns>
        </member>
        <member name="T:OxyPlot.SvgRenderContext">
            <summary>
            Provides a render context for scalable vector graphics output.
            </summary>
        </member>
        <member name="F:OxyPlot.SvgRenderContext.w">
            <summary>
            The writer.
            </summary>
        </member>
        <member name="F:OxyPlot.SvgRenderContext.disposed">
            <summary>
            The disposed flag.
            </summary>
        </member>
        <member name="M:OxyPlot.SvgRenderContext.#ctor(System.IO.Stream,System.Double,System.Double,System.Boolean,OxyPlot.IRenderContext,OxyPlot.OxyColor,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.SvgRenderContext" /> class.
            </summary>
            <param name="s">The stream.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="isDocument">Create an SVG document if set to <c>true</c>.</param>
            <param name="textMeasurer">The text measurer.</param>
            <param name="background">The background.</param>
            <param name="useVerticalTextAlignmentWorkaround">Whether to use the workaround for vertical text alignment.</param>
        </member>
        <member name="P:OxyPlot.SvgRenderContext.TextMeasurer">
            <summary>
            Gets or sets the text measurer.
            </summary>
            <value>The text measurer.</value>
        </member>
        <member name="P:OxyPlot.SvgRenderContext.UseVerticalTextAlignmentWorkaround">
            <summary>
            Gets or sets a value indicating whether to use a workaround for vertical text alignment to support renderers with limited support for the dominate-baseline attribute.
            </summary>
        </member>
        <member name="M:OxyPlot.SvgRenderContext.Close">
            <summary>
            Closes the svg writer.
            </summary>
        </member>
        <member name="M:OxyPlot.SvgRenderContext.Complete">
            <summary>
            Completes the svg element.
            </summary>
        </member>
        <member name="M:OxyPlot.SvgRenderContext.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:OxyPlot.SvgRenderContext.DrawEllipse(OxyPlot.OxyRect,OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.SvgRenderContext.DrawLine(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Double[],OxyPlot.LineJoin)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.SvgRenderContext.DrawPolygon(System.Collections.Generic.IList{OxyPlot.ScreenPoint},OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode,System.Double[],OxyPlot.LineJoin)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.SvgRenderContext.DrawRectangle(OxyPlot.OxyRect,OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,OxyPlot.EdgeRenderingMode)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.SvgRenderContext.DrawText(OxyPlot.ScreenPoint,System.String,OxyPlot.OxyColor,System.String,System.Double,System.Double,System.Double,OxyPlot.HorizontalAlignment,OxyPlot.VerticalAlignment,System.Nullable{OxyPlot.OxySize})">
            <summary>
            Draws the text.
            </summary>
            <param name="p">The p.</param>
            <param name="text">The text.</param>
            <param name="c">The c.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontWeight">The font weight.</param>
            <param name="rotate">The rotate.</param>
            <param name="halign">The horizontal alignment.</param>
            <param name="valign">The vertical alignment.</param>
            <param name="maxSize">Size of the max.</param>
        </member>
        <member name="M:OxyPlot.SvgRenderContext.Flush">
            <summary>
            Flushes this instance.
            </summary>
        </member>
        <member name="M:OxyPlot.SvgRenderContext.MeasureText(System.String,System.String,System.Double,System.Double)">
            <summary>
            Measures the text.
            </summary>
            <param name="text">The text.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">Size of the font.</param>
            <param name="fontWeight">The font weight.</param>
            <returns>The text size.</returns>
        </member>
        <member name="M:OxyPlot.SvgRenderContext.DrawImage(OxyPlot.OxyImage,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Boolean)">
            <summary>
            Draws the specified portion of the specified <see cref="T:OxyPlot.OxyImage" /> at the specified location and with the specified size.
            </summary>
            <param name="source">The source.</param>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="destX">The x-coordinate of the upper-left corner of drawn image.</param>
            <param name="destY">The y-coordinate of the upper-left corner of drawn image.</param>
            <param name="destWidth">The width of the drawn image.</param>
            <param name="destHeight">The height of the drawn image.</param>
            <param name="opacity">The opacity.</param>
            <param name="interpolate">Interpolate if set to <c>true</c>.</param>
        </member>
        <member name="M:OxyPlot.SvgRenderContext.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="M:OxyPlot.SvgRenderContext.SetClip(OxyPlot.OxyRect)">
            <inheritdoc/>
        </member>
        <member name="M:OxyPlot.SvgRenderContext.ResetClip">
            <inheritdoc/>
        </member>
        <member name="T:OxyPlot.SvgWriter">
            <summary>
            Represents a writer that provides easy generation of Scalable Vector Graphics files.
            </summary>
        </member>
        <member name="F:OxyPlot.SvgWriter.endIsWritten">
            <summary>
            The end is written.
            </summary>
        </member>
        <member name="F:OxyPlot.SvgWriter.clipPathNumber">
            <summary>
            The clip path number
            </summary>
        </member>
        <member name="M:OxyPlot.SvgWriter.#ctor(System.IO.Stream,System.Double,System.Double,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.SvgWriter" /> class.
            </summary>
            <param name="stream">The stream.</param>
            <param name="width">The width (in user units).</param>
            <param name="height">The height (in user units).</param>
            <param name="isDocument">if set to <c>true</c>, the writer will write the xml headers (?xml and !DOCTYPE).</param>
        </member>
        <member name="P:OxyPlot.SvgWriter.IsDocument">
            <summary>
            Gets or sets a value indicating whether this writer should produce a stand-alone document.
            </summary>
        </member>
        <member name="P:OxyPlot.SvgWriter.NumberFormat">
            <summary>
            Gets or sets the number format.
            </summary>
            <value>The number format.</value>
        </member>
        <member name="M:OxyPlot.SvgWriter.Close">
            <summary>
            Closes the svg document.
            </summary>
        </member>
        <member name="M:OxyPlot.SvgWriter.Complete">
            <summary>
            Writes the end of the document.
            </summary>
        </member>
        <member name="M:OxyPlot.SvgWriter.CreateStyle(OxyPlot.OxyColor,OxyPlot.OxyColor,System.Double,System.Double[],OxyPlot.LineJoin)">
            <summary>
            Creates a style.
            </summary>
            <param name="fill">The fill color.</param>
            <param name="stroke">The stroke color.</param>
            <param name="thickness">The stroke thickness (in user units).</param>
            <param name="dashArray">The line dash array.</param>
            <param name="lineJoin">The line join type.</param>
            <returns>A style string.</returns>
        </member>
        <member name="M:OxyPlot.SvgWriter.WriteEllipse(System.Double,System.Double,System.Double,System.Double,System.String,OxyPlot.EdgeRenderingMode)">
            <summary>
            Writes an ellipse.
            </summary>
            <param name="x">The x-coordinate of the center.</param>
            <param name="y">The y-coordinate of the center.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="style">The style.</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
        </member>
        <member name="M:OxyPlot.SvgWriter.BeginClip(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets a clipping rectangle.
            </summary>
            <param name="x">The x coordinate of the clipping rectangle.</param>
            <param name="y">The y coordinate of the clipping rectangle.</param>
            <param name="width">The width of the clipping rectangle.</param>
            <param name="height">The height of the clipping rectangle.</param>
        </member>
        <member name="M:OxyPlot.SvgWriter.EndClip">
            <summary>
            Resets the clipping rectangle.
            </summary>
        </member>
        <member name="M:OxyPlot.SvgWriter.WriteImage(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,OxyPlot.OxyImage)">
            <summary>
            Writes a portion of the specified image.
            </summary>
            <param name="srcX">The x-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcY">The y-coordinate of the upper-left corner of the portion of the source image to draw.</param>
            <param name="srcWidth">Width of the portion of the source image to draw.</param>
            <param name="srcHeight">Height of the portion of the source image to draw.</param>
            <param name="destX">The destination x-coordinate.</param>
            <param name="destY">The destination y-coordinate.</param>
            <param name="destWidth">Width of the destination rectangle.</param>
            <param name="destHeight">Height of the destination rectangle.</param>
            <param name="image">The image.</param>
        </member>
        <member name="M:OxyPlot.SvgWriter.WriteImage(System.Double,System.Double,System.Double,System.Double,OxyPlot.OxyImage)">
            <summary>
            Writes the specified image.
            </summary>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
            <param name="width">The width of the image.</param>
            <param name="height">The height of the image.</param>
            <param name="image">The image.</param>
        </member>
        <member name="M:OxyPlot.SvgWriter.WriteLine(OxyPlot.ScreenPoint,OxyPlot.ScreenPoint,System.String,OxyPlot.EdgeRenderingMode)">
            <summary>
            Writes a line.
            </summary>
            <param name="p1">The first point.</param>
            <param name="p2">The second point.</param>
            <param name="style">The style.</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
        </member>
        <member name="M:OxyPlot.SvgWriter.WritePolygon(System.Collections.Generic.IEnumerable{OxyPlot.ScreenPoint},System.String,OxyPlot.EdgeRenderingMode)">
            <summary>
            Writes a polygon.
            </summary>
            <param name="points">The points.</param>
            <param name="style">The style.</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
        </member>
        <member name="M:OxyPlot.SvgWriter.WritePolyline(System.Collections.Generic.IEnumerable{OxyPlot.ScreenPoint},System.String,OxyPlot.EdgeRenderingMode)">
            <summary>
            Writes a polyline.
            </summary>
            <param name="pts">The points.</param>
            <param name="style">The style.</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
        </member>
        <member name="M:OxyPlot.SvgWriter.WriteRectangle(System.Double,System.Double,System.Double,System.Double,System.String,OxyPlot.EdgeRenderingMode)">
            <summary>
            Writes a rectangle.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
            <param name="style">The style.</param>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
        </member>
        <member name="M:OxyPlot.SvgWriter.WriteText(OxyPlot.ScreenPoint,System.String,OxyPlot.OxyColor,System.String,System.Double,System.Double,System.Double,OxyPlot.HorizontalAlignment,OxyPlot.VerticalAlignment)">
            <summary>
            Writes text.
            </summary>
            <param name="position">The position.</param>
            <param name="text">The text.</param>
            <param name="fill">The text color.</param>
            <param name="fontFamily">The font family.</param>
            <param name="fontSize">The font size (in user units).</param>
            <param name="fontWeight">The font weight.</param>
            <param name="rotate">The rotation angle.</param>
            <param name="halign">The horizontal alignment.</param>
            <param name="valign">The vertical alignment.</param>
        </member>
        <member name="M:OxyPlot.SvgWriter.ColorToString(OxyPlot.OxyColor)">
            <summary>
            Converts a color to a svg color string.
            </summary>
            <param name="color">The color.</param>
            <returns>The color string.</returns>
        </member>
        <member name="M:OxyPlot.SvgWriter.WriteAttributeString(System.String,System.Double)">
            <summary>
            Writes an double attribute.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:OxyPlot.SvgWriter.WriteEdgeRenderingModeAttribute(OxyPlot.EdgeRenderingMode)">
            <summary>
            Writes the edge rendering mode attribute if necessary.
            </summary>
            <param name="edgeRenderingMode">The edge rendering mode.</param>
        </member>
        <member name="M:OxyPlot.SvgWriter.GetAutoValue(System.Double,System.String)">
            <summary>
            Converts a value to a string or to the specified "auto" string if the value is NaN.
            </summary>
            <param name="value">The value.</param>
            <param name="auto">The string to return if value is NaN.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:OxyPlot.SvgWriter.PointsToString(System.Collections.Generic.IEnumerable{OxyPlot.ScreenPoint})">
            <summary>
            Converts a list of points to a string.
            </summary>
            <param name="points">The points.</param>
            <returns>A string.</returns>
        </member>
        <member name="M:OxyPlot.SvgWriter.WriteHeader(System.Double,System.Double)">
            <summary>
            Writes the header.
            </summary>
            <param name="width">The width.</param>
            <param name="height">The height.</param>
        </member>
        <member name="T:OxyPlot.ArrayBuilder">
            <summary>
            Provides functionality to build arrays.
            </summary>
        </member>
        <member name="M:OxyPlot.ArrayBuilder.CreateVector(System.Double,System.Double,System.Int32)">
            <summary>
            Creates a vector.
            </summary>
            <param name="x0">The first value.</param>
            <param name="x1">The last value.</param>
            <param name="n">The number of steps.</param>
            <returns>A vector.</returns>
        </member>
        <member name="M:OxyPlot.ArrayBuilder.CreateVector(System.Double,System.Double,System.Double)">
            <summary>
            Creates a vector.
            </summary>
            <param name="x0">The first value.</param>
            <param name="x1">The last value.</param>
            <param name="dx">The step size.</param>
            <returns>A vector.</returns>
        </member>
        <member name="M:OxyPlot.ArrayBuilder.Evaluate(System.Func{System.Double,System.Double,System.Double},System.Double[],System.Double[])">
            <summary>
            Evaluates the specified function.
            </summary>
            <param name="f">The function.</param>
            <param name="x">The x values.</param>
            <param name="y">The y values.</param>
            <returns>Array of evaluations. The value of f(x_i,y_j) will be placed at index [i, j].</returns>
        </member>
        <member name="M:OxyPlot.ArrayBuilder.Fill(System.Double[],System.Double)">
            <summary>
            Fills the array with the specified value.
            </summary>
            <param name="array">The array to fill.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:OxyPlot.ArrayBuilder.Fill2D(System.Double[0:,0:],System.Double)">
            <summary>
            Fills the two-dimensional array with the specified value.
            </summary>
            <param name="array">The two-dimensional array.</param>
            <param name="value">The value.</param>
        </member>
        <member name="T:OxyPlot.ArrayExtensions">
            <summary>
            Provides useful extension methods for arrays.
            </summary>
        </member>
        <member name="M:OxyPlot.ArrayExtensions.MaxOrDefault(System.Collections.Generic.IEnumerable{System.Double},System.Double)">
            <summary>
            Finds the maximum value in the sequence, or returns a default value if the sequence is empty.
            </summary>
            <param name="sequence">The sequence.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The maximum value of the sequence, or the default value if the sequency is empty.</returns>
        </member>
        <member name="M:OxyPlot.ArrayExtensions.MinOrDefault(System.Collections.Generic.IEnumerable{System.Double},System.Double)">
            <summary>
            Finds the minimum value in the sequence, or returns a default value if the sequence is empty.
            </summary>
            <param name="sequence">The sequence.</param>
            <param name="defaultValue">The default value.</param>
            <returns>The minimum value of the sequence, or the default value if the sequency is empty.</returns>
        </member>
        <member name="M:OxyPlot.ArrayExtensions.Max2D(System.Double[0:,0:])">
            <summary>
            Finds the maximum value in the specified 2D array (NaN values not included).
            </summary>
            <param name="array">The array.</param>
            <returns>The maximum value.</returns>
        </member>
        <member name="M:OxyPlot.ArrayExtensions.Min2D(System.Double[0:,0:],System.Boolean)">
            <summary>
            Finds the minimum value in the specified 2D array.
            </summary>
            <param name="array">The array.</param>
            <param name="excludeNaN">Exclude NaN values if set to <c>true</c>.</param>
            <returns>The minimum value.</returns>
        </member>
        <member name="T:OxyPlot.BinaryReaderExtensions">
            <summary>
            Provides extension methods to the <see cref="T:System.IO.BinaryReader" />.
            </summary>
        </member>
        <member name="M:OxyPlot.BinaryReaderExtensions.ReadString(System.IO.BinaryReader,System.Int32,System.Text.Encoding)">
            <summary>
            Reads a string of the specified length (in bytes).
            </summary>
            <param name="r">The reader.</param>
            <param name="length">The length.</param>
            <param name="encoding">The encoding.</param>
            <returns>The string.</returns>
        </member>
        <member name="M:OxyPlot.BinaryReaderExtensions.ReadUInt32(System.IO.BinaryReader,System.Boolean)">
            <summary>
            Reads an unsigned 32-bit integer.
            </summary>
            <param name="r">The reader.</param>
            <param name="isLittleEndian">Read as little endian (Intel convention) if set to <c>true</c>.</param>
            <returns>The unsigned integer.</returns>
        </member>
        <member name="M:OxyPlot.BinaryReaderExtensions.ReadInt32(System.IO.BinaryReader,System.Boolean)">
            <summary>
            Reads a signed 32-bit integer.
            </summary>
            <param name="r">The reader.</param>
            <param name="isLittleEndian">Read as little endian (Intel convention) if set to <c>true</c>.</param>
            <returns>The signed integer.</returns>
        </member>
        <member name="M:OxyPlot.BinaryReaderExtensions.ReadUInt16(System.IO.BinaryReader,System.Boolean)">
            <summary>
            Reads an unsigned 16-bit integer.
            </summary>
            <param name="r">The reader.</param>
            <param name="isLittleEndian">Read as little endian (Intel convention) if set to <c>true</c>.</param>
            <returns>The unsigned integer.</returns>
        </member>
        <member name="M:OxyPlot.BinaryReaderExtensions.ReadDouble(System.IO.BinaryReader,System.Boolean)">
            <summary>
            Reads an 64-bit floating point value.
            </summary>
            <param name="r">The reader.</param>
            <param name="isLittleEndian">Read as little endian (Intel convention) if set to <c>true</c>.</param>
            <returns>The floating point number.</returns>
        </member>
        <member name="M:OxyPlot.BinaryReaderExtensions.ReadUInt32Array(System.IO.BinaryReader,System.Int32,System.Boolean)">
            <summary>
            Reads an array of unsigned 32-bit integers.
            </summary>
            <param name="r">The reader.</param>
            <param name="count">The number of values to read.</param>
            <param name="isLittleEndian">Read as little endian (Intel convention) if set to <c>true</c>.</param>
            <returns>The unsigned integer array.</returns>
        </member>
        <member name="M:OxyPlot.BinaryReaderExtensions.ReadUInt16Array(System.IO.BinaryReader,System.Int32,System.Boolean)">
            <summary>
            Reads an array of unsigned 16-bit integers.
            </summary>
            <param name="r">The reader.</param>
            <param name="count">The number of values to read.</param>
            <param name="isLittleEndian">Read as little endian (Intel convention) if set to <c>true</c>.</param>
            <returns>The unsigned integer array.</returns>
        </member>
        <member name="M:OxyPlot.BinaryReaderExtensions.ReadBigEndianUInt32(System.IO.BinaryReader)">
            <summary>
            Reads a big endian (Motorola convention) unsigned 32-bit integer.
            </summary>
            <param name="r">The reader.</param>
            <returns>The unsigned integer.</returns>
        </member>
        <member name="M:OxyPlot.BinaryReaderExtensions.ReadBigEndianInt32(System.IO.BinaryReader)">
            <summary>
            Reads a big endian (Motorola convention) signed 32-bit integer.
            </summary>
            <param name="r">The reader.</param>
            <returns>The signed integer.</returns>
        </member>
        <member name="M:OxyPlot.BinaryReaderExtensions.ReadBigEndianUInt16(System.IO.BinaryReader)">
            <summary>
            Reads a big endian (Motorola convention) unsigned 16-bit integer.
            </summary>
            <param name="r">The reader.</param>
            <returns>The unsigned integer.</returns>
        </member>
        <member name="M:OxyPlot.BinaryReaderExtensions.ReadBigEndianDouble(System.IO.BinaryReader)">
            <summary>
            Reads a big endian (Motorola convention) 64-bit floating point number.
            </summary>
            <param name="r">The reader.</param>
            <returns>A <see cref="T:System.Double" />.</returns>
        </member>
        <member name="T:OxyPlot.BinningOutlierMode">
            <summary>
            Specifies the behaviour for handling elements which cannot be assigned to any bin.
            </summary>
        </member>
        <member name="F:OxyPlot.BinningOutlierMode.RejectOutliers">
            <summary>
            Throws an <see cref="T:System.ArgumentOutOfRangeException"/> if any element cannot be assigned to any bin.
            </summary>
        </member>
        <member name="F:OxyPlot.BinningOutlierMode.IgnoreOutliers">
            <summary>
            Counts outliers when computing statistics.
            </summary>
        </member>
        <member name="F:OxyPlot.BinningOutlierMode.CountOutliers">
            <summary>
            Ignores outliers when computing statistics.
            </summary>
        </member>
        <member name="T:OxyPlot.BinningIntervalType">
            <summary>
            Specifies the type of bounds used for binning.
            </summary>
        </member>
        <member name="F:OxyPlot.BinningIntervalType.InclusiveLowerBound">
            <summary>
            Bins have an incusive lower bound.
            </summary>
        </member>
        <member name="F:OxyPlot.BinningIntervalType.InclusiveUpperBound">
            <summary>
            Bins have an incusive upper bound.
            </summary>
        </member>
        <member name="T:OxyPlot.BinningExtremeValueMode">
            <summary>
            Specifies the behaviour for handing extreme values which would be excluded by an exclusive bound.
            </summary>
        </member>
        <member name="F:OxyPlot.BinningExtremeValueMode.ExcludeExtremeValues">
            <summary>
            Extreme values should be excluded if they do not fall on an inclusive bound.
            </summary>
        </member>
        <member name="F:OxyPlot.BinningExtremeValueMode.IncludeExtremeValues">
            <summary>
            Extreme values should always be included.
            </summary>
        </member>
        <member name="T:OxyPlot.BinningOptions">
            <summary>
            Represents options for methods that perform binning.
            </summary>
        </member>
        <member name="M:OxyPlot.BinningOptions.#ctor(OxyPlot.BinningOutlierMode,OxyPlot.BinningIntervalType,OxyPlot.BinningExtremeValueMode)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.BinningOptions"/> class.
            </summary>
            <param name="outlierMode">Specifies the behaviour for handling elements which cannot be assigned to any bin.</param>
            <param name="intervalType">The type of interval that each bin represents.</param>
            <param name="extremeValuesMode">Specifies whether extreme values should be assigned to the corresponding extreme bin.</param>
        </member>
        <member name="P:OxyPlot.BinningOptions.OutlierMode">
            <summary>
            Gets a value specififying the behaviour for handling elements which cannot be assigned to any bin.
            </summary>
        </member>
        <member name="P:OxyPlot.BinningOptions.IntervalType">
            <summary>
            Gets a value specififying the type of interval that each bin represents.
            </summary>
        </member>
        <member name="P:OxyPlot.BinningOptions.ExtremeValuesMode">
            <summary>
            Gets a value specififying the behaviour for handing extreme values which would be excluded by an exclusive bound.
            </summary>
        </member>
        <member name="T:OxyPlot.ComparerHelper">
            <summary>
            Provides functionality to create custom comparers.
            </summary>
        </member>
        <member name="M:OxyPlot.ComparerHelper.CreateComparer``1(System.Comparison{``0})">
            <summary>
            Creates a <see cref="T:System.Collections.Generic.IComparer`1"/> based on the specified comparison.
            </summary>
            <typeparam name="T">The type of the elements to compare.</typeparam>
            <param name="comparison">The delegate used to compare elements.</param>
            <returns>The created comparer.</returns>
        </member>
        <member name="T:OxyPlot.ComparerHelper.ComparisonComparer`1">
            <summary>
            A comparer that uses a delegate to compare elements.
            </summary>
            <typeparam name="T">The type of the elements to compare.</typeparam>
        </member>
        <member name="F:OxyPlot.ComparerHelper.ComparisonComparer`1.comparison">
            <summary>
            The delegate used to compare elements.
            </summary>
        </member>
        <member name="M:OxyPlot.ComparerHelper.ComparisonComparer`1.#ctor(System.Comparison{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.ComparerHelper.ComparisonComparer`1" /> class.
            </summary>
            <param name="comparison">The delegate used to compare elements.</param>
        </member>
        <member name="M:OxyPlot.ComparerHelper.ComparisonComparer`1.Compare(`0,`0)">
            <summary>
            Compares two elements.
            </summary>
            <param name="x">The first element to compare.</param>
            <param name="y">The second element to compare.</param>
            <returns>A value indicating whether <paramref name="x"/> is less than, equal to, or greater than <paramref name="y"/>.</returns>
        </member>
        <member name="T:OxyPlot.Conrec">
            <summary>
            Provides functionality to create contours from a triangular mesh.
            </summary>
            <remarks><para>
            Ported from C / Fortran code by Paul Bourke.
            See <a href="http://paulbourke.net/papers/conrec/">Conrec</a> for
            full description of code and the original source.
            </para>
            <para>
            Contouring aids in visualizing three dimensional surfaces on a two dimensional
            medium (on paper or in this case a computer graphics screen). Two most common
            applications are displaying topological features of an area on a map or the air
            pressure on a weather map. In all cases some parameter is plotted as a function
            of two variables, the longitude and latitude or x and y axis. One problem with
            computer contouring is the process is usually CPU intensive and the algorithms
            often use advanced mathematical techniques making them susceptible to error.
            </para></remarks>
        </member>
        <member name="T:OxyPlot.Conrec.RendererDelegate">
            <summary>
            Renderer delegate
            </summary>
            <param name="x1">Start point x-coordinate</param>
            <param name="y1">Start point y-coordinate</param>
            <param name="x2">End point x-coordinate</param>
            <param name="y2">End point y-coordinate</param>
            <param name="z">Contour level</param>
        </member>
        <member name="M:OxyPlot.Conrec.Contour(System.Double[0:,0:],System.Double[],System.Double[],System.Double[],OxyPlot.Conrec.RendererDelegate)">
            <summary>
            Contour is a contouring subroutine for rectangularily spaced data
            It emits calls to a line drawing subroutine supplied by the user
            which draws a contour map corresponding to data on a randomly
            spaced rectangular grid. The coordinates emitted are in the same
            units given in the x() and y() arrays.
            Any number of contour levels may be specified but they must be
            in order of increasing value.
            </summary>
            <param name="d">Matrix of data to contour.</param>
            <param name="x">Data matrix column coordinates.</param>
            <param name="y">Data matrix row coordinates.</param>
            <param name="z">Contour levels in increasing order.</param>
            <param name="renderer">The renderer.</param>
        </member>
        <member name="T:OxyPlot.FractionHelper">
            <summary>
            Provides functionality to generate fraction strings from double values.
            </summary>
            <remarks>Examples: "3/4", "PI/2"</remarks>
        </member>
        <member name="M:OxyPlot.FractionHelper.ConvertToFractionString(System.Double,System.Double,System.String,System.Double,System.IFormatProvider,System.String)">
            <summary>
            Converts a double to a fraction string.
            </summary>
            <param name="value">The value.</param>
            <param name="unit">The unit.</param>
            <param name="unitSymbol">The unit symbol.</param>
            <param name="eps">The tolerance.</param>
            <param name="formatProvider">The format Provider.</param>
            <param name="formatString">The format string.</param>
            <returns>The convert to fraction string.</returns>
        </member>
        <member name="T:OxyPlot.HashCodeBuilder">
            <summary>
            Provides functionality to calculate hash codes.
            </summary>
        </member>
        <member name="M:OxyPlot.HashCodeBuilder.GetHashCode(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Calculates a hash code for the specified sequence of items.
            </summary>
            <param name="items">A sequence of items.</param>
            <returns>A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table.</returns>
        </member>
        <member name="T:OxyPlot.Utilities.Helpers">
            <summary>
            Provides general helper functions.
            </summary>
        </member>
        <member name="M:OxyPlot.Utilities.Helpers.Swap``1(``0@,``0@)">
            <summary>
            Switches the values of two specified variables.
            </summary>
            <typeparam name="T">The type of the variables.</typeparam>
            <param name="value">The first value.</param>
            <param name="other">The second value.</param>
        </member>
        <member name="T:OxyPlot.HistogramHelpers">
            <summary>
            Provides methods to collect data samples into bins for use with a <see cref="T:OxyPlot.Series.HistogramSeries" />.
            </summary>
        </member>
        <member name="M:OxyPlot.HistogramHelpers.CreateUniformBins(System.Double,System.Double,System.Int32)">
            <summary>
            Generates a list of <paramref name="binCount"/> bin breaks, uniformly distributed between <paramref name="start"/> and <paramref name="end"/>.
            </summary>
            <param name="start">The inclusive lower-bound of the first bin.</param>
            <param name="end">The exclusive upper-bound of the last bin, which must be strictly greater than <paramred name="start" />.</param>
            <param name="binCount">The number of bins to create.</param>
            <returns>An <see cref="T:System.Collections.Generic.List`1"/> containing the breaks between bins of uniform size.</returns>
        </member>
        <member name="M:OxyPlot.HistogramHelpers.Collect(System.Collections.Generic.IEnumerable{System.Double},System.Collections.Generic.IEnumerable{System.Double},OxyPlot.BinningOptions)">
            <summary>
            Collects samples into tightly packed bins (<see cref="T:OxyPlot.Series.HistogramItem" />) defined by <paramref name="binBreaks"/>.
            </summary>
            <param name="samples">The samples to collect into bins.</param>
            <param name="binBreaks">The start and end values for the bins.</param>
            <param name="binningOptions">The binning options to use.</param>
            <returns>A list of <see cref="T:OxyPlot.Series.HistogramItem" /> corresponding to the generated bins with areas computed from the proportion of samples placed within.</returns>
        </member>
        <member name="T:OxyPlot.ListBuilder`1">
            <summary>
            Provides functionality to build a list by reflecting specified properties on a sequence.
            </summary>
            <typeparam name="T">The target list item type.</typeparam>
            <remarks>This class uses reflection.</remarks>
        </member>
        <member name="F:OxyPlot.ListBuilder`1.properties">
            <summary>
            The properties.
            </summary>
        </member>
        <member name="F:OxyPlot.ListBuilder`1.defaultValues">
            <summary>
            The default values
            </summary>
        </member>
        <member name="M:OxyPlot.ListBuilder`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.ListBuilder`1" /> class.
            </summary>
        </member>
        <member name="M:OxyPlot.ListBuilder`1.Add``1(System.String,``0)">
            <summary>
            Adds a property.
            </summary>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <param name="propertyName">Name of the property.</param>
            <param name="defaultValue">The default value.</param>
        </member>
        <member name="M:OxyPlot.ListBuilder`1.FillT(System.Collections.Generic.IList{`0},System.Collections.IEnumerable,System.Func{System.Collections.Generic.IList{System.Object},`0})">
            <summary>
            Fills the specified target list.
            </summary>
            <param name="target">The target.</param>
            <param name="source">The source.</param>
            <param name="instanceCreator">The instance creator.</param>
        </member>
        <member name="M:OxyPlot.ListBuilder`1.Fill(System.Collections.IList,System.Collections.IEnumerable,System.Func{System.Collections.Generic.IList{System.Object},System.Object})">
            <summary>
            Fills the specified target list.
            </summary>
            <param name="target">The target.</param>
            <param name="source">The source list.</param>
            <param name="instanceCreator">The instance creator.</param>
        </member>
        <member name="T:OxyPlot.ReflectionPath">
            <summary>
            Provides functionality to reflect a path of properties.
            </summary>
        </member>
        <member name="F:OxyPlot.ReflectionPath.items">
            <summary>
            The path items.
            </summary>
        </member>
        <member name="F:OxyPlot.ReflectionPath.infos">
            <summary>
            The property metadata.
            </summary>
        </member>
        <member name="F:OxyPlot.ReflectionPath.reflectedTypes">
            <summary>
            The reflected types.
            </summary>
        </member>
        <member name="M:OxyPlot.ReflectionPath.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.ReflectionPath"/> class.
            </summary>
            <param name="path">The reflection path.</param>
        </member>
        <member name="M:OxyPlot.ReflectionPath.GetValue(System.Object)">
            <summary>
            Gets the value for the specified instance.
            </summary>
            <param name="instance">The instance.</param>
            <returns>
            The value.
            </returns>
            <exception cref="T:System.InvalidOperationException">Could not find property.</exception>
        </member>
        <member name="M:OxyPlot.ReflectionPath.TryGetValue(System.Object,System.Object@)">
            <summary>
            Tries to get the value for the specified instance.
            </summary>
            <param name="instance">The instance.</param>
            <param name="result">The result.</param>
            <returns>
            <c>true</c> if the value was found.
            </returns>
        </member>
        <member name="T:OxyPlot.StreamExtensions">
            <summary>
            Provides useful extension methods for streams.
            </summary>
        </member>
        <member name="M:OxyPlot.StreamExtensions.CopyTo(System.IO.Stream,System.IO.Stream)">
            <summary>
            Copies to the specified stream.
            </summary>
            <param name="input">The input stream.</param>
            <param name="output">The output stream.</param>
        </member>
        <member name="T:OxyPlot.StringHelper">
            <summary>
            Provides extended string formatting functionality.
            </summary>
        </member>
        <member name="F:OxyPlot.StringHelper.FormattingExpression">
            <summary>
            The formatting expression.
            </summary>
        </member>
        <member name="M:OxyPlot.StringHelper.Format(System.IFormatProvider,System.String,System.Object,System.Object[])">
            <summary>
            Replaces the format items in the specified string.
            </summary>
            <param name="provider">The culture specific format provider.</param>
            <param name="formatString">The format string.</param>
            <param name="item">The item.</param>
            <param name="values">The values.</param>
            <returns>The formatted string.</returns>
            <remarks>The format string and values works as in <c>String.Format</c>.
            In addition, you can format properties of the item object by using the syntax
            <c>{PropertyName:Formatstring}</c>.
            E.g. if you have a "Value" property in your item's class, use <c>"{Value:0.00}"</c> to output the value with two digits.
            Note that this formatting is using reflection and does not have the same performance as string.Format.</remarks>
        </member>
        <member name="M:OxyPlot.StringHelper.CreateValidFormatString(System.String)">
            <summary>
            Creates a valid format string on the form "{0:###}".
            </summary>
            <param name="input">The input format string.</param>
            <returns>The corrected format string.</returns>
        </member>
        <member name="M:OxyPlot.StringHelper.Format(System.Collections.IEnumerable,System.String,System.String,System.IFormatProvider)">
            <summary>
            Formats each item in a sequence by the specified format string and property.
            </summary>
            <param name="source">The source target.</param>
            <param name="propertyName">The property name.</param>
            <param name="formatString">The format string. The format argument {0} can be used for the value of the property in each element of the sequence.</param>
            <param name="provider">The format provider.</param>
            <exception cref="T:System.InvalidOperationException">Could not find property.</exception>
        </member>
        <member name="M:OxyPlot.StringHelper.SplitLines(System.String)">
            <summary>
            Splits the given text into separate lines.
            </summary>
            <param name="text">The text to split.</param>
            <returns>An array of the individual lines.</returns>
        </member>
        <member name="T:OxyPlot.TypeExtensions">
            <summary>
            Provides extension methods for types.
            </summary>
        </member>
        <member name="M:OxyPlot.TypeExtensions.GetRuntimeProperty(System.Type,System.String)">
            <summary>
            Retrieves an object that represents a specified property.
            </summary>
            <param name="type">The type that contains the property.</param>
            <param name="name">The name of the property.</param>
            <returns>An object that represents the specified property, or null if the property is not found.</returns>
        </member>
        <member name="T:OxyPlot.XmlWriterBase">
            <summary>
            Provides an abstract base class for exporters that write xml.
            </summary>
        </member>
        <member name="F:OxyPlot.XmlWriterBase.w">
            <summary>
            The xml writer.
            </summary>
        </member>
        <member name="F:OxyPlot.XmlWriterBase.disposed">
            <summary>
            The disposed flag.
            </summary>
        </member>
        <member name="M:OxyPlot.XmlWriterBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref = "T:OxyPlot.XmlWriterBase" /> class.
            </summary>
        </member>
        <member name="M:OxyPlot.XmlWriterBase.#ctor(System.IO.Stream)">
            <summary>
            Initializes a new instance of the <see cref="T:OxyPlot.XmlWriterBase" /> class.
            </summary>
            <param name="stream">The stream.</param>
        </member>
        <member name="M:OxyPlot.XmlWriterBase.Close">
            <summary>
            Closes this instance.
            </summary>
        </member>
        <member name="M:OxyPlot.XmlWriterBase.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:OxyPlot.XmlWriterBase.Flush">
            <summary>
            Flushes this instance.
            </summary>
        </member>
        <member name="M:OxyPlot.XmlWriterBase.WriteAttributeString(System.String,System.String)">
            <summary>
            Writes an attribute string.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:OxyPlot.XmlWriterBase.WriteAttributeString(System.String,System.String,System.String,System.String)">
            <summary>
            Writes an attribute string with a prefix.
            </summary>
            <param name="prefix">The prefix.</param>
            <param name="name">The name.</param>
            <param name="ns">The constant.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:OxyPlot.XmlWriterBase.WriteDocType(System.String,System.String,System.String,System.String)">
            <summary>
            Writes the doc type.
            </summary>
            <param name="name">The name of the DOCTYPE. This must be non-empty.</param>
            <param name="pubid">If non-<c>null</c> it also writes PUBLIC "pubid" "sysid" where pubid and sysid are replaced with the value of the given arguments.</param>
            <param name="sysid">If pubid is <c>null</c> and sysid is non-<c>null</c> it writes SYSTEM "sysid" where sysid is replaced with the value of this argument.</param>
            <param name="subset">If non-<c>null</c> it writes [subset] where subset is replaced with the value of this argument.</param>
        </member>
        <member name="M:OxyPlot.XmlWriterBase.WriteElementString(System.String,System.String)">
            <summary>
            Writes an element string.
            </summary>
            <param name="name">The name.</param>
            <param name="text">The text.</param>
        </member>
        <member name="M:OxyPlot.XmlWriterBase.WriteEndDocument">
            <summary>
            Writes the end document.
            </summary>
        </member>
        <member name="M:OxyPlot.XmlWriterBase.WriteEndElement">
            <summary>
            Writes an element end tag.
            </summary>
        </member>
        <member name="M:OxyPlot.XmlWriterBase.WriteRaw(System.String)">
            <summary>
            Writes raw text.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:OxyPlot.XmlWriterBase.WriteStartDocument(System.Boolean)">
            <summary>
            Writes the start document.
            </summary>
            <param name="standalone">The standalone.</param>
        </member>
        <member name="M:OxyPlot.XmlWriterBase.WriteStartElement(System.String)">
            <summary>
            Writes an element start tag.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:OxyPlot.XmlWriterBase.WriteStartElement(System.String,System.String)">
            <summary>
            Writes an element tag with the specified name and namespace.
            </summary>
            <param name="name">The name.</param>
            <param name="ns">The ns.</param>
        </member>
        <member name="M:OxyPlot.XmlWriterBase.WriteString(System.String)">
            <summary>
            Writes a string.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:OxyPlot.XmlWriterBase.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
    </members>
</doc>
