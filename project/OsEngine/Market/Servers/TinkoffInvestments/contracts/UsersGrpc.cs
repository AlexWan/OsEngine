// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: users.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Tinkoff.InvestApi.V1 {
  /// <summary>
  ///Сервис предназначен для получения: &lt;/br> **1**.
  ///списка счетов пользователя; &lt;/br> **2**. маржинальных показателей по счёту.
  /// </summary>
  public static partial class UsersService
  {
    static readonly string __ServiceName = "tinkoff.public.invest.api.contract.v1.UsersService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.GetAccountsRequest> __Marshaller_tinkoff_public_invest_api_contract_v1_GetAccountsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.GetAccountsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.GetAccountsResponse> __Marshaller_tinkoff_public_invest_api_contract_v1_GetAccountsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.GetAccountsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.GetMarginAttributesRequest> __Marshaller_tinkoff_public_invest_api_contract_v1_GetMarginAttributesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.GetMarginAttributesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.GetMarginAttributesResponse> __Marshaller_tinkoff_public_invest_api_contract_v1_GetMarginAttributesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.GetMarginAttributesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.GetUserTariffRequest> __Marshaller_tinkoff_public_invest_api_contract_v1_GetUserTariffRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.GetUserTariffRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.GetUserTariffResponse> __Marshaller_tinkoff_public_invest_api_contract_v1_GetUserTariffResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.GetUserTariffResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.GetInfoRequest> __Marshaller_tinkoff_public_invest_api_contract_v1_GetInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.GetInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Tinkoff.InvestApi.V1.GetInfoResponse> __Marshaller_tinkoff_public_invest_api_contract_v1_GetInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Tinkoff.InvestApi.V1.GetInfoResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tinkoff.InvestApi.V1.GetAccountsRequest, global::Tinkoff.InvestApi.V1.GetAccountsResponse> __Method_GetAccounts = new grpc::Method<global::Tinkoff.InvestApi.V1.GetAccountsRequest, global::Tinkoff.InvestApi.V1.GetAccountsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAccounts",
        __Marshaller_tinkoff_public_invest_api_contract_v1_GetAccountsRequest,
        __Marshaller_tinkoff_public_invest_api_contract_v1_GetAccountsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tinkoff.InvestApi.V1.GetMarginAttributesRequest, global::Tinkoff.InvestApi.V1.GetMarginAttributesResponse> __Method_GetMarginAttributes = new grpc::Method<global::Tinkoff.InvestApi.V1.GetMarginAttributesRequest, global::Tinkoff.InvestApi.V1.GetMarginAttributesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetMarginAttributes",
        __Marshaller_tinkoff_public_invest_api_contract_v1_GetMarginAttributesRequest,
        __Marshaller_tinkoff_public_invest_api_contract_v1_GetMarginAttributesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tinkoff.InvestApi.V1.GetUserTariffRequest, global::Tinkoff.InvestApi.V1.GetUserTariffResponse> __Method_GetUserTariff = new grpc::Method<global::Tinkoff.InvestApi.V1.GetUserTariffRequest, global::Tinkoff.InvestApi.V1.GetUserTariffResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetUserTariff",
        __Marshaller_tinkoff_public_invest_api_contract_v1_GetUserTariffRequest,
        __Marshaller_tinkoff_public_invest_api_contract_v1_GetUserTariffResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Tinkoff.InvestApi.V1.GetInfoRequest, global::Tinkoff.InvestApi.V1.GetInfoResponse> __Method_GetInfo = new grpc::Method<global::Tinkoff.InvestApi.V1.GetInfoRequest, global::Tinkoff.InvestApi.V1.GetInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetInfo",
        __Marshaller_tinkoff_public_invest_api_contract_v1_GetInfoRequest,
        __Marshaller_tinkoff_public_invest_api_contract_v1_GetInfoResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Tinkoff.InvestApi.V1.UsersReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of UsersService</summary>
    [grpc::BindServiceMethod(typeof(UsersService), "BindService")]
    public abstract partial class UsersServiceBase
    {
      /// <summary>
      ///Метод получения счетов пользователя.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Tinkoff.InvestApi.V1.GetAccountsResponse> GetAccounts(global::Tinkoff.InvestApi.V1.GetAccountsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Расчёт маржинальных показателей по счёту.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Tinkoff.InvestApi.V1.GetMarginAttributesResponse> GetMarginAttributes(global::Tinkoff.InvestApi.V1.GetMarginAttributesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Запрос тарифа пользователя.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Tinkoff.InvestApi.V1.GetUserTariffResponse> GetUserTariff(global::Tinkoff.InvestApi.V1.GetUserTariffRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      /// <summary>
      ///Метод получения информации о пользователе.
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Tinkoff.InvestApi.V1.GetInfoResponse> GetInfo(global::Tinkoff.InvestApi.V1.GetInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for UsersService</summary>
    public partial class UsersServiceClient : grpc::ClientBase<UsersServiceClient>
    {
      /// <summary>Creates a new client for UsersService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public UsersServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for UsersService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public UsersServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected UsersServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected UsersServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      ///Метод получения счетов пользователя.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.GetAccountsResponse GetAccounts(global::Tinkoff.InvestApi.V1.GetAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccounts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод получения счетов пользователя.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.GetAccountsResponse GetAccounts(global::Tinkoff.InvestApi.V1.GetAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAccounts, null, options, request);
      }
      /// <summary>
      ///Метод получения счетов пользователя.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.GetAccountsResponse> GetAccountsAsync(global::Tinkoff.InvestApi.V1.GetAccountsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAccountsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод получения счетов пользователя.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.GetAccountsResponse> GetAccountsAsync(global::Tinkoff.InvestApi.V1.GetAccountsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAccounts, null, options, request);
      }
      /// <summary>
      ///Расчёт маржинальных показателей по счёту.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.GetMarginAttributesResponse GetMarginAttributes(global::Tinkoff.InvestApi.V1.GetMarginAttributesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMarginAttributes(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Расчёт маржинальных показателей по счёту.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.GetMarginAttributesResponse GetMarginAttributes(global::Tinkoff.InvestApi.V1.GetMarginAttributesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetMarginAttributes, null, options, request);
      }
      /// <summary>
      ///Расчёт маржинальных показателей по счёту.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.GetMarginAttributesResponse> GetMarginAttributesAsync(global::Tinkoff.InvestApi.V1.GetMarginAttributesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetMarginAttributesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Расчёт маржинальных показателей по счёту.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.GetMarginAttributesResponse> GetMarginAttributesAsync(global::Tinkoff.InvestApi.V1.GetMarginAttributesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetMarginAttributes, null, options, request);
      }
      /// <summary>
      ///Запрос тарифа пользователя.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.GetUserTariffResponse GetUserTariff(global::Tinkoff.InvestApi.V1.GetUserTariffRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserTariff(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Запрос тарифа пользователя.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.GetUserTariffResponse GetUserTariff(global::Tinkoff.InvestApi.V1.GetUserTariffRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetUserTariff, null, options, request);
      }
      /// <summary>
      ///Запрос тарифа пользователя.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.GetUserTariffResponse> GetUserTariffAsync(global::Tinkoff.InvestApi.V1.GetUserTariffRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetUserTariffAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Запрос тарифа пользователя.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.GetUserTariffResponse> GetUserTariffAsync(global::Tinkoff.InvestApi.V1.GetUserTariffRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetUserTariff, null, options, request);
      }
      /// <summary>
      ///Метод получения информации о пользователе.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.GetInfoResponse GetInfo(global::Tinkoff.InvestApi.V1.GetInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод получения информации о пользователе.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Tinkoff.InvestApi.V1.GetInfoResponse GetInfo(global::Tinkoff.InvestApi.V1.GetInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetInfo, null, options, request);
      }
      /// <summary>
      ///Метод получения информации о пользователе.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.GetInfoResponse> GetInfoAsync(global::Tinkoff.InvestApi.V1.GetInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      ///Метод получения информации о пользователе.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Tinkoff.InvestApi.V1.GetInfoResponse> GetInfoAsync(global::Tinkoff.InvestApi.V1.GetInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetInfo, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override UsersServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new UsersServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(UsersServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetAccounts, serviceImpl.GetAccounts)
          .AddMethod(__Method_GetMarginAttributes, serviceImpl.GetMarginAttributes)
          .AddMethod(__Method_GetUserTariff, serviceImpl.GetUserTariff)
          .AddMethod(__Method_GetInfo, serviceImpl.GetInfo).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, UsersServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetAccounts, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tinkoff.InvestApi.V1.GetAccountsRequest, global::Tinkoff.InvestApi.V1.GetAccountsResponse>(serviceImpl.GetAccounts));
      serviceBinder.AddMethod(__Method_GetMarginAttributes, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tinkoff.InvestApi.V1.GetMarginAttributesRequest, global::Tinkoff.InvestApi.V1.GetMarginAttributesResponse>(serviceImpl.GetMarginAttributes));
      serviceBinder.AddMethod(__Method_GetUserTariff, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tinkoff.InvestApi.V1.GetUserTariffRequest, global::Tinkoff.InvestApi.V1.GetUserTariffResponse>(serviceImpl.GetUserTariff));
      serviceBinder.AddMethod(__Method_GetInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Tinkoff.InvestApi.V1.GetInfoRequest, global::Tinkoff.InvestApi.V1.GetInfoResponse>(serviceImpl.GetInfo));
    }

  }
}
#endregion
