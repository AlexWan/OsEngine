// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: marketdata.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Tinkoff.InvestApi.V1 {

  /// <summary>Holder for reflection information generated from marketdata.proto</summary>
  public static partial class MarketdataReflection {

    #region Descriptor
    /// <summary>File descriptor for marketdata.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MarketdataReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBtYXJrZXRkYXRhLnByb3RvEiV0aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBp",
            "LmNvbnRyYWN0LnYxGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnByb3Rv",
            "Ggxjb21tb24ucHJvdG8aH2dvb2dsZS9hcGkvZmllbGRfYmVoYXZpb3IucHJv",
            "dG8i9AQKEU1hcmtldERhdGFSZXF1ZXN0EmMKGXN1YnNjcmliZV9jYW5kbGVz",
            "X3JlcXVlc3QYASABKAsyPi50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNv",
            "bnRyYWN0LnYxLlN1YnNjcmliZUNhbmRsZXNSZXF1ZXN0SAASaAocc3Vic2Ny",
            "aWJlX29yZGVyX2Jvb2tfcmVxdWVzdBgCIAEoCzJALnRpbmtvZmYucHVibGlj",
            "LmludmVzdC5hcGkuY29udHJhY3QudjEuU3Vic2NyaWJlT3JkZXJCb29rUmVx",
            "dWVzdEgAEmEKGHN1YnNjcmliZV90cmFkZXNfcmVxdWVzdBgDIAEoCzI9LnRp",
            "bmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuU3Vic2NyaWJl",
            "VHJhZGVzUmVxdWVzdEgAEl0KFnN1YnNjcmliZV9pbmZvX3JlcXVlc3QYBCAB",
            "KAsyOy50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlN1",
            "YnNjcmliZUluZm9SZXF1ZXN0SAASaAocc3Vic2NyaWJlX2xhc3RfcHJpY2Vf",
            "cmVxdWVzdBgFIAEoCzJALnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29u",
            "dHJhY3QudjEuU3Vic2NyaWJlTGFzdFByaWNlUmVxdWVzdEgAElkKFGdldF9t",
            "eV9zdWJzY3JpcHRpb25zGAYgASgLMjkudGlua29mZi5wdWJsaWMuaW52ZXN0",
            "LmFwaS5jb250cmFjdC52MS5HZXRNeVN1YnNjcmlwdGlvbnNIAEIJCgdwYXls",
            "b2FkIpQECiFNYXJrZXREYXRhU2VydmVyU2lkZVN0cmVhbVJlcXVlc3QSYQoZ",
            "c3Vic2NyaWJlX2NhbmRsZXNfcmVxdWVzdBgBIAEoCzI+LnRpbmtvZmYucHVi",
            "bGljLmludmVzdC5hcGkuY29udHJhY3QudjEuU3Vic2NyaWJlQ2FuZGxlc1Jl",
            "cXVlc3QSZgocc3Vic2NyaWJlX29yZGVyX2Jvb2tfcmVxdWVzdBgCIAEoCzJA",
            "LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuU3Vic2Ny",
            "aWJlT3JkZXJCb29rUmVxdWVzdBJfChhzdWJzY3JpYmVfdHJhZGVzX3JlcXVl",
            "c3QYAyABKAsyPS50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0",
            "LnYxLlN1YnNjcmliZVRyYWRlc1JlcXVlc3QSWwoWc3Vic2NyaWJlX2luZm9f",
            "cmVxdWVzdBgEIAEoCzI7LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29u",
            "dHJhY3QudjEuU3Vic2NyaWJlSW5mb1JlcXVlc3QSZgocc3Vic2NyaWJlX2xh",
            "c3RfcHJpY2VfcmVxdWVzdBgFIAEoCzJALnRpbmtvZmYucHVibGljLmludmVz",
            "dC5hcGkuY29udHJhY3QudjEuU3Vic2NyaWJlTGFzdFByaWNlUmVxdWVzdCLA",
            "BwoSTWFya2V0RGF0YVJlc3BvbnNlEmUKGnN1YnNjcmliZV9jYW5kbGVzX3Jl",
            "c3BvbnNlGAEgASgLMj8udGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250",
            "cmFjdC52MS5TdWJzY3JpYmVDYW5kbGVzUmVzcG9uc2VIABJqCh1zdWJzY3Jp",
            "YmVfb3JkZXJfYm9va19yZXNwb25zZRgCIAEoCzJBLnRpbmtvZmYucHVibGlj",
            "LmludmVzdC5hcGkuY29udHJhY3QudjEuU3Vic2NyaWJlT3JkZXJCb29rUmVz",
            "cG9uc2VIABJjChlzdWJzY3JpYmVfdHJhZGVzX3Jlc3BvbnNlGAMgASgLMj4u",
            "dGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5TdWJzY3Jp",
            "YmVUcmFkZXNSZXNwb25zZUgAEl8KF3N1YnNjcmliZV9pbmZvX3Jlc3BvbnNl",
            "GAQgASgLMjwudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52",
            "MS5TdWJzY3JpYmVJbmZvUmVzcG9uc2VIABI/CgZjYW5kbGUYBSABKAsyLS50",
            "aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLkNhbmRsZUgA",
            "Ej0KBXRyYWRlGAYgASgLMiwudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5j",
            "b250cmFjdC52MS5UcmFkZUgAEkUKCW9yZGVyYm9vaxgHIAEoCzIwLnRpbmtv",
            "ZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuT3JkZXJCb29rSAAS",
            "TgoOdHJhZGluZ19zdGF0dXMYCCABKAsyNC50aW5rb2ZmLnB1YmxpYy5pbnZl",
            "c3QuYXBpLmNvbnRyYWN0LnYxLlRyYWRpbmdTdGF0dXNIABI7CgRwaW5nGAkg",
            "ASgLMisudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5Q",
            "aW5nSAASagodc3Vic2NyaWJlX2xhc3RfcHJpY2VfcmVzcG9uc2UYCiABKAsy",
            "QS50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlN1YnNj",
            "cmliZUxhc3RQcmljZVJlc3BvbnNlSAASRgoKbGFzdF9wcmljZRgLIAEoCzIw",
            "LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuTGFzdFBy",
            "aWNlSABCCQoHcGF5bG9hZCLWAQoXU3Vic2NyaWJlQ2FuZGxlc1JlcXVlc3QS",
            "VgoTc3Vic2NyaXB0aW9uX2FjdGlvbhgBIAEoDjI5LnRpbmtvZmYucHVibGlj",
            "LmludmVzdC5hcGkuY29udHJhY3QudjEuU3Vic2NyaXB0aW9uQWN0aW9uEkwK",
            "C2luc3RydW1lbnRzGAIgAygLMjcudGlua29mZi5wdWJsaWMuaW52ZXN0LmFw",
            "aS5jb250cmFjdC52MS5DYW5kbGVJbnN0cnVtZW50EhUKDXdhaXRpbmdfY2xv",
            "c2UYAyABKAgiigEKEENhbmRsZUluc3RydW1lbnQSEAoEZmlnaRgBIAEoCUIC",
            "GAESTQoIaW50ZXJ2YWwYAiABKA4yOy50aW5rb2ZmLnB1YmxpYy5pbnZlc3Qu",
            "YXBpLmNvbnRyYWN0LnYxLlN1YnNjcmlwdGlvbkludGVydmFsEhUKDWluc3Ry",
            "dW1lbnRfaWQYAyABKAkiiQEKGFN1YnNjcmliZUNhbmRsZXNSZXNwb25zZRIT",
            "Cgt0cmFja2luZ19pZBgBIAEoCRJYChVjYW5kbGVzX3N1YnNjcmlwdGlvbnMY",
            "AiADKAsyOS50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYx",
            "LkNhbmRsZVN1YnNjcmlwdGlvbiKkAgoSQ2FuZGxlU3Vic2NyaXB0aW9uEgwK",
            "BGZpZ2kYASABKAkSTQoIaW50ZXJ2YWwYAiABKA4yOy50aW5rb2ZmLnB1Ymxp",
            "Yy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlN1YnNjcmlwdGlvbkludGVydmFs",
            "ElYKE3N1YnNjcmlwdGlvbl9zdGF0dXMYAyABKA4yOS50aW5rb2ZmLnB1Ymxp",
            "Yy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlN1YnNjcmlwdGlvblN0YXR1cxIW",
            "Cg5pbnN0cnVtZW50X3VpZBgEIAEoCRIVCg13YWl0aW5nX2Nsb3NlGAUgASgI",
            "EhEKCXN0cmVhbV9pZBgGIAEoCRIXCg9zdWJzY3JpcHRpb25faWQYByABKAki",
            "xAEKGVN1YnNjcmliZU9yZGVyQm9va1JlcXVlc3QSVgoTc3Vic2NyaXB0aW9u",
            "X2FjdGlvbhgBIAEoDjI5LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29u",
            "dHJhY3QudjEuU3Vic2NyaXB0aW9uQWN0aW9uEk8KC2luc3RydW1lbnRzGAIg",
            "AygLMjoudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5P",
            "cmRlckJvb2tJbnN0cnVtZW50IpwBChNPcmRlckJvb2tJbnN0cnVtZW50EhAK",
            "BGZpZ2kYASABKAlCAhgBEg0KBWRlcHRoGAIgASgFEhUKDWluc3RydW1lbnRf",
            "aWQYAyABKAkSTQoPb3JkZXJfYm9va190eXBlGAQgASgOMjQudGlua29mZi5w",
            "dWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5PcmRlckJvb2tUeXBlIpEB",
            "ChpTdWJzY3JpYmVPcmRlckJvb2tSZXNwb25zZRITCgt0cmFja2luZ19pZBgB",
            "IAEoCRJeChhvcmRlcl9ib29rX3N1YnNjcmlwdGlvbnMYAiADKAsyPC50aW5r",
            "b2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLk9yZGVyQm9va1N1",
            "YnNjcmlwdGlvbiKfAgoVT3JkZXJCb29rU3Vic2NyaXB0aW9uEgwKBGZpZ2kY",
            "ASABKAkSDQoFZGVwdGgYAiABKAUSVgoTc3Vic2NyaXB0aW9uX3N0YXR1cxgD",
            "IAEoDjI5LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEu",
            "U3Vic2NyaXB0aW9uU3RhdHVzEhYKDmluc3RydW1lbnRfdWlkGAQgASgJEhEK",
            "CXN0cmVhbV9pZBgFIAEoCRIXCg9zdWJzY3JpcHRpb25faWQYBiABKAkSTQoP",
            "b3JkZXJfYm9va190eXBlGAcgASgOMjQudGlua29mZi5wdWJsaWMuaW52ZXN0",
            "LmFwaS5jb250cmFjdC52MS5PcmRlckJvb2tUeXBlIr0BChZTdWJzY3JpYmVU",
            "cmFkZXNSZXF1ZXN0ElYKE3N1YnNjcmlwdGlvbl9hY3Rpb24YASABKA4yOS50",
            "aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlN1YnNjcmlw",
            "dGlvbkFjdGlvbhJLCgtpbnN0cnVtZW50cxgCIAMoCzI2LnRpbmtvZmYucHVi",
            "bGljLmludmVzdC5hcGkuY29udHJhY3QudjEuVHJhZGVJbnN0cnVtZW50IjoK",
            "D1RyYWRlSW5zdHJ1bWVudBIQCgRmaWdpGAEgASgJQgIYARIVCg1pbnN0cnVt",
            "ZW50X2lkGAIgASgJIoUBChdTdWJzY3JpYmVUcmFkZXNSZXNwb25zZRITCgt0",
            "cmFja2luZ19pZBgBIAEoCRJVChN0cmFkZV9zdWJzY3JpcHRpb25zGAIgAygL",
            "MjgudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5UcmFk",
            "ZVN1YnNjcmlwdGlvbiK9AQoRVHJhZGVTdWJzY3JpcHRpb24SDAoEZmlnaRgB",
            "IAEoCRJWChNzdWJzY3JpcHRpb25fc3RhdHVzGAIgASgOMjkudGlua29mZi5w",
            "dWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5TdWJzY3JpcHRpb25TdGF0",
            "dXMSFgoOaW5zdHJ1bWVudF91aWQYAyABKAkSEQoJc3RyZWFtX2lkGAQgASgJ",
            "EhcKD3N1YnNjcmlwdGlvbl9pZBgFIAEoCSK6AQoUU3Vic2NyaWJlSW5mb1Jl",
            "cXVlc3QSVgoTc3Vic2NyaXB0aW9uX2FjdGlvbhgBIAEoDjI5LnRpbmtvZmYu",
            "cHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuU3Vic2NyaXB0aW9uQWN0",
            "aW9uEkoKC2luc3RydW1lbnRzGAIgAygLMjUudGlua29mZi5wdWJsaWMuaW52",
            "ZXN0LmFwaS5jb250cmFjdC52MS5JbmZvSW5zdHJ1bWVudCI5Cg5JbmZvSW5z",
            "dHJ1bWVudBIQCgRmaWdpGAEgASgJQgIYARIVCg1pbnN0cnVtZW50X2lkGAIg",
            "ASgJIoEBChVTdWJzY3JpYmVJbmZvUmVzcG9uc2USEwoLdHJhY2tpbmdfaWQY",
            "ASABKAkSUwoSaW5mb19zdWJzY3JpcHRpb25zGAIgAygLMjcudGlua29mZi5w",
            "dWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5JbmZvU3Vic2NyaXB0aW9u",
            "IrwBChBJbmZvU3Vic2NyaXB0aW9uEgwKBGZpZ2kYASABKAkSVgoTc3Vic2Ny",
            "aXB0aW9uX3N0YXR1cxgCIAEoDjI5LnRpbmtvZmYucHVibGljLmludmVzdC5h",
            "cGkuY29udHJhY3QudjEuU3Vic2NyaXB0aW9uU3RhdHVzEhYKDmluc3RydW1l",
            "bnRfdWlkGAMgASgJEhEKCXN0cmVhbV9pZBgEIAEoCRIXCg9zdWJzY3JpcHRp",
            "b25faWQYBSABKAkixAEKGVN1YnNjcmliZUxhc3RQcmljZVJlcXVlc3QSVgoT",
            "c3Vic2NyaXB0aW9uX2FjdGlvbhgBIAEoDjI5LnRpbmtvZmYucHVibGljLmlu",
            "dmVzdC5hcGkuY29udHJhY3QudjEuU3Vic2NyaXB0aW9uQWN0aW9uEk8KC2lu",
            "c3RydW1lbnRzGAIgAygLMjoudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5j",
            "b250cmFjdC52MS5MYXN0UHJpY2VJbnN0cnVtZW50Ij4KE0xhc3RQcmljZUlu",
            "c3RydW1lbnQSEAoEZmlnaRgBIAEoCUICGAESFQoNaW5zdHJ1bWVudF9pZBgC",
            "IAEoCSKRAQoaU3Vic2NyaWJlTGFzdFByaWNlUmVzcG9uc2USEwoLdHJhY2tp",
            "bmdfaWQYASABKAkSXgoYbGFzdF9wcmljZV9zdWJzY3JpcHRpb25zGAIgAygL",
            "MjwudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5MYXN0",
            "UHJpY2VTdWJzY3JpcHRpb24iwQEKFUxhc3RQcmljZVN1YnNjcmlwdGlvbhIM",
            "CgRmaWdpGAEgASgJElYKE3N1YnNjcmlwdGlvbl9zdGF0dXMYAiABKA4yOS50",
            "aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlN1YnNjcmlw",
            "dGlvblN0YXR1cxIWCg5pbnN0cnVtZW50X3VpZBgDIAEoCRIRCglzdHJlYW1f",
            "aWQYBCABKAkSFwoPc3Vic2NyaXB0aW9uX2lkGAUgASgJIuoDCgZDYW5kbGUS",
            "DAoEZmlnaRgBIAEoCRJNCghpbnRlcnZhbBgCIAEoDjI7LnRpbmtvZmYucHVi",
            "bGljLmludmVzdC5hcGkuY29udHJhY3QudjEuU3Vic2NyaXB0aW9uSW50ZXJ2",
            "YWwSPgoEb3BlbhgDIAEoCzIwLnRpbmtvZmYucHVibGljLmludmVzdC5hcGku",
            "Y29udHJhY3QudjEuUXVvdGF0aW9uEj4KBGhpZ2gYBCABKAsyMC50aW5rb2Zm",
            "LnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlF1b3RhdGlvbhI9CgNs",
            "b3cYBSABKAsyMC50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0",
            "LnYxLlF1b3RhdGlvbhI/CgVjbG9zZRgGIAEoCzIwLnRpbmtvZmYucHVibGlj",
            "LmludmVzdC5hcGkuY29udHJhY3QudjEuUXVvdGF0aW9uEg4KBnZvbHVtZRgH",
            "IAEoAxIoCgR0aW1lGAggASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFt",
            "cBIxCg1sYXN0X3RyYWRlX3RzGAkgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRp",
            "bWVzdGFtcBIWCg5pbnN0cnVtZW50X3VpZBgKIAEoCSLSAwoJT3JkZXJCb29r",
            "EgwKBGZpZ2kYASABKAkSDQoFZGVwdGgYAiABKAUSFQoNaXNfY29uc2lzdGVu",
            "dBgDIAEoCBI6CgRiaWRzGAQgAygLMiwudGlua29mZi5wdWJsaWMuaW52ZXN0",
            "LmFwaS5jb250cmFjdC52MS5PcmRlchI6CgRhc2tzGAUgAygLMiwudGlua29m",
            "Zi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5PcmRlchIoCgR0aW1l",
            "GAYgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBJCCghsaW1pdF91",
            "cBgHIAEoCzIwLnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3Qu",
            "djEuUXVvdGF0aW9uEkQKCmxpbWl0X2Rvd24YCCABKAsyMC50aW5rb2ZmLnB1",
            "YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlF1b3RhdGlvbhIWCg5pbnN0",
            "cnVtZW50X3VpZBgJIAEoCRJNCg9vcmRlcl9ib29rX3R5cGUYCiABKA4yNC50",
            "aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLk9yZGVyQm9v",
            "a1R5cGUiWgoFT3JkZXISPwoFcHJpY2UYASABKAsyMC50aW5rb2ZmLnB1Ymxp",
            "Yy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlF1b3RhdGlvbhIQCghxdWFudGl0",
            "eRgCIAEoAyL0AQoFVHJhZGUSDAoEZmlnaRgBIAEoCRJICglkaXJlY3Rpb24Y",
            "AiABKA4yNS50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYx",
            "LlRyYWRlRGlyZWN0aW9uEj8KBXByaWNlGAMgASgLMjAudGlua29mZi5wdWJs",
            "aWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5RdW90YXRpb24SEAoIcXVhbnRp",
            "dHkYBCABKAMSKAoEdGltZRgFIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1l",
            "c3RhbXASFgoOaW5zdHJ1bWVudF91aWQYBiABKAki/gEKDVRyYWRpbmdTdGF0",
            "dXMSDAoEZmlnaRgBIAEoCRJUCg50cmFkaW5nX3N0YXR1cxgCIAEoDjI8LnRp",
            "bmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuU2VjdXJpdHlU",
            "cmFkaW5nU3RhdHVzEigKBHRpbWUYAyABKAsyGi5nb29nbGUucHJvdG9idWYu",
            "VGltZXN0YW1wEiIKGmxpbWl0X29yZGVyX2F2YWlsYWJsZV9mbGFnGAQgASgI",
            "EiMKG21hcmtldF9vcmRlcl9hdmFpbGFibGVfZmxhZxgFIAEoCBIWCg5pbnN0",
            "cnVtZW50X3VpZBgGIAEoCSKOAgoRR2V0Q2FuZGxlc1JlcXVlc3QSFQoEZmln",
            "aRgBIAEoCUICGAFIAIgBARIuCgRmcm9tGAIgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcEIE4kEBAhIsCgJ0bxgDIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5UaW1lc3RhbXBCBOJBAQISTQoIaW50ZXJ2YWwYBCABKA4yNS50aW5r",
            "b2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLkNhbmRsZUludGVy",
            "dmFsQgTiQQECEhoKDWluc3RydW1lbnRfaWQYBSABKAlIAYgBAUIHCgVfZmln",
            "aUIQCg5faW5zdHJ1bWVudF9pZCJcChJHZXRDYW5kbGVzUmVzcG9uc2USRgoH",
            "Y2FuZGxlcxgBIAMoCzI1LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29u",
            "dHJhY3QudjEuSGlzdG9yaWNDYW5kbGUi3wIKDkhpc3RvcmljQ2FuZGxlEj4K",
            "BG9wZW4YASABKAsyMC50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRy",
            "YWN0LnYxLlF1b3RhdGlvbhI+CgRoaWdoGAIgASgLMjAudGlua29mZi5wdWJs",
            "aWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5RdW90YXRpb24SPQoDbG93GAMg",
            "ASgLMjAudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5R",
            "dW90YXRpb24SPwoFY2xvc2UYBCABKAsyMC50aW5rb2ZmLnB1YmxpYy5pbnZl",
            "c3QuYXBpLmNvbnRyYWN0LnYxLlF1b3RhdGlvbhIOCgZ2b2x1bWUYBSABKAMS",
            "KAoEdGltZRgGIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5UaW1lc3RhbXASEwoL",
            "aXNfY29tcGxldGUYByABKAgiPwoUR2V0TGFzdFByaWNlc1JlcXVlc3QSEAoE",
            "ZmlnaRgBIAMoCUICGAESFQoNaW5zdHJ1bWVudF9pZBgCIAMoCSJeChVHZXRM",
            "YXN0UHJpY2VzUmVzcG9uc2USRQoLbGFzdF9wcmljZXMYASADKAsyMC50aW5r",
            "b2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLkxhc3RQcmljZSKc",
            "AQoJTGFzdFByaWNlEgwKBGZpZ2kYASABKAkSPwoFcHJpY2UYAiABKAsyMC50",
            "aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlF1b3RhdGlv",
            "bhIoCgR0aW1lGAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIW",
            "Cg5pbnN0cnVtZW50X3VpZBgLIAEoCSJ4ChNHZXRPcmRlckJvb2tSZXF1ZXN0",
            "EhUKBGZpZ2kYASABKAlCAhgBSACIAQESEwoFZGVwdGgYAiABKAVCBOJBAQIS",
            "GgoNaW5zdHJ1bWVudF9pZBgDIAEoCUgBiAEBQgcKBV9maWdpQhAKDl9pbnN0",
            "cnVtZW50X2lkIvMEChRHZXRPcmRlckJvb2tSZXNwb25zZRIMCgRmaWdpGAEg",
            "ASgJEg0KBWRlcHRoGAIgASgFEjoKBGJpZHMYAyADKAsyLC50aW5rb2ZmLnB1",
            "YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLk9yZGVyEjoKBGFza3MYBCAD",
            "KAsyLC50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLk9y",
            "ZGVyEkQKCmxhc3RfcHJpY2UYBSABKAsyMC50aW5rb2ZmLnB1YmxpYy5pbnZl",
            "c3QuYXBpLmNvbnRyYWN0LnYxLlF1b3RhdGlvbhJFCgtjbG9zZV9wcmljZRgG",
            "IAEoCzIwLnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEu",
            "UXVvdGF0aW9uEkIKCGxpbWl0X3VwGAcgASgLMjAudGlua29mZi5wdWJsaWMu",
            "aW52ZXN0LmFwaS5jb250cmFjdC52MS5RdW90YXRpb24SRAoKbGltaXRfZG93",
            "bhgIIAEoCzIwLnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3Qu",
            "djEuUXVvdGF0aW9uEjEKDWxhc3RfcHJpY2VfdHMYFSABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuVGltZXN0YW1wEjIKDmNsb3NlX3ByaWNlX3RzGBYgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIwCgxvcmRlcmJvb2tfdHMYFyAB",
            "KAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhYKDmluc3RydW1lbnRf",
            "dWlkGAkgASgJImcKF0dldFRyYWRpbmdTdGF0dXNSZXF1ZXN0EhUKBGZpZ2kY",
            "ASABKAlCAhgBSACIAQESGgoNaW5zdHJ1bWVudF9pZBgCIAEoCUgBiAEBQgcK",
            "BV9maWdpQhAKDl9pbnN0cnVtZW50X2lkIjIKGUdldFRyYWRpbmdTdGF0dXNl",
            "c1JlcXVlc3QSFQoNaW5zdHJ1bWVudF9pZBgBIAMoCSJ3ChpHZXRUcmFkaW5n",
            "U3RhdHVzZXNSZXNwb25zZRJZChB0cmFkaW5nX3N0YXR1c2VzGAEgAygLMj8u",
            "dGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5HZXRUcmFk",
            "aW5nU3RhdHVzUmVzcG9uc2UiwgIKGEdldFRyYWRpbmdTdGF0dXNSZXNwb25z",
            "ZRIMCgRmaWdpGAEgASgJElQKDnRyYWRpbmdfc3RhdHVzGAIgASgOMjwudGlu",
            "a29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5TZWN1cml0eVRy",
            "YWRpbmdTdGF0dXMSIgoabGltaXRfb3JkZXJfYXZhaWxhYmxlX2ZsYWcYAyAB",
            "KAgSIwobbWFya2V0X29yZGVyX2F2YWlsYWJsZV9mbGFnGAQgASgIEiAKGGFw",
            "aV90cmFkZV9hdmFpbGFibGVfZmxhZxgFIAEoCBIWCg5pbnN0cnVtZW50X3Vp",
            "ZBgGIAEoCRImCh5iZXN0cHJpY2Vfb3JkZXJfYXZhaWxhYmxlX2ZsYWcYCCAB",
            "KAgSFwoPb25seV9iZXN0X3ByaWNlGAkgASgIIsIBChRHZXRMYXN0VHJhZGVz",
            "UmVxdWVzdBIVCgRmaWdpGAEgASgJQgIYAUgAiAEBEi4KBGZyb20YAiABKAsy",
            "Gi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQgTiQQECEiwKAnRvGAMgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIE4kEBAhIaCg1pbnN0cnVt",
            "ZW50X2lkGAQgASgJSAGIAQFCBwoFX2ZpZ2lCEAoOX2luc3RydW1lbnRfaWQi",
            "VQoVR2V0TGFzdFRyYWRlc1Jlc3BvbnNlEjwKBnRyYWRlcxgBIAMoCzIsLnRp",
            "bmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuVHJhZGUiFAoS",
            "R2V0TXlTdWJzY3JpcHRpb25zInYKFUdldENsb3NlUHJpY2VzUmVxdWVzdBJd",
            "CgtpbnN0cnVtZW50cxgBIAMoCzJCLnRpbmtvZmYucHVibGljLmludmVzdC5h",
            "cGkuY29udHJhY3QudjEuSW5zdHJ1bWVudENsb3NlUHJpY2VSZXF1ZXN0QgTi",
            "QQECIjQKG0luc3RydW1lbnRDbG9zZVByaWNlUmVxdWVzdBIVCg1pbnN0cnVt",
            "ZW50X2lkGAEgASgJInMKFkdldENsb3NlUHJpY2VzUmVzcG9uc2USWQoMY2xv",
            "c2VfcHJpY2VzGAEgAygLMkMudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5j",
            "b250cmFjdC52MS5JbnN0cnVtZW50Q2xvc2VQcmljZVJlc3BvbnNlIoACChxJ",
            "bnN0cnVtZW50Q2xvc2VQcmljZVJlc3BvbnNlEgwKBGZpZ2kYASABKAkSFgoO",
            "aW5zdHJ1bWVudF91aWQYAiABKAkSPwoFcHJpY2UYCyABKAsyMC50aW5rb2Zm",
            "LnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlF1b3RhdGlvbhJPChVl",
            "dmVuaW5nX3Nlc3Npb25fcHJpY2UYDCABKAsyMC50aW5rb2ZmLnB1YmxpYy5p",
            "bnZlc3QuYXBpLmNvbnRyYWN0LnYxLlF1b3RhdGlvbhIoCgR0aW1lGBUgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcCL0DAoWR2V0VGVjaEFuYWx5",
            "c2lzUmVxdWVzdBJpCg5pbmRpY2F0b3JfdHlwZRgBIAEoDjJLLnRpbmtvZmYu",
            "cHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuR2V0VGVjaEFuYWx5c2lz",
            "UmVxdWVzdC5JbmRpY2F0b3JUeXBlQgTiQQECEhwKDmluc3RydW1lbnRfdWlk",
            "GAIgASgJQgTiQQECEi4KBGZyb20YAyABKAsyGi5nb29nbGUucHJvdG9idWYu",
            "VGltZXN0YW1wQgTiQQECEiwKAnRvGAQgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcEIE4kEBAhJnCghpbnRlcnZhbBgFIAEoDjJPLnRpbmtvZmYu",
            "cHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuR2V0VGVjaEFuYWx5c2lz",
            "UmVxdWVzdC5JbmRpY2F0b3JJbnRlcnZhbEIE4kEBAhJmCg10eXBlX29mX3By",
            "aWNlGAYgASgOMkkudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFj",
            "dC52MS5HZXRUZWNoQW5hbHlzaXNSZXF1ZXN0LlR5cGVPZlByaWNlQgTiQQEC",
            "Eg4KBmxlbmd0aBgHIAEoBRJaCglkZXZpYXRpb24YCCABKAsyRy50aW5rb2Zm",
            "LnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLkdldFRlY2hBbmFseXNp",
            "c1JlcXVlc3QuRGV2aWF0aW9uEloKCXNtb290aGluZxgJIAEoCzJHLnRpbmtv",
            "ZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuR2V0VGVjaEFuYWx5",
            "c2lzUmVxdWVzdC5TbW9vdGhpbmcaTwoJU21vb3RoaW5nEhMKC2Zhc3RfbGVu",
            "Z3RoGAEgASgFEhMKC3Nsb3dfbGVuZ3RoGAIgASgFEhgKEHNpZ25hbF9zbW9v",
            "dGhpbmcYAyABKAUaWwoJRGV2aWF0aW9uEk4KFGRldmlhdGlvbl9tdWx0aXBs",
            "aWVyGAEgASgLMjAudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFj",
            "dC52MS5RdW90YXRpb24i2wMKEUluZGljYXRvckludGVydmFsEiIKHklORElD",
            "QVRPUl9JTlRFUlZBTF9VTlNQRUNJRklFRBAAEiEKHUlORElDQVRPUl9JTlRF",
            "UlZBTF9PTkVfTUlOVVRFEAESIwofSU5ESUNBVE9SX0lOVEVSVkFMX0ZJVkVf",
            "TUlOVVRFUxACEiYKIklORElDQVRPUl9JTlRFUlZBTF9GSUZURUVOX01JTlVU",
            "RVMQAxIfChtJTkRJQ0FUT1JfSU5URVJWQUxfT05FX0hPVVIQBBIeChpJTkRJ",
            "Q0FUT1JfSU5URVJWQUxfT05FX0RBWRAFEhwKGElORElDQVRPUl9JTlRFUlZB",
            "TF8yX01JThAGEhwKGElORElDQVRPUl9JTlRFUlZBTF8zX01JThAHEh0KGUlO",
            "RElDQVRPUl9JTlRFUlZBTF8xMF9NSU4QCBIdChlJTkRJQ0FUT1JfSU5URVJW",
            "QUxfMzBfTUlOEAkSHQoZSU5ESUNBVE9SX0lOVEVSVkFMXzJfSE9VUhAKEh0K",
            "GUlORElDQVRPUl9JTlRFUlZBTF80X0hPVVIQCxIbChdJTkRJQ0FUT1JfSU5U",
            "RVJWQUxfV0VFSxAMEhwKGElORElDQVRPUl9JTlRFUlZBTF9NT05USBANIqMB",
            "CgtUeXBlT2ZQcmljZRIdChlUWVBFX09GX1BSSUNFX1VOU1BFQ0lGSUVEEAAS",
            "FwoTVFlQRV9PRl9QUklDRV9DTE9TRRABEhYKElRZUEVfT0ZfUFJJQ0VfT1BF",
            "ThACEhYKElRZUEVfT0ZfUFJJQ0VfSElHSBADEhUKEVRZUEVfT0ZfUFJJQ0Vf",
            "TE9XEAQSFQoRVFlQRV9PRl9QUklDRV9BVkcQBSKnAQoNSW5kaWNhdG9yVHlw",
            "ZRIeChpJTkRJQ0FUT1JfVFlQRV9VTlNQRUNJRklFRBAAEhUKEUlORElDQVRP",
            "Ul9UWVBFX0JCEAESFgoSSU5ESUNBVE9SX1RZUEVfRU1BEAISFgoSSU5ESUNB",
            "VE9SX1RZUEVfUlNJEAMSFwoTSU5ESUNBVE9SX1RZUEVfTUFDRBAEEhYKEklO",
            "RElDQVRPUl9UWVBFX1NNQRAFIvwEChdHZXRUZWNoQW5hbHlzaXNSZXNwb25z",
            "ZRJtChR0ZWNobmljYWxfaW5kaWNhdG9ycxgBIAMoCzJPLnRpbmtvZmYucHVi",
            "bGljLmludmVzdC5hcGkuY29udHJhY3QudjEuR2V0VGVjaEFuYWx5c2lzUmVz",
            "cG9uc2UuVGVjaEFuYWx5c2lzSXRlbRrxAwoQVGVjaEFuYWx5c2lzSXRlbRIt",
            "Cgl0aW1lc3RhbXAYASABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1w",
            "EkoKC21pZGRsZV9iYW5kGAIgASgLMjAudGlua29mZi5wdWJsaWMuaW52ZXN0",
            "LmFwaS5jb250cmFjdC52MS5RdW90YXRpb25IAIgBARJJCgp1cHBlcl9iYW5k",
            "GAMgASgLMjAudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52",
            "MS5RdW90YXRpb25IAYgBARJJCgpsb3dlcl9iYW5kGAQgASgLMjAudGlua29m",
            "Zi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5RdW90YXRpb25IAogB",
            "ARJFCgZzaWduYWwYBSABKAsyMC50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBp",
            "LmNvbnRyYWN0LnYxLlF1b3RhdGlvbkgDiAEBEkMKBG1hY2QYBiABKAsyMC50",
            "aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLlF1b3RhdGlv",
            "bkgEiAEBQg4KDF9taWRkbGVfYmFuZEINCgtfdXBwZXJfYmFuZEINCgtfbG93",
            "ZXJfYmFuZEIJCgdfc2lnbmFsQgcKBV9tYWNkKoEBChJTdWJzY3JpcHRpb25B",
            "Y3Rpb24SIwofU1VCU0NSSVBUSU9OX0FDVElPTl9VTlNQRUNJRklFRBAAEiEK",
            "HVNVQlNDUklQVElPTl9BQ1RJT05fU1VCU0NSSUJFEAESIwofU1VCU0NSSVBU",
            "SU9OX0FDVElPTl9VTlNVQlNDUklCRRACKogEChRTdWJzY3JpcHRpb25JbnRl",
            "cnZhbBIlCiFTVUJTQ1JJUFRJT05fSU5URVJWQUxfVU5TUEVDSUZJRUQQABIk",
            "CiBTVUJTQ1JJUFRJT05fSU5URVJWQUxfT05FX01JTlVURRABEiYKIlNVQlND",
            "UklQVElPTl9JTlRFUlZBTF9GSVZFX01JTlVURVMQAhIpCiVTVUJTQ1JJUFRJ",
            "T05fSU5URVJWQUxfRklGVEVFTl9NSU5VVEVTEAMSIgoeU1VCU0NSSVBUSU9O",
            "X0lOVEVSVkFMX09ORV9IT1VSEAQSIQodU1VCU0NSSVBUSU9OX0lOVEVSVkFM",
            "X09ORV9EQVkQBRIfChtTVUJTQ1JJUFRJT05fSU5URVJWQUxfMl9NSU4QBhIf",
            "ChtTVUJTQ1JJUFRJT05fSU5URVJWQUxfM19NSU4QBxIgChxTVUJTQ1JJUFRJ",
            "T05fSU5URVJWQUxfMTBfTUlOEAgSIAocU1VCU0NSSVBUSU9OX0lOVEVSVkFM",
            "XzMwX01JThAJEiAKHFNVQlNDUklQVElPTl9JTlRFUlZBTF8yX0hPVVIQChIg",
            "ChxTVUJTQ1JJUFRJT05fSU5URVJWQUxfNF9IT1VSEAsSHgoaU1VCU0NSSVBU",
            "SU9OX0lOVEVSVkFMX1dFRUsQDBIfChtTVUJTQ1JJUFRJT05fSU5URVJWQUxf",
            "TU9OVEgQDSrFAwoSU3Vic2NyaXB0aW9uU3RhdHVzEiMKH1NVQlNDUklQVElP",
            "Tl9TVEFUVVNfVU5TUEVDSUZJRUQQABIfChtTVUJTQ1JJUFRJT05fU1RBVFVT",
            "X1NVQ0NFU1MQARIsCihTVUJTQ1JJUFRJT05fU1RBVFVTX0lOU1RSVU1FTlRf",
            "Tk9UX0ZPVU5EEAISNgoyU1VCU0NSSVBUSU9OX1NUQVRVU19TVUJTQ1JJUFRJ",
            "T05fQUNUSU9OX0lTX0lOVkFMSUQQAxIoCiRTVUJTQ1JJUFRJT05fU1RBVFVT",
            "X0RFUFRIX0lTX0lOVkFMSUQQBBIrCidTVUJTQ1JJUFRJT05fU1RBVFVTX0lO",
            "VEVSVkFMX0lTX0lOVkFMSUQQBRIpCiVTVUJTQ1JJUFRJT05fU1RBVFVTX0xJ",
            "TUlUX0lTX0VYQ0VFREVEEAYSJgoiU1VCU0NSSVBUSU9OX1NUQVRVU19JTlRF",
            "Uk5BTF9FUlJPUhAHEikKJVNVQlNDUklQVElPTl9TVEFUVVNfVE9PX01BTllf",
            "UkVRVUVTVFMQCBIuCipTVUJTQ1JJUFRJT05fU1RBVFVTX1NVQlNDUklQVElP",
            "Tl9OT1RfRk9VTkQQCSpkCg5UcmFkZURpcmVjdGlvbhIfChtUUkFERV9ESVJF",
            "Q1RJT05fVU5TUEVDSUZJRUQQABIXChNUUkFERV9ESVJFQ1RJT05fQlVZEAES",
            "GAoUVFJBREVfRElSRUNUSU9OX1NFTEwQAiqRAwoOQ2FuZGxlSW50ZXJ2YWwS",
            "HwobQ0FORExFX0lOVEVSVkFMX1VOU1BFQ0lGSUVEEAASGQoVQ0FORExFX0lO",
            "VEVSVkFMXzFfTUlOEAESGQoVQ0FORExFX0lOVEVSVkFMXzVfTUlOEAISGgoW",
            "Q0FORExFX0lOVEVSVkFMXzE1X01JThADEhgKFENBTkRMRV9JTlRFUlZBTF9I",
            "T1VSEAQSFwoTQ0FORExFX0lOVEVSVkFMX0RBWRAFEhkKFUNBTkRMRV9JTlRF",
            "UlZBTF8yX01JThAGEhkKFUNBTkRMRV9JTlRFUlZBTF8zX01JThAHEhoKFkNB",
            "TkRMRV9JTlRFUlZBTF8xMF9NSU4QCBIaChZDQU5ETEVfSU5URVJWQUxfMzBf",
            "TUlOEAkSGgoWQ0FORExFX0lOVEVSVkFMXzJfSE9VUhAKEhoKFkNBTkRMRV9J",
            "TlRFUlZBTF80X0hPVVIQCxIYChRDQU5ETEVfSU5URVJWQUxfV0VFSxAMEhkK",
            "FUNBTkRMRV9JTlRFUlZBTF9NT05USBANKmcKDU9yZGVyQm9va1R5cGUSHgoa",
            "T1JERVJCT09LX1RZUEVfVU5TUEVDSUZJRUQQABIbChdPUkRFUkJPT0tfVFlQ",
            "RV9FWENIQU5HRRABEhkKFU9SREVSQk9PS19UWVBFX0RFQUxFUhACMpAJChFN",
            "YXJrZXREYXRhU2VydmljZRKBAQoKR2V0Q2FuZGxlcxI4LnRpbmtvZmYucHVi",
            "bGljLmludmVzdC5hcGkuY29udHJhY3QudjEuR2V0Q2FuZGxlc1JlcXVlc3Qa",
            "OS50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLkdldENh",
            "bmRsZXNSZXNwb25zZRKKAQoNR2V0TGFzdFByaWNlcxI7LnRpbmtvZmYucHVi",
            "bGljLmludmVzdC5hcGkuY29udHJhY3QudjEuR2V0TGFzdFByaWNlc1JlcXVl",
            "c3QaPC50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLkdl",
            "dExhc3RQcmljZXNSZXNwb25zZRKHAQoMR2V0T3JkZXJCb29rEjoudGlua29m",
            "Zi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5HZXRPcmRlckJvb2tS",
            "ZXF1ZXN0GjsudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52",
            "MS5HZXRPcmRlckJvb2tSZXNwb25zZRKTAQoQR2V0VHJhZGluZ1N0YXR1cxI+",
            "LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJhY3QudjEuR2V0VHJh",
            "ZGluZ1N0YXR1c1JlcXVlc3QaPy50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBp",
            "LmNvbnRyYWN0LnYxLkdldFRyYWRpbmdTdGF0dXNSZXNwb25zZRKZAQoSR2V0",
            "VHJhZGluZ1N0YXR1c2VzEkAudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5j",
            "b250cmFjdC52MS5HZXRUcmFkaW5nU3RhdHVzZXNSZXF1ZXN0GkEudGlua29m",
            "Zi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5HZXRUcmFkaW5nU3Rh",
            "dHVzZXNSZXNwb25zZRKKAQoNR2V0TGFzdFRyYWRlcxI7LnRpbmtvZmYucHVi",
            "bGljLmludmVzdC5hcGkuY29udHJhY3QudjEuR2V0TGFzdFRyYWRlc1JlcXVl",
            "c3QaPC50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLkdl",
            "dExhc3RUcmFkZXNSZXNwb25zZRKNAQoOR2V0Q2xvc2VQcmljZXMSPC50aW5r",
            "b2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLkdldENsb3NlUHJp",
            "Y2VzUmVxdWVzdBo9LnRpbmtvZmYucHVibGljLmludmVzdC5hcGkuY29udHJh",
            "Y3QudjEuR2V0Q2xvc2VQcmljZXNSZXNwb25zZRKQAQoPR2V0VGVjaEFuYWx5",
            "c2lzEj0udGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5H",
            "ZXRUZWNoQW5hbHlzaXNSZXF1ZXN0Gj4udGlua29mZi5wdWJsaWMuaW52ZXN0",
            "LmFwaS5jb250cmFjdC52MS5HZXRUZWNoQW5hbHlzaXNSZXNwb25zZTLNAgoX",
            "TWFya2V0RGF0YVN0cmVhbVNlcnZpY2USiwEKEE1hcmtldERhdGFTdHJlYW0S",
            "OC50aW5rb2ZmLnB1YmxpYy5pbnZlc3QuYXBpLmNvbnRyYWN0LnYxLk1hcmtl",
            "dERhdGFSZXF1ZXN0GjkudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250",
            "cmFjdC52MS5NYXJrZXREYXRhUmVzcG9uc2UoATABEqMBChpNYXJrZXREYXRh",
            "U2VydmVyU2lkZVN0cmVhbRJILnRpbmtvZmYucHVibGljLmludmVzdC5hcGku",
            "Y29udHJhY3QudjEuTWFya2V0RGF0YVNlcnZlclNpZGVTdHJlYW1SZXF1ZXN0",
            "GjkudGlua29mZi5wdWJsaWMuaW52ZXN0LmFwaS5jb250cmFjdC52MS5NYXJr",
            "ZXREYXRhUmVzcG9uc2UwAUJhChxydS50aW5rb2ZmLnBpYXBpLmNvbnRyYWN0",
            "LnYxUAFaDC4vO2ludmVzdGFwaaICBVRJQVBJqgIUVGlua29mZi5JbnZlc3RB",
            "cGkuVjHKAhFUaW5rb2ZmXEludmVzdFxWMWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Tinkoff.InvestApi.V1.CommonReflection.Descriptor, global::Google.Api.FieldBehaviorReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Tinkoff.InvestApi.V1.SubscriptionAction), typeof(global::Tinkoff.InvestApi.V1.SubscriptionInterval), typeof(global::Tinkoff.InvestApi.V1.SubscriptionStatus), typeof(global::Tinkoff.InvestApi.V1.TradeDirection), typeof(global::Tinkoff.InvestApi.V1.CandleInterval), typeof(global::Tinkoff.InvestApi.V1.OrderBookType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.MarketDataRequest), global::Tinkoff.InvestApi.V1.MarketDataRequest.Parser, new[]{ "SubscribeCandlesRequest", "SubscribeOrderBookRequest", "SubscribeTradesRequest", "SubscribeInfoRequest", "SubscribeLastPriceRequest", "GetMySubscriptions" }, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.MarketDataServerSideStreamRequest), global::Tinkoff.InvestApi.V1.MarketDataServerSideStreamRequest.Parser, new[]{ "SubscribeCandlesRequest", "SubscribeOrderBookRequest", "SubscribeTradesRequest", "SubscribeInfoRequest", "SubscribeLastPriceRequest" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.MarketDataResponse), global::Tinkoff.InvestApi.V1.MarketDataResponse.Parser, new[]{ "SubscribeCandlesResponse", "SubscribeOrderBookResponse", "SubscribeTradesResponse", "SubscribeInfoResponse", "Candle", "Trade", "Orderbook", "TradingStatus", "Ping", "SubscribeLastPriceResponse", "LastPrice" }, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.SubscribeCandlesRequest), global::Tinkoff.InvestApi.V1.SubscribeCandlesRequest.Parser, new[]{ "SubscriptionAction", "Instruments", "WaitingClose" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.CandleInstrument), global::Tinkoff.InvestApi.V1.CandleInstrument.Parser, new[]{ "Figi", "Interval", "InstrumentId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.SubscribeCandlesResponse), global::Tinkoff.InvestApi.V1.SubscribeCandlesResponse.Parser, new[]{ "TrackingId", "CandlesSubscriptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.CandleSubscription), global::Tinkoff.InvestApi.V1.CandleSubscription.Parser, new[]{ "Figi", "Interval", "SubscriptionStatus", "InstrumentUid", "WaitingClose", "StreamId", "SubscriptionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.SubscribeOrderBookRequest), global::Tinkoff.InvestApi.V1.SubscribeOrderBookRequest.Parser, new[]{ "SubscriptionAction", "Instruments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.OrderBookInstrument), global::Tinkoff.InvestApi.V1.OrderBookInstrument.Parser, new[]{ "Figi", "Depth", "InstrumentId", "OrderBookType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.SubscribeOrderBookResponse), global::Tinkoff.InvestApi.V1.SubscribeOrderBookResponse.Parser, new[]{ "TrackingId", "OrderBookSubscriptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.OrderBookSubscription), global::Tinkoff.InvestApi.V1.OrderBookSubscription.Parser, new[]{ "Figi", "Depth", "SubscriptionStatus", "InstrumentUid", "StreamId", "SubscriptionId", "OrderBookType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.SubscribeTradesRequest), global::Tinkoff.InvestApi.V1.SubscribeTradesRequest.Parser, new[]{ "SubscriptionAction", "Instruments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.TradeInstrument), global::Tinkoff.InvestApi.V1.TradeInstrument.Parser, new[]{ "Figi", "InstrumentId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.SubscribeTradesResponse), global::Tinkoff.InvestApi.V1.SubscribeTradesResponse.Parser, new[]{ "TrackingId", "TradeSubscriptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.TradeSubscription), global::Tinkoff.InvestApi.V1.TradeSubscription.Parser, new[]{ "Figi", "SubscriptionStatus", "InstrumentUid", "StreamId", "SubscriptionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.SubscribeInfoRequest), global::Tinkoff.InvestApi.V1.SubscribeInfoRequest.Parser, new[]{ "SubscriptionAction", "Instruments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.InfoInstrument), global::Tinkoff.InvestApi.V1.InfoInstrument.Parser, new[]{ "Figi", "InstrumentId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.SubscribeInfoResponse), global::Tinkoff.InvestApi.V1.SubscribeInfoResponse.Parser, new[]{ "TrackingId", "InfoSubscriptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.InfoSubscription), global::Tinkoff.InvestApi.V1.InfoSubscription.Parser, new[]{ "Figi", "SubscriptionStatus", "InstrumentUid", "StreamId", "SubscriptionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.SubscribeLastPriceRequest), global::Tinkoff.InvestApi.V1.SubscribeLastPriceRequest.Parser, new[]{ "SubscriptionAction", "Instruments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.LastPriceInstrument), global::Tinkoff.InvestApi.V1.LastPriceInstrument.Parser, new[]{ "Figi", "InstrumentId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.SubscribeLastPriceResponse), global::Tinkoff.InvestApi.V1.SubscribeLastPriceResponse.Parser, new[]{ "TrackingId", "LastPriceSubscriptions" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.LastPriceSubscription), global::Tinkoff.InvestApi.V1.LastPriceSubscription.Parser, new[]{ "Figi", "SubscriptionStatus", "InstrumentUid", "StreamId", "SubscriptionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.Candle), global::Tinkoff.InvestApi.V1.Candle.Parser, new[]{ "Figi", "Interval", "Open", "High", "Low", "Close", "Volume", "Time", "LastTradeTs", "InstrumentUid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.OrderBook), global::Tinkoff.InvestApi.V1.OrderBook.Parser, new[]{ "Figi", "Depth", "IsConsistent", "Bids", "Asks", "Time", "LimitUp", "LimitDown", "InstrumentUid", "OrderBookType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.Order), global::Tinkoff.InvestApi.V1.Order.Parser, new[]{ "Price", "Quantity" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.Trade), global::Tinkoff.InvestApi.V1.Trade.Parser, new[]{ "Figi", "Direction", "Price", "Quantity", "Time", "InstrumentUid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.TradingStatus), global::Tinkoff.InvestApi.V1.TradingStatus.Parser, new[]{ "Figi", "TradingStatus_", "Time", "LimitOrderAvailableFlag", "MarketOrderAvailableFlag", "InstrumentUid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetCandlesRequest), global::Tinkoff.InvestApi.V1.GetCandlesRequest.Parser, new[]{ "Figi", "From", "To", "Interval", "InstrumentId" }, new[]{ "Figi", "InstrumentId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetCandlesResponse), global::Tinkoff.InvestApi.V1.GetCandlesResponse.Parser, new[]{ "Candles" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.HistoricCandle), global::Tinkoff.InvestApi.V1.HistoricCandle.Parser, new[]{ "Open", "High", "Low", "Close", "Volume", "Time", "IsComplete" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetLastPricesRequest), global::Tinkoff.InvestApi.V1.GetLastPricesRequest.Parser, new[]{ "Figi", "InstrumentId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetLastPricesResponse), global::Tinkoff.InvestApi.V1.GetLastPricesResponse.Parser, new[]{ "LastPrices" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.LastPrice), global::Tinkoff.InvestApi.V1.LastPrice.Parser, new[]{ "Figi", "Price", "Time", "InstrumentUid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetOrderBookRequest), global::Tinkoff.InvestApi.V1.GetOrderBookRequest.Parser, new[]{ "Figi", "Depth", "InstrumentId" }, new[]{ "Figi", "InstrumentId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetOrderBookResponse), global::Tinkoff.InvestApi.V1.GetOrderBookResponse.Parser, new[]{ "Figi", "Depth", "Bids", "Asks", "LastPrice", "ClosePrice", "LimitUp", "LimitDown", "LastPriceTs", "ClosePriceTs", "OrderbookTs", "InstrumentUid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetTradingStatusRequest), global::Tinkoff.InvestApi.V1.GetTradingStatusRequest.Parser, new[]{ "Figi", "InstrumentId" }, new[]{ "Figi", "InstrumentId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetTradingStatusesRequest), global::Tinkoff.InvestApi.V1.GetTradingStatusesRequest.Parser, new[]{ "InstrumentId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetTradingStatusesResponse), global::Tinkoff.InvestApi.V1.GetTradingStatusesResponse.Parser, new[]{ "TradingStatuses" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetTradingStatusResponse), global::Tinkoff.InvestApi.V1.GetTradingStatusResponse.Parser, new[]{ "Figi", "TradingStatus", "LimitOrderAvailableFlag", "MarketOrderAvailableFlag", "ApiTradeAvailableFlag", "InstrumentUid", "BestpriceOrderAvailableFlag", "OnlyBestPrice" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetLastTradesRequest), global::Tinkoff.InvestApi.V1.GetLastTradesRequest.Parser, new[]{ "Figi", "From", "To", "InstrumentId" }, new[]{ "Figi", "InstrumentId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetLastTradesResponse), global::Tinkoff.InvestApi.V1.GetLastTradesResponse.Parser, new[]{ "Trades" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetMySubscriptions), global::Tinkoff.InvestApi.V1.GetMySubscriptions.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetClosePricesRequest), global::Tinkoff.InvestApi.V1.GetClosePricesRequest.Parser, new[]{ "Instruments" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.InstrumentClosePriceRequest), global::Tinkoff.InvestApi.V1.InstrumentClosePriceRequest.Parser, new[]{ "InstrumentId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetClosePricesResponse), global::Tinkoff.InvestApi.V1.GetClosePricesResponse.Parser, new[]{ "ClosePrices" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.InstrumentClosePriceResponse), global::Tinkoff.InvestApi.V1.InstrumentClosePriceResponse.Parser, new[]{ "Figi", "InstrumentUid", "Price", "EveningSessionPrice", "Time" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest), global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Parser, new[]{ "IndicatorType", "InstrumentUid", "From", "To", "Interval", "TypeOfPrice", "Length", "Deviation", "Smoothing" }, null, new[]{ typeof(global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorInterval), typeof(global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.TypeOfPrice), typeof(global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorType) }, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.Smoothing), global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.Smoothing.Parser, new[]{ "FastLength", "SlowLength", "SignalSmoothing" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.Deviation), global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.Deviation.Parser, new[]{ "DeviationMultiplier" }, null, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetTechAnalysisResponse), global::Tinkoff.InvestApi.V1.GetTechAnalysisResponse.Parser, new[]{ "TechnicalIndicators" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Tinkoff.InvestApi.V1.GetTechAnalysisResponse.Types.TechAnalysisItem), global::Tinkoff.InvestApi.V1.GetTechAnalysisResponse.Types.TechAnalysisItem.Parser, new[]{ "Timestamp", "MiddleBand", "UpperBand", "LowerBand", "Signal", "Macd" }, new[]{ "MiddleBand", "UpperBand", "LowerBand", "Signal", "Macd" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  /// <summary>
  ///Тип операции со списком подписок.
  /// </summary>
  public enum SubscriptionAction {
    /// <summary>
    ///Статус подписки не определён.
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_ACTION_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    ///Подписаться.
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_ACTION_SUBSCRIBE")] Subscribe = 1,
    /// <summary>
    ///Отписаться.
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_ACTION_UNSUBSCRIBE")] Unsubscribe = 2,
  }

  /// <summary>
  ///Интервал свечи.
  /// </summary>
  public enum SubscriptionInterval {
    /// <summary>
    ///Интервал свечи не определён.
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_INTERVAL_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    ///Минутные свечи.
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_INTERVAL_ONE_MINUTE")] OneMinute = 1,
    /// <summary>
    ///Пятиминутные свечи.
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_INTERVAL_FIVE_MINUTES")] FiveMinutes = 2,
    /// <summary>
    ///Пятнадцатиминутные свечи
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_INTERVAL_FIFTEEN_MINUTES")] FifteenMinutes = 3,
    /// <summary>
    ///Часовые свечи
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_INTERVAL_ONE_HOUR")] OneHour = 4,
    /// <summary>
    ///Дневные свечи
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_INTERVAL_ONE_DAY")] OneDay = 5,
    /// <summary>
    ///Двухминутные свечи
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_INTERVAL_2_MIN")] _2Min = 6,
    /// <summary>
    ///Трехминутные свечи
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_INTERVAL_3_MIN")] _3Min = 7,
    /// <summary>
    ///Десятиминутные свечи
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_INTERVAL_10_MIN")] _10Min = 8,
    /// <summary>
    ///Тридцатиминутные свечи
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_INTERVAL_30_MIN")] _30Min = 9,
    /// <summary>
    ///Двухчасовые свечи
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_INTERVAL_2_HOUR")] _2Hour = 10,
    /// <summary>
    ///Четырехчасовые свечи
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_INTERVAL_4_HOUR")] _4Hour = 11,
    /// <summary>
    ///Недельные свечи
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_INTERVAL_WEEK")] Week = 12,
    /// <summary>
    ///Месячные свечи
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_INTERVAL_MONTH")] Month = 13,
  }

  /// <summary>
  ///Результат подписки.
  /// </summary>
  public enum SubscriptionStatus {
    /// <summary>
    ///Статус подписки не определён.
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_STATUS_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    ///Успешно.
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_STATUS_SUCCESS")] Success = 1,
    /// <summary>
    ///Инструмент не найден.
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_STATUS_INSTRUMENT_NOT_FOUND")] InstrumentNotFound = 2,
    /// <summary>
    ///Некорректный статус подписки, список возможных значений: [SubscriptionAction](https://russianinvestments.github.io/investAPI/marketdata#subscriptionaction).
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_STATUS_SUBSCRIPTION_ACTION_IS_INVALID")] SubscriptionActionIsInvalid = 3,
    /// <summary>
    ///Некорректная глубина стакана, доступные значения: 1, 10, 20, 30, 40, 50.
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_STATUS_DEPTH_IS_INVALID")] DepthIsInvalid = 4,
    /// <summary>
    ///Некорректный интервал свечей, список возможных значений: [SubscriptionInterval](https://russianinvestments.github.io/investAPI/marketdata#subscriptioninterval).
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_STATUS_INTERVAL_IS_INVALID")] IntervalIsInvalid = 5,
    /// <summary>
    ///Превышен лимит на общее количество подписок в рамках стрима, подробнее: [Лимитная политика](https://russianinvestments.github.io/investAPI/limits/).
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_STATUS_LIMIT_IS_EXCEEDED")] LimitIsExceeded = 6,
    /// <summary>
    ///Внутренняя ошибка сервиса.
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_STATUS_INTERNAL_ERROR")] InternalError = 7,
    /// <summary>
    ///Превышен лимит на количество запросов на подписки в течение установленного отрезка времени
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_STATUS_TOO_MANY_REQUESTS")] TooManyRequests = 8,
    /// <summary>
    /// Активная подписка не найдена. Ошибка может возникнуть только при отписке от не существующей отписки
    /// </summary>
    [pbr::OriginalName("SUBSCRIPTION_STATUS_SUBSCRIPTION_NOT_FOUND")] SubscriptionNotFound = 9,
  }

  /// <summary>
  ///Направление сделки.
  /// </summary>
  public enum TradeDirection {
    /// <summary>
    ///Направление сделки не определено.
    /// </summary>
    [pbr::OriginalName("TRADE_DIRECTION_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    ///Покупка.
    /// </summary>
    [pbr::OriginalName("TRADE_DIRECTION_BUY")] Buy = 1,
    /// <summary>
    ///Продажа.
    /// </summary>
    [pbr::OriginalName("TRADE_DIRECTION_SELL")] Sell = 2,
  }

  /// <summary>
  ///Интервал свечей.
  /// </summary>
  public enum CandleInterval {
    /// <summary>
    ///Интервал не определён.
    /// </summary>
    [pbr::OriginalName("CANDLE_INTERVAL_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    ///от 1 минуты до 1 дня.
    /// </summary>
    [pbr::OriginalName("CANDLE_INTERVAL_1_MIN")] _1Min = 1,
    /// <summary>
    ///от 5 минут до 1 дня.
    /// </summary>
    [pbr::OriginalName("CANDLE_INTERVAL_5_MIN")] _5Min = 2,
    /// <summary>
    ///от 15 минут до 1 дня.
    /// </summary>
    [pbr::OriginalName("CANDLE_INTERVAL_15_MIN")] _15Min = 3,
    /// <summary>
    ///от 1 часа до 1 недели.
    /// </summary>
    [pbr::OriginalName("CANDLE_INTERVAL_HOUR")] Hour = 4,
    /// <summary>
    ///от 1 дня до 1 года.
    /// </summary>
    [pbr::OriginalName("CANDLE_INTERVAL_DAY")] Day = 5,
    /// <summary>
    ///от 2 минут до 1 дня.
    /// </summary>
    [pbr::OriginalName("CANDLE_INTERVAL_2_MIN")] _2Min = 6,
    /// <summary>
    ///от 3 минут до 1 дня.
    /// </summary>
    [pbr::OriginalName("CANDLE_INTERVAL_3_MIN")] _3Min = 7,
    /// <summary>
    ///от 10 минут до 1 дня.
    /// </summary>
    [pbr::OriginalName("CANDLE_INTERVAL_10_MIN")] _10Min = 8,
    /// <summary>
    ///от 30 минут до 2 дней.
    /// </summary>
    [pbr::OriginalName("CANDLE_INTERVAL_30_MIN")] _30Min = 9,
    /// <summary>
    ///от 2 часов до 1 месяца.
    /// </summary>
    [pbr::OriginalName("CANDLE_INTERVAL_2_HOUR")] _2Hour = 10,
    /// <summary>
    ///от 4 часов до 1 месяца.
    /// </summary>
    [pbr::OriginalName("CANDLE_INTERVAL_4_HOUR")] _4Hour = 11,
    /// <summary>
    ///от 1 недели до 2 лет.
    /// </summary>
    [pbr::OriginalName("CANDLE_INTERVAL_WEEK")] Week = 12,
    /// <summary>
    ///от 1 месяца до 10 лет.
    /// </summary>
    [pbr::OriginalName("CANDLE_INTERVAL_MONTH")] Month = 13,
  }

  public enum OrderBookType {
    /// <summary>
    ///не определен
    /// </summary>
    [pbr::OriginalName("ORDERBOOK_TYPE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    ///Биржевой стакан
    /// </summary>
    [pbr::OriginalName("ORDERBOOK_TYPE_EXCHANGE")] Exchange = 1,
    /// <summary>
    ///Стакан дилера
    /// </summary>
    [pbr::OriginalName("ORDERBOOK_TYPE_DEALER")] Dealer = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  ///Запрос подписки или отписки на определённые биржевые данные.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MarketDataRequest : pb::IMessage<MarketDataRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarketDataRequest> _parser = new pb::MessageParser<MarketDataRequest>(() => new MarketDataRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MarketDataRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketDataRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketDataRequest(MarketDataRequest other) : this() {
      switch (other.PayloadCase) {
        case PayloadOneofCase.SubscribeCandlesRequest:
          SubscribeCandlesRequest = other.SubscribeCandlesRequest.Clone();
          break;
        case PayloadOneofCase.SubscribeOrderBookRequest:
          SubscribeOrderBookRequest = other.SubscribeOrderBookRequest.Clone();
          break;
        case PayloadOneofCase.SubscribeTradesRequest:
          SubscribeTradesRequest = other.SubscribeTradesRequest.Clone();
          break;
        case PayloadOneofCase.SubscribeInfoRequest:
          SubscribeInfoRequest = other.SubscribeInfoRequest.Clone();
          break;
        case PayloadOneofCase.SubscribeLastPriceRequest:
          SubscribeLastPriceRequest = other.SubscribeLastPriceRequest.Clone();
          break;
        case PayloadOneofCase.GetMySubscriptions:
          GetMySubscriptions = other.GetMySubscriptions.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketDataRequest Clone() {
      return new MarketDataRequest(this);
    }

    /// <summary>Field number for the "subscribe_candles_request" field.</summary>
    public const int SubscribeCandlesRequestFieldNumber = 1;
    /// <summary>
    ///Запрос подписки на свечи.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscribeCandlesRequest SubscribeCandlesRequest {
      get { return payloadCase_ == PayloadOneofCase.SubscribeCandlesRequest ? (global::Tinkoff.InvestApi.V1.SubscribeCandlesRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SubscribeCandlesRequest;
      }
    }

    /// <summary>Field number for the "subscribe_order_book_request" field.</summary>
    public const int SubscribeOrderBookRequestFieldNumber = 2;
    /// <summary>
    ///Запрос подписки на стаканы.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscribeOrderBookRequest SubscribeOrderBookRequest {
      get { return payloadCase_ == PayloadOneofCase.SubscribeOrderBookRequest ? (global::Tinkoff.InvestApi.V1.SubscribeOrderBookRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SubscribeOrderBookRequest;
      }
    }

    /// <summary>Field number for the "subscribe_trades_request" field.</summary>
    public const int SubscribeTradesRequestFieldNumber = 3;
    /// <summary>
    ///Запрос подписки на ленту обезличенных сделок.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscribeTradesRequest SubscribeTradesRequest {
      get { return payloadCase_ == PayloadOneofCase.SubscribeTradesRequest ? (global::Tinkoff.InvestApi.V1.SubscribeTradesRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SubscribeTradesRequest;
      }
    }

    /// <summary>Field number for the "subscribe_info_request" field.</summary>
    public const int SubscribeInfoRequestFieldNumber = 4;
    /// <summary>
    ///Запрос подписки на торговые статусы инструментов.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscribeInfoRequest SubscribeInfoRequest {
      get { return payloadCase_ == PayloadOneofCase.SubscribeInfoRequest ? (global::Tinkoff.InvestApi.V1.SubscribeInfoRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SubscribeInfoRequest;
      }
    }

    /// <summary>Field number for the "subscribe_last_price_request" field.</summary>
    public const int SubscribeLastPriceRequestFieldNumber = 5;
    /// <summary>
    ///Запрос подписки на цены последних сделок.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscribeLastPriceRequest SubscribeLastPriceRequest {
      get { return payloadCase_ == PayloadOneofCase.SubscribeLastPriceRequest ? (global::Tinkoff.InvestApi.V1.SubscribeLastPriceRequest) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SubscribeLastPriceRequest;
      }
    }

    /// <summary>Field number for the "get_my_subscriptions" field.</summary>
    public const int GetMySubscriptionsFieldNumber = 6;
    /// <summary>
    ///Запрос своих подписок.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.GetMySubscriptions GetMySubscriptions {
      get { return payloadCase_ == PayloadOneofCase.GetMySubscriptions ? (global::Tinkoff.InvestApi.V1.GetMySubscriptions) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.GetMySubscriptions;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      SubscribeCandlesRequest = 1,
      SubscribeOrderBookRequest = 2,
      SubscribeTradesRequest = 3,
      SubscribeInfoRequest = 4,
      SubscribeLastPriceRequest = 5,
      GetMySubscriptions = 6,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MarketDataRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MarketDataRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SubscribeCandlesRequest, other.SubscribeCandlesRequest)) return false;
      if (!object.Equals(SubscribeOrderBookRequest, other.SubscribeOrderBookRequest)) return false;
      if (!object.Equals(SubscribeTradesRequest, other.SubscribeTradesRequest)) return false;
      if (!object.Equals(SubscribeInfoRequest, other.SubscribeInfoRequest)) return false;
      if (!object.Equals(SubscribeLastPriceRequest, other.SubscribeLastPriceRequest)) return false;
      if (!object.Equals(GetMySubscriptions, other.GetMySubscriptions)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (payloadCase_ == PayloadOneofCase.SubscribeCandlesRequest) hash ^= SubscribeCandlesRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.SubscribeOrderBookRequest) hash ^= SubscribeOrderBookRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.SubscribeTradesRequest) hash ^= SubscribeTradesRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.SubscribeInfoRequest) hash ^= SubscribeInfoRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.SubscribeLastPriceRequest) hash ^= SubscribeLastPriceRequest.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.GetMySubscriptions) hash ^= GetMySubscriptions.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (payloadCase_ == PayloadOneofCase.SubscribeCandlesRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(SubscribeCandlesRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeOrderBookRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(SubscribeOrderBookRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeTradesRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(SubscribeTradesRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeInfoRequest) {
        output.WriteRawTag(34);
        output.WriteMessage(SubscribeInfoRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeLastPriceRequest) {
        output.WriteRawTag(42);
        output.WriteMessage(SubscribeLastPriceRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetMySubscriptions) {
        output.WriteRawTag(50);
        output.WriteMessage(GetMySubscriptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (payloadCase_ == PayloadOneofCase.SubscribeCandlesRequest) {
        output.WriteRawTag(10);
        output.WriteMessage(SubscribeCandlesRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeOrderBookRequest) {
        output.WriteRawTag(18);
        output.WriteMessage(SubscribeOrderBookRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeTradesRequest) {
        output.WriteRawTag(26);
        output.WriteMessage(SubscribeTradesRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeInfoRequest) {
        output.WriteRawTag(34);
        output.WriteMessage(SubscribeInfoRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeLastPriceRequest) {
        output.WriteRawTag(42);
        output.WriteMessage(SubscribeLastPriceRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetMySubscriptions) {
        output.WriteRawTag(50);
        output.WriteMessage(GetMySubscriptions);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (payloadCase_ == PayloadOneofCase.SubscribeCandlesRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscribeCandlesRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeOrderBookRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscribeOrderBookRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeTradesRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscribeTradesRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeInfoRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscribeInfoRequest);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeLastPriceRequest) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscribeLastPriceRequest);
      }
      if (payloadCase_ == PayloadOneofCase.GetMySubscriptions) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GetMySubscriptions);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MarketDataRequest other) {
      if (other == null) {
        return;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.SubscribeCandlesRequest:
          if (SubscribeCandlesRequest == null) {
            SubscribeCandlesRequest = new global::Tinkoff.InvestApi.V1.SubscribeCandlesRequest();
          }
          SubscribeCandlesRequest.MergeFrom(other.SubscribeCandlesRequest);
          break;
        case PayloadOneofCase.SubscribeOrderBookRequest:
          if (SubscribeOrderBookRequest == null) {
            SubscribeOrderBookRequest = new global::Tinkoff.InvestApi.V1.SubscribeOrderBookRequest();
          }
          SubscribeOrderBookRequest.MergeFrom(other.SubscribeOrderBookRequest);
          break;
        case PayloadOneofCase.SubscribeTradesRequest:
          if (SubscribeTradesRequest == null) {
            SubscribeTradesRequest = new global::Tinkoff.InvestApi.V1.SubscribeTradesRequest();
          }
          SubscribeTradesRequest.MergeFrom(other.SubscribeTradesRequest);
          break;
        case PayloadOneofCase.SubscribeInfoRequest:
          if (SubscribeInfoRequest == null) {
            SubscribeInfoRequest = new global::Tinkoff.InvestApi.V1.SubscribeInfoRequest();
          }
          SubscribeInfoRequest.MergeFrom(other.SubscribeInfoRequest);
          break;
        case PayloadOneofCase.SubscribeLastPriceRequest:
          if (SubscribeLastPriceRequest == null) {
            SubscribeLastPriceRequest = new global::Tinkoff.InvestApi.V1.SubscribeLastPriceRequest();
          }
          SubscribeLastPriceRequest.MergeFrom(other.SubscribeLastPriceRequest);
          break;
        case PayloadOneofCase.GetMySubscriptions:
          if (GetMySubscriptions == null) {
            GetMySubscriptions = new global::Tinkoff.InvestApi.V1.GetMySubscriptions();
          }
          GetMySubscriptions.MergeFrom(other.GetMySubscriptions);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Tinkoff.InvestApi.V1.SubscribeCandlesRequest subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeCandlesRequest();
            if (payloadCase_ == PayloadOneofCase.SubscribeCandlesRequest) {
              subBuilder.MergeFrom(SubscribeCandlesRequest);
            }
            input.ReadMessage(subBuilder);
            SubscribeCandlesRequest = subBuilder;
            break;
          }
          case 18: {
            global::Tinkoff.InvestApi.V1.SubscribeOrderBookRequest subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeOrderBookRequest();
            if (payloadCase_ == PayloadOneofCase.SubscribeOrderBookRequest) {
              subBuilder.MergeFrom(SubscribeOrderBookRequest);
            }
            input.ReadMessage(subBuilder);
            SubscribeOrderBookRequest = subBuilder;
            break;
          }
          case 26: {
            global::Tinkoff.InvestApi.V1.SubscribeTradesRequest subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeTradesRequest();
            if (payloadCase_ == PayloadOneofCase.SubscribeTradesRequest) {
              subBuilder.MergeFrom(SubscribeTradesRequest);
            }
            input.ReadMessage(subBuilder);
            SubscribeTradesRequest = subBuilder;
            break;
          }
          case 34: {
            global::Tinkoff.InvestApi.V1.SubscribeInfoRequest subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeInfoRequest();
            if (payloadCase_ == PayloadOneofCase.SubscribeInfoRequest) {
              subBuilder.MergeFrom(SubscribeInfoRequest);
            }
            input.ReadMessage(subBuilder);
            SubscribeInfoRequest = subBuilder;
            break;
          }
          case 42: {
            global::Tinkoff.InvestApi.V1.SubscribeLastPriceRequest subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeLastPriceRequest();
            if (payloadCase_ == PayloadOneofCase.SubscribeLastPriceRequest) {
              subBuilder.MergeFrom(SubscribeLastPriceRequest);
            }
            input.ReadMessage(subBuilder);
            SubscribeLastPriceRequest = subBuilder;
            break;
          }
          case 50: {
            global::Tinkoff.InvestApi.V1.GetMySubscriptions subBuilder = new global::Tinkoff.InvestApi.V1.GetMySubscriptions();
            if (payloadCase_ == PayloadOneofCase.GetMySubscriptions) {
              subBuilder.MergeFrom(GetMySubscriptions);
            }
            input.ReadMessage(subBuilder);
            GetMySubscriptions = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Tinkoff.InvestApi.V1.SubscribeCandlesRequest subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeCandlesRequest();
            if (payloadCase_ == PayloadOneofCase.SubscribeCandlesRequest) {
              subBuilder.MergeFrom(SubscribeCandlesRequest);
            }
            input.ReadMessage(subBuilder);
            SubscribeCandlesRequest = subBuilder;
            break;
          }
          case 18: {
            global::Tinkoff.InvestApi.V1.SubscribeOrderBookRequest subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeOrderBookRequest();
            if (payloadCase_ == PayloadOneofCase.SubscribeOrderBookRequest) {
              subBuilder.MergeFrom(SubscribeOrderBookRequest);
            }
            input.ReadMessage(subBuilder);
            SubscribeOrderBookRequest = subBuilder;
            break;
          }
          case 26: {
            global::Tinkoff.InvestApi.V1.SubscribeTradesRequest subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeTradesRequest();
            if (payloadCase_ == PayloadOneofCase.SubscribeTradesRequest) {
              subBuilder.MergeFrom(SubscribeTradesRequest);
            }
            input.ReadMessage(subBuilder);
            SubscribeTradesRequest = subBuilder;
            break;
          }
          case 34: {
            global::Tinkoff.InvestApi.V1.SubscribeInfoRequest subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeInfoRequest();
            if (payloadCase_ == PayloadOneofCase.SubscribeInfoRequest) {
              subBuilder.MergeFrom(SubscribeInfoRequest);
            }
            input.ReadMessage(subBuilder);
            SubscribeInfoRequest = subBuilder;
            break;
          }
          case 42: {
            global::Tinkoff.InvestApi.V1.SubscribeLastPriceRequest subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeLastPriceRequest();
            if (payloadCase_ == PayloadOneofCase.SubscribeLastPriceRequest) {
              subBuilder.MergeFrom(SubscribeLastPriceRequest);
            }
            input.ReadMessage(subBuilder);
            SubscribeLastPriceRequest = subBuilder;
            break;
          }
          case 50: {
            global::Tinkoff.InvestApi.V1.GetMySubscriptions subBuilder = new global::Tinkoff.InvestApi.V1.GetMySubscriptions();
            if (payloadCase_ == PayloadOneofCase.GetMySubscriptions) {
              subBuilder.MergeFrom(GetMySubscriptions);
            }
            input.ReadMessage(subBuilder);
            GetMySubscriptions = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MarketDataServerSideStreamRequest : pb::IMessage<MarketDataServerSideStreamRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarketDataServerSideStreamRequest> _parser = new pb::MessageParser<MarketDataServerSideStreamRequest>(() => new MarketDataServerSideStreamRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MarketDataServerSideStreamRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketDataServerSideStreamRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketDataServerSideStreamRequest(MarketDataServerSideStreamRequest other) : this() {
      subscribeCandlesRequest_ = other.subscribeCandlesRequest_ != null ? other.subscribeCandlesRequest_.Clone() : null;
      subscribeOrderBookRequest_ = other.subscribeOrderBookRequest_ != null ? other.subscribeOrderBookRequest_.Clone() : null;
      subscribeTradesRequest_ = other.subscribeTradesRequest_ != null ? other.subscribeTradesRequest_.Clone() : null;
      subscribeInfoRequest_ = other.subscribeInfoRequest_ != null ? other.subscribeInfoRequest_.Clone() : null;
      subscribeLastPriceRequest_ = other.subscribeLastPriceRequest_ != null ? other.subscribeLastPriceRequest_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketDataServerSideStreamRequest Clone() {
      return new MarketDataServerSideStreamRequest(this);
    }

    /// <summary>Field number for the "subscribe_candles_request" field.</summary>
    public const int SubscribeCandlesRequestFieldNumber = 1;
    private global::Tinkoff.InvestApi.V1.SubscribeCandlesRequest subscribeCandlesRequest_;
    /// <summary>
    ///Запрос подписки на свечи.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscribeCandlesRequest SubscribeCandlesRequest {
      get { return subscribeCandlesRequest_; }
      set {
        subscribeCandlesRequest_ = value;
      }
    }

    /// <summary>Field number for the "subscribe_order_book_request" field.</summary>
    public const int SubscribeOrderBookRequestFieldNumber = 2;
    private global::Tinkoff.InvestApi.V1.SubscribeOrderBookRequest subscribeOrderBookRequest_;
    /// <summary>
    ///Запрос подписки на стаканы.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscribeOrderBookRequest SubscribeOrderBookRequest {
      get { return subscribeOrderBookRequest_; }
      set {
        subscribeOrderBookRequest_ = value;
      }
    }

    /// <summary>Field number for the "subscribe_trades_request" field.</summary>
    public const int SubscribeTradesRequestFieldNumber = 3;
    private global::Tinkoff.InvestApi.V1.SubscribeTradesRequest subscribeTradesRequest_;
    /// <summary>
    ///Запрос подписки на ленту обезличенных сделок.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscribeTradesRequest SubscribeTradesRequest {
      get { return subscribeTradesRequest_; }
      set {
        subscribeTradesRequest_ = value;
      }
    }

    /// <summary>Field number for the "subscribe_info_request" field.</summary>
    public const int SubscribeInfoRequestFieldNumber = 4;
    private global::Tinkoff.InvestApi.V1.SubscribeInfoRequest subscribeInfoRequest_;
    /// <summary>
    ///Запрос подписки на торговые статусы инструментов.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscribeInfoRequest SubscribeInfoRequest {
      get { return subscribeInfoRequest_; }
      set {
        subscribeInfoRequest_ = value;
      }
    }

    /// <summary>Field number for the "subscribe_last_price_request" field.</summary>
    public const int SubscribeLastPriceRequestFieldNumber = 5;
    private global::Tinkoff.InvestApi.V1.SubscribeLastPriceRequest subscribeLastPriceRequest_;
    /// <summary>
    ///Запрос подписки на цены последних сделок.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscribeLastPriceRequest SubscribeLastPriceRequest {
      get { return subscribeLastPriceRequest_; }
      set {
        subscribeLastPriceRequest_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MarketDataServerSideStreamRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MarketDataServerSideStreamRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SubscribeCandlesRequest, other.SubscribeCandlesRequest)) return false;
      if (!object.Equals(SubscribeOrderBookRequest, other.SubscribeOrderBookRequest)) return false;
      if (!object.Equals(SubscribeTradesRequest, other.SubscribeTradesRequest)) return false;
      if (!object.Equals(SubscribeInfoRequest, other.SubscribeInfoRequest)) return false;
      if (!object.Equals(SubscribeLastPriceRequest, other.SubscribeLastPriceRequest)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (subscribeCandlesRequest_ != null) hash ^= SubscribeCandlesRequest.GetHashCode();
      if (subscribeOrderBookRequest_ != null) hash ^= SubscribeOrderBookRequest.GetHashCode();
      if (subscribeTradesRequest_ != null) hash ^= SubscribeTradesRequest.GetHashCode();
      if (subscribeInfoRequest_ != null) hash ^= SubscribeInfoRequest.GetHashCode();
      if (subscribeLastPriceRequest_ != null) hash ^= SubscribeLastPriceRequest.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (subscribeCandlesRequest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SubscribeCandlesRequest);
      }
      if (subscribeOrderBookRequest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SubscribeOrderBookRequest);
      }
      if (subscribeTradesRequest_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubscribeTradesRequest);
      }
      if (subscribeInfoRequest_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SubscribeInfoRequest);
      }
      if (subscribeLastPriceRequest_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SubscribeLastPriceRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (subscribeCandlesRequest_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SubscribeCandlesRequest);
      }
      if (subscribeOrderBookRequest_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(SubscribeOrderBookRequest);
      }
      if (subscribeTradesRequest_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(SubscribeTradesRequest);
      }
      if (subscribeInfoRequest_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(SubscribeInfoRequest);
      }
      if (subscribeLastPriceRequest_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SubscribeLastPriceRequest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (subscribeCandlesRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscribeCandlesRequest);
      }
      if (subscribeOrderBookRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscribeOrderBookRequest);
      }
      if (subscribeTradesRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscribeTradesRequest);
      }
      if (subscribeInfoRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscribeInfoRequest);
      }
      if (subscribeLastPriceRequest_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscribeLastPriceRequest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MarketDataServerSideStreamRequest other) {
      if (other == null) {
        return;
      }
      if (other.subscribeCandlesRequest_ != null) {
        if (subscribeCandlesRequest_ == null) {
          SubscribeCandlesRequest = new global::Tinkoff.InvestApi.V1.SubscribeCandlesRequest();
        }
        SubscribeCandlesRequest.MergeFrom(other.SubscribeCandlesRequest);
      }
      if (other.subscribeOrderBookRequest_ != null) {
        if (subscribeOrderBookRequest_ == null) {
          SubscribeOrderBookRequest = new global::Tinkoff.InvestApi.V1.SubscribeOrderBookRequest();
        }
        SubscribeOrderBookRequest.MergeFrom(other.SubscribeOrderBookRequest);
      }
      if (other.subscribeTradesRequest_ != null) {
        if (subscribeTradesRequest_ == null) {
          SubscribeTradesRequest = new global::Tinkoff.InvestApi.V1.SubscribeTradesRequest();
        }
        SubscribeTradesRequest.MergeFrom(other.SubscribeTradesRequest);
      }
      if (other.subscribeInfoRequest_ != null) {
        if (subscribeInfoRequest_ == null) {
          SubscribeInfoRequest = new global::Tinkoff.InvestApi.V1.SubscribeInfoRequest();
        }
        SubscribeInfoRequest.MergeFrom(other.SubscribeInfoRequest);
      }
      if (other.subscribeLastPriceRequest_ != null) {
        if (subscribeLastPriceRequest_ == null) {
          SubscribeLastPriceRequest = new global::Tinkoff.InvestApi.V1.SubscribeLastPriceRequest();
        }
        SubscribeLastPriceRequest.MergeFrom(other.SubscribeLastPriceRequest);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (subscribeCandlesRequest_ == null) {
              SubscribeCandlesRequest = new global::Tinkoff.InvestApi.V1.SubscribeCandlesRequest();
            }
            input.ReadMessage(SubscribeCandlesRequest);
            break;
          }
          case 18: {
            if (subscribeOrderBookRequest_ == null) {
              SubscribeOrderBookRequest = new global::Tinkoff.InvestApi.V1.SubscribeOrderBookRequest();
            }
            input.ReadMessage(SubscribeOrderBookRequest);
            break;
          }
          case 26: {
            if (subscribeTradesRequest_ == null) {
              SubscribeTradesRequest = new global::Tinkoff.InvestApi.V1.SubscribeTradesRequest();
            }
            input.ReadMessage(SubscribeTradesRequest);
            break;
          }
          case 34: {
            if (subscribeInfoRequest_ == null) {
              SubscribeInfoRequest = new global::Tinkoff.InvestApi.V1.SubscribeInfoRequest();
            }
            input.ReadMessage(SubscribeInfoRequest);
            break;
          }
          case 42: {
            if (subscribeLastPriceRequest_ == null) {
              SubscribeLastPriceRequest = new global::Tinkoff.InvestApi.V1.SubscribeLastPriceRequest();
            }
            input.ReadMessage(SubscribeLastPriceRequest);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (subscribeCandlesRequest_ == null) {
              SubscribeCandlesRequest = new global::Tinkoff.InvestApi.V1.SubscribeCandlesRequest();
            }
            input.ReadMessage(SubscribeCandlesRequest);
            break;
          }
          case 18: {
            if (subscribeOrderBookRequest_ == null) {
              SubscribeOrderBookRequest = new global::Tinkoff.InvestApi.V1.SubscribeOrderBookRequest();
            }
            input.ReadMessage(SubscribeOrderBookRequest);
            break;
          }
          case 26: {
            if (subscribeTradesRequest_ == null) {
              SubscribeTradesRequest = new global::Tinkoff.InvestApi.V1.SubscribeTradesRequest();
            }
            input.ReadMessage(SubscribeTradesRequest);
            break;
          }
          case 34: {
            if (subscribeInfoRequest_ == null) {
              SubscribeInfoRequest = new global::Tinkoff.InvestApi.V1.SubscribeInfoRequest();
            }
            input.ReadMessage(SubscribeInfoRequest);
            break;
          }
          case 42: {
            if (subscribeLastPriceRequest_ == null) {
              SubscribeLastPriceRequest = new global::Tinkoff.InvestApi.V1.SubscribeLastPriceRequest();
            }
            input.ReadMessage(SubscribeLastPriceRequest);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Пакет биржевой информации по подписке.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class MarketDataResponse : pb::IMessage<MarketDataResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MarketDataResponse> _parser = new pb::MessageParser<MarketDataResponse>(() => new MarketDataResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MarketDataResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketDataResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketDataResponse(MarketDataResponse other) : this() {
      switch (other.PayloadCase) {
        case PayloadOneofCase.SubscribeCandlesResponse:
          SubscribeCandlesResponse = other.SubscribeCandlesResponse.Clone();
          break;
        case PayloadOneofCase.SubscribeOrderBookResponse:
          SubscribeOrderBookResponse = other.SubscribeOrderBookResponse.Clone();
          break;
        case PayloadOneofCase.SubscribeTradesResponse:
          SubscribeTradesResponse = other.SubscribeTradesResponse.Clone();
          break;
        case PayloadOneofCase.SubscribeInfoResponse:
          SubscribeInfoResponse = other.SubscribeInfoResponse.Clone();
          break;
        case PayloadOneofCase.Candle:
          Candle = other.Candle.Clone();
          break;
        case PayloadOneofCase.Trade:
          Trade = other.Trade.Clone();
          break;
        case PayloadOneofCase.Orderbook:
          Orderbook = other.Orderbook.Clone();
          break;
        case PayloadOneofCase.TradingStatus:
          TradingStatus = other.TradingStatus.Clone();
          break;
        case PayloadOneofCase.Ping:
          Ping = other.Ping.Clone();
          break;
        case PayloadOneofCase.SubscribeLastPriceResponse:
          SubscribeLastPriceResponse = other.SubscribeLastPriceResponse.Clone();
          break;
        case PayloadOneofCase.LastPrice:
          LastPrice = other.LastPrice.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MarketDataResponse Clone() {
      return new MarketDataResponse(this);
    }

    /// <summary>Field number for the "subscribe_candles_response" field.</summary>
    public const int SubscribeCandlesResponseFieldNumber = 1;
    /// <summary>
    ///Результат подписки на свечи.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscribeCandlesResponse SubscribeCandlesResponse {
      get { return payloadCase_ == PayloadOneofCase.SubscribeCandlesResponse ? (global::Tinkoff.InvestApi.V1.SubscribeCandlesResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SubscribeCandlesResponse;
      }
    }

    /// <summary>Field number for the "subscribe_order_book_response" field.</summary>
    public const int SubscribeOrderBookResponseFieldNumber = 2;
    /// <summary>
    ///Результат подписки на стаканы.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscribeOrderBookResponse SubscribeOrderBookResponse {
      get { return payloadCase_ == PayloadOneofCase.SubscribeOrderBookResponse ? (global::Tinkoff.InvestApi.V1.SubscribeOrderBookResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SubscribeOrderBookResponse;
      }
    }

    /// <summary>Field number for the "subscribe_trades_response" field.</summary>
    public const int SubscribeTradesResponseFieldNumber = 3;
    /// <summary>
    ///Результат подписки на поток обезличенных сделок.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscribeTradesResponse SubscribeTradesResponse {
      get { return payloadCase_ == PayloadOneofCase.SubscribeTradesResponse ? (global::Tinkoff.InvestApi.V1.SubscribeTradesResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SubscribeTradesResponse;
      }
    }

    /// <summary>Field number for the "subscribe_info_response" field.</summary>
    public const int SubscribeInfoResponseFieldNumber = 4;
    /// <summary>
    ///Результат подписки на торговые статусы инструментов.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscribeInfoResponse SubscribeInfoResponse {
      get { return payloadCase_ == PayloadOneofCase.SubscribeInfoResponse ? (global::Tinkoff.InvestApi.V1.SubscribeInfoResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SubscribeInfoResponse;
      }
    }

    /// <summary>Field number for the "candle" field.</summary>
    public const int CandleFieldNumber = 5;
    /// <summary>
    ///Свеча.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Candle Candle {
      get { return payloadCase_ == PayloadOneofCase.Candle ? (global::Tinkoff.InvestApi.V1.Candle) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Candle;
      }
    }

    /// <summary>Field number for the "trade" field.</summary>
    public const int TradeFieldNumber = 6;
    /// <summary>
    ///Сделки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Trade Trade {
      get { return payloadCase_ == PayloadOneofCase.Trade ? (global::Tinkoff.InvestApi.V1.Trade) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Trade;
      }
    }

    /// <summary>Field number for the "orderbook" field.</summary>
    public const int OrderbookFieldNumber = 7;
    /// <summary>
    ///Стакан.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.OrderBook Orderbook {
      get { return payloadCase_ == PayloadOneofCase.Orderbook ? (global::Tinkoff.InvestApi.V1.OrderBook) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Orderbook;
      }
    }

    /// <summary>Field number for the "trading_status" field.</summary>
    public const int TradingStatusFieldNumber = 8;
    /// <summary>
    ///Торговый статус.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.TradingStatus TradingStatus {
      get { return payloadCase_ == PayloadOneofCase.TradingStatus ? (global::Tinkoff.InvestApi.V1.TradingStatus) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.TradingStatus;
      }
    }

    /// <summary>Field number for the "ping" field.</summary>
    public const int PingFieldNumber = 9;
    /// <summary>
    ///Проверка активности стрима.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Ping Ping {
      get { return payloadCase_ == PayloadOneofCase.Ping ? (global::Tinkoff.InvestApi.V1.Ping) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Ping;
      }
    }

    /// <summary>Field number for the "subscribe_last_price_response" field.</summary>
    public const int SubscribeLastPriceResponseFieldNumber = 10;
    /// <summary>
    ///Результат подписки на цены последние сделок по инструментам.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscribeLastPriceResponse SubscribeLastPriceResponse {
      get { return payloadCase_ == PayloadOneofCase.SubscribeLastPriceResponse ? (global::Tinkoff.InvestApi.V1.SubscribeLastPriceResponse) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.SubscribeLastPriceResponse;
      }
    }

    /// <summary>Field number for the "last_price" field.</summary>
    public const int LastPriceFieldNumber = 11;
    /// <summary>
    ///Цена последней сделки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.LastPrice LastPrice {
      get { return payloadCase_ == PayloadOneofCase.LastPrice ? (global::Tinkoff.InvestApi.V1.LastPrice) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.LastPrice;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      SubscribeCandlesResponse = 1,
      SubscribeOrderBookResponse = 2,
      SubscribeTradesResponse = 3,
      SubscribeInfoResponse = 4,
      Candle = 5,
      Trade = 6,
      Orderbook = 7,
      TradingStatus = 8,
      Ping = 9,
      SubscribeLastPriceResponse = 10,
      LastPrice = 11,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MarketDataResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MarketDataResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SubscribeCandlesResponse, other.SubscribeCandlesResponse)) return false;
      if (!object.Equals(SubscribeOrderBookResponse, other.SubscribeOrderBookResponse)) return false;
      if (!object.Equals(SubscribeTradesResponse, other.SubscribeTradesResponse)) return false;
      if (!object.Equals(SubscribeInfoResponse, other.SubscribeInfoResponse)) return false;
      if (!object.Equals(Candle, other.Candle)) return false;
      if (!object.Equals(Trade, other.Trade)) return false;
      if (!object.Equals(Orderbook, other.Orderbook)) return false;
      if (!object.Equals(TradingStatus, other.TradingStatus)) return false;
      if (!object.Equals(Ping, other.Ping)) return false;
      if (!object.Equals(SubscribeLastPriceResponse, other.SubscribeLastPriceResponse)) return false;
      if (!object.Equals(LastPrice, other.LastPrice)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (payloadCase_ == PayloadOneofCase.SubscribeCandlesResponse) hash ^= SubscribeCandlesResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.SubscribeOrderBookResponse) hash ^= SubscribeOrderBookResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.SubscribeTradesResponse) hash ^= SubscribeTradesResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.SubscribeInfoResponse) hash ^= SubscribeInfoResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Candle) hash ^= Candle.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Trade) hash ^= Trade.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Orderbook) hash ^= Orderbook.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.TradingStatus) hash ^= TradingStatus.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Ping) hash ^= Ping.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.SubscribeLastPriceResponse) hash ^= SubscribeLastPriceResponse.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.LastPrice) hash ^= LastPrice.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (payloadCase_ == PayloadOneofCase.SubscribeCandlesResponse) {
        output.WriteRawTag(10);
        output.WriteMessage(SubscribeCandlesResponse);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeOrderBookResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(SubscribeOrderBookResponse);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeTradesResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(SubscribeTradesResponse);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeInfoResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(SubscribeInfoResponse);
      }
      if (payloadCase_ == PayloadOneofCase.Candle) {
        output.WriteRawTag(42);
        output.WriteMessage(Candle);
      }
      if (payloadCase_ == PayloadOneofCase.Trade) {
        output.WriteRawTag(50);
        output.WriteMessage(Trade);
      }
      if (payloadCase_ == PayloadOneofCase.Orderbook) {
        output.WriteRawTag(58);
        output.WriteMessage(Orderbook);
      }
      if (payloadCase_ == PayloadOneofCase.TradingStatus) {
        output.WriteRawTag(66);
        output.WriteMessage(TradingStatus);
      }
      if (payloadCase_ == PayloadOneofCase.Ping) {
        output.WriteRawTag(74);
        output.WriteMessage(Ping);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeLastPriceResponse) {
        output.WriteRawTag(82);
        output.WriteMessage(SubscribeLastPriceResponse);
      }
      if (payloadCase_ == PayloadOneofCase.LastPrice) {
        output.WriteRawTag(90);
        output.WriteMessage(LastPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (payloadCase_ == PayloadOneofCase.SubscribeCandlesResponse) {
        output.WriteRawTag(10);
        output.WriteMessage(SubscribeCandlesResponse);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeOrderBookResponse) {
        output.WriteRawTag(18);
        output.WriteMessage(SubscribeOrderBookResponse);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeTradesResponse) {
        output.WriteRawTag(26);
        output.WriteMessage(SubscribeTradesResponse);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeInfoResponse) {
        output.WriteRawTag(34);
        output.WriteMessage(SubscribeInfoResponse);
      }
      if (payloadCase_ == PayloadOneofCase.Candle) {
        output.WriteRawTag(42);
        output.WriteMessage(Candle);
      }
      if (payloadCase_ == PayloadOneofCase.Trade) {
        output.WriteRawTag(50);
        output.WriteMessage(Trade);
      }
      if (payloadCase_ == PayloadOneofCase.Orderbook) {
        output.WriteRawTag(58);
        output.WriteMessage(Orderbook);
      }
      if (payloadCase_ == PayloadOneofCase.TradingStatus) {
        output.WriteRawTag(66);
        output.WriteMessage(TradingStatus);
      }
      if (payloadCase_ == PayloadOneofCase.Ping) {
        output.WriteRawTag(74);
        output.WriteMessage(Ping);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeLastPriceResponse) {
        output.WriteRawTag(82);
        output.WriteMessage(SubscribeLastPriceResponse);
      }
      if (payloadCase_ == PayloadOneofCase.LastPrice) {
        output.WriteRawTag(90);
        output.WriteMessage(LastPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (payloadCase_ == PayloadOneofCase.SubscribeCandlesResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscribeCandlesResponse);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeOrderBookResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscribeOrderBookResponse);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeTradesResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscribeTradesResponse);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeInfoResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscribeInfoResponse);
      }
      if (payloadCase_ == PayloadOneofCase.Candle) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Candle);
      }
      if (payloadCase_ == PayloadOneofCase.Trade) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Trade);
      }
      if (payloadCase_ == PayloadOneofCase.Orderbook) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Orderbook);
      }
      if (payloadCase_ == PayloadOneofCase.TradingStatus) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TradingStatus);
      }
      if (payloadCase_ == PayloadOneofCase.Ping) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ping);
      }
      if (payloadCase_ == PayloadOneofCase.SubscribeLastPriceResponse) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SubscribeLastPriceResponse);
      }
      if (payloadCase_ == PayloadOneofCase.LastPrice) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastPrice);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MarketDataResponse other) {
      if (other == null) {
        return;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.SubscribeCandlesResponse:
          if (SubscribeCandlesResponse == null) {
            SubscribeCandlesResponse = new global::Tinkoff.InvestApi.V1.SubscribeCandlesResponse();
          }
          SubscribeCandlesResponse.MergeFrom(other.SubscribeCandlesResponse);
          break;
        case PayloadOneofCase.SubscribeOrderBookResponse:
          if (SubscribeOrderBookResponse == null) {
            SubscribeOrderBookResponse = new global::Tinkoff.InvestApi.V1.SubscribeOrderBookResponse();
          }
          SubscribeOrderBookResponse.MergeFrom(other.SubscribeOrderBookResponse);
          break;
        case PayloadOneofCase.SubscribeTradesResponse:
          if (SubscribeTradesResponse == null) {
            SubscribeTradesResponse = new global::Tinkoff.InvestApi.V1.SubscribeTradesResponse();
          }
          SubscribeTradesResponse.MergeFrom(other.SubscribeTradesResponse);
          break;
        case PayloadOneofCase.SubscribeInfoResponse:
          if (SubscribeInfoResponse == null) {
            SubscribeInfoResponse = new global::Tinkoff.InvestApi.V1.SubscribeInfoResponse();
          }
          SubscribeInfoResponse.MergeFrom(other.SubscribeInfoResponse);
          break;
        case PayloadOneofCase.Candle:
          if (Candle == null) {
            Candle = new global::Tinkoff.InvestApi.V1.Candle();
          }
          Candle.MergeFrom(other.Candle);
          break;
        case PayloadOneofCase.Trade:
          if (Trade == null) {
            Trade = new global::Tinkoff.InvestApi.V1.Trade();
          }
          Trade.MergeFrom(other.Trade);
          break;
        case PayloadOneofCase.Orderbook:
          if (Orderbook == null) {
            Orderbook = new global::Tinkoff.InvestApi.V1.OrderBook();
          }
          Orderbook.MergeFrom(other.Orderbook);
          break;
        case PayloadOneofCase.TradingStatus:
          if (TradingStatus == null) {
            TradingStatus = new global::Tinkoff.InvestApi.V1.TradingStatus();
          }
          TradingStatus.MergeFrom(other.TradingStatus);
          break;
        case PayloadOneofCase.Ping:
          if (Ping == null) {
            Ping = new global::Tinkoff.InvestApi.V1.Ping();
          }
          Ping.MergeFrom(other.Ping);
          break;
        case PayloadOneofCase.SubscribeLastPriceResponse:
          if (SubscribeLastPriceResponse == null) {
            SubscribeLastPriceResponse = new global::Tinkoff.InvestApi.V1.SubscribeLastPriceResponse();
          }
          SubscribeLastPriceResponse.MergeFrom(other.SubscribeLastPriceResponse);
          break;
        case PayloadOneofCase.LastPrice:
          if (LastPrice == null) {
            LastPrice = new global::Tinkoff.InvestApi.V1.LastPrice();
          }
          LastPrice.MergeFrom(other.LastPrice);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Tinkoff.InvestApi.V1.SubscribeCandlesResponse subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeCandlesResponse();
            if (payloadCase_ == PayloadOneofCase.SubscribeCandlesResponse) {
              subBuilder.MergeFrom(SubscribeCandlesResponse);
            }
            input.ReadMessage(subBuilder);
            SubscribeCandlesResponse = subBuilder;
            break;
          }
          case 18: {
            global::Tinkoff.InvestApi.V1.SubscribeOrderBookResponse subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeOrderBookResponse();
            if (payloadCase_ == PayloadOneofCase.SubscribeOrderBookResponse) {
              subBuilder.MergeFrom(SubscribeOrderBookResponse);
            }
            input.ReadMessage(subBuilder);
            SubscribeOrderBookResponse = subBuilder;
            break;
          }
          case 26: {
            global::Tinkoff.InvestApi.V1.SubscribeTradesResponse subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeTradesResponse();
            if (payloadCase_ == PayloadOneofCase.SubscribeTradesResponse) {
              subBuilder.MergeFrom(SubscribeTradesResponse);
            }
            input.ReadMessage(subBuilder);
            SubscribeTradesResponse = subBuilder;
            break;
          }
          case 34: {
            global::Tinkoff.InvestApi.V1.SubscribeInfoResponse subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeInfoResponse();
            if (payloadCase_ == PayloadOneofCase.SubscribeInfoResponse) {
              subBuilder.MergeFrom(SubscribeInfoResponse);
            }
            input.ReadMessage(subBuilder);
            SubscribeInfoResponse = subBuilder;
            break;
          }
          case 42: {
            global::Tinkoff.InvestApi.V1.Candle subBuilder = new global::Tinkoff.InvestApi.V1.Candle();
            if (payloadCase_ == PayloadOneofCase.Candle) {
              subBuilder.MergeFrom(Candle);
            }
            input.ReadMessage(subBuilder);
            Candle = subBuilder;
            break;
          }
          case 50: {
            global::Tinkoff.InvestApi.V1.Trade subBuilder = new global::Tinkoff.InvestApi.V1.Trade();
            if (payloadCase_ == PayloadOneofCase.Trade) {
              subBuilder.MergeFrom(Trade);
            }
            input.ReadMessage(subBuilder);
            Trade = subBuilder;
            break;
          }
          case 58: {
            global::Tinkoff.InvestApi.V1.OrderBook subBuilder = new global::Tinkoff.InvestApi.V1.OrderBook();
            if (payloadCase_ == PayloadOneofCase.Orderbook) {
              subBuilder.MergeFrom(Orderbook);
            }
            input.ReadMessage(subBuilder);
            Orderbook = subBuilder;
            break;
          }
          case 66: {
            global::Tinkoff.InvestApi.V1.TradingStatus subBuilder = new global::Tinkoff.InvestApi.V1.TradingStatus();
            if (payloadCase_ == PayloadOneofCase.TradingStatus) {
              subBuilder.MergeFrom(TradingStatus);
            }
            input.ReadMessage(subBuilder);
            TradingStatus = subBuilder;
            break;
          }
          case 74: {
            global::Tinkoff.InvestApi.V1.Ping subBuilder = new global::Tinkoff.InvestApi.V1.Ping();
            if (payloadCase_ == PayloadOneofCase.Ping) {
              subBuilder.MergeFrom(Ping);
            }
            input.ReadMessage(subBuilder);
            Ping = subBuilder;
            break;
          }
          case 82: {
            global::Tinkoff.InvestApi.V1.SubscribeLastPriceResponse subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeLastPriceResponse();
            if (payloadCase_ == PayloadOneofCase.SubscribeLastPriceResponse) {
              subBuilder.MergeFrom(SubscribeLastPriceResponse);
            }
            input.ReadMessage(subBuilder);
            SubscribeLastPriceResponse = subBuilder;
            break;
          }
          case 90: {
            global::Tinkoff.InvestApi.V1.LastPrice subBuilder = new global::Tinkoff.InvestApi.V1.LastPrice();
            if (payloadCase_ == PayloadOneofCase.LastPrice) {
              subBuilder.MergeFrom(LastPrice);
            }
            input.ReadMessage(subBuilder);
            LastPrice = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::Tinkoff.InvestApi.V1.SubscribeCandlesResponse subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeCandlesResponse();
            if (payloadCase_ == PayloadOneofCase.SubscribeCandlesResponse) {
              subBuilder.MergeFrom(SubscribeCandlesResponse);
            }
            input.ReadMessage(subBuilder);
            SubscribeCandlesResponse = subBuilder;
            break;
          }
          case 18: {
            global::Tinkoff.InvestApi.V1.SubscribeOrderBookResponse subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeOrderBookResponse();
            if (payloadCase_ == PayloadOneofCase.SubscribeOrderBookResponse) {
              subBuilder.MergeFrom(SubscribeOrderBookResponse);
            }
            input.ReadMessage(subBuilder);
            SubscribeOrderBookResponse = subBuilder;
            break;
          }
          case 26: {
            global::Tinkoff.InvestApi.V1.SubscribeTradesResponse subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeTradesResponse();
            if (payloadCase_ == PayloadOneofCase.SubscribeTradesResponse) {
              subBuilder.MergeFrom(SubscribeTradesResponse);
            }
            input.ReadMessage(subBuilder);
            SubscribeTradesResponse = subBuilder;
            break;
          }
          case 34: {
            global::Tinkoff.InvestApi.V1.SubscribeInfoResponse subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeInfoResponse();
            if (payloadCase_ == PayloadOneofCase.SubscribeInfoResponse) {
              subBuilder.MergeFrom(SubscribeInfoResponse);
            }
            input.ReadMessage(subBuilder);
            SubscribeInfoResponse = subBuilder;
            break;
          }
          case 42: {
            global::Tinkoff.InvestApi.V1.Candle subBuilder = new global::Tinkoff.InvestApi.V1.Candle();
            if (payloadCase_ == PayloadOneofCase.Candle) {
              subBuilder.MergeFrom(Candle);
            }
            input.ReadMessage(subBuilder);
            Candle = subBuilder;
            break;
          }
          case 50: {
            global::Tinkoff.InvestApi.V1.Trade subBuilder = new global::Tinkoff.InvestApi.V1.Trade();
            if (payloadCase_ == PayloadOneofCase.Trade) {
              subBuilder.MergeFrom(Trade);
            }
            input.ReadMessage(subBuilder);
            Trade = subBuilder;
            break;
          }
          case 58: {
            global::Tinkoff.InvestApi.V1.OrderBook subBuilder = new global::Tinkoff.InvestApi.V1.OrderBook();
            if (payloadCase_ == PayloadOneofCase.Orderbook) {
              subBuilder.MergeFrom(Orderbook);
            }
            input.ReadMessage(subBuilder);
            Orderbook = subBuilder;
            break;
          }
          case 66: {
            global::Tinkoff.InvestApi.V1.TradingStatus subBuilder = new global::Tinkoff.InvestApi.V1.TradingStatus();
            if (payloadCase_ == PayloadOneofCase.TradingStatus) {
              subBuilder.MergeFrom(TradingStatus);
            }
            input.ReadMessage(subBuilder);
            TradingStatus = subBuilder;
            break;
          }
          case 74: {
            global::Tinkoff.InvestApi.V1.Ping subBuilder = new global::Tinkoff.InvestApi.V1.Ping();
            if (payloadCase_ == PayloadOneofCase.Ping) {
              subBuilder.MergeFrom(Ping);
            }
            input.ReadMessage(subBuilder);
            Ping = subBuilder;
            break;
          }
          case 82: {
            global::Tinkoff.InvestApi.V1.SubscribeLastPriceResponse subBuilder = new global::Tinkoff.InvestApi.V1.SubscribeLastPriceResponse();
            if (payloadCase_ == PayloadOneofCase.SubscribeLastPriceResponse) {
              subBuilder.MergeFrom(SubscribeLastPriceResponse);
            }
            input.ReadMessage(subBuilder);
            SubscribeLastPriceResponse = subBuilder;
            break;
          }
          case 90: {
            global::Tinkoff.InvestApi.V1.LastPrice subBuilder = new global::Tinkoff.InvestApi.V1.LastPrice();
            if (payloadCase_ == PayloadOneofCase.LastPrice) {
              subBuilder.MergeFrom(LastPrice);
            }
            input.ReadMessage(subBuilder);
            LastPrice = subBuilder;
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// subscribeCandles | Изменения статуса подписки на свечи.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SubscribeCandlesRequest : pb::IMessage<SubscribeCandlesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscribeCandlesRequest> _parser = new pb::MessageParser<SubscribeCandlesRequest>(() => new SubscribeCandlesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubscribeCandlesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeCandlesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeCandlesRequest(SubscribeCandlesRequest other) : this() {
      subscriptionAction_ = other.subscriptionAction_;
      instruments_ = other.instruments_.Clone();
      waitingClose_ = other.waitingClose_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeCandlesRequest Clone() {
      return new SubscribeCandlesRequest(this);
    }

    /// <summary>Field number for the "subscription_action" field.</summary>
    public const int SubscriptionActionFieldNumber = 1;
    private global::Tinkoff.InvestApi.V1.SubscriptionAction subscriptionAction_ = global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified;
    /// <summary>
    ///Изменение статуса подписки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscriptionAction SubscriptionAction {
      get { return subscriptionAction_; }
      set {
        subscriptionAction_ = value;
      }
    }

    /// <summary>Field number for the "instruments" field.</summary>
    public const int InstrumentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.CandleInstrument> _repeated_instruments_codec
        = pb::FieldCodec.ForMessage(18, global::Tinkoff.InvestApi.V1.CandleInstrument.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.CandleInstrument> instruments_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.CandleInstrument>();
    /// <summary>
    ///Массив инструментов для подписки на свечи.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.CandleInstrument> Instruments {
      get { return instruments_; }
    }

    /// <summary>Field number for the "waiting_close" field.</summary>
    public const int WaitingCloseFieldNumber = 3;
    private bool waitingClose_;
    /// <summary>
    ///Флаг ожидания закрытия временного интервала для отправки свечи.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WaitingClose {
      get { return waitingClose_; }
      set {
        waitingClose_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubscribeCandlesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubscribeCandlesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubscriptionAction != other.SubscriptionAction) return false;
      if(!instruments_.Equals(other.instruments_)) return false;
      if (WaitingClose != other.WaitingClose) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) hash ^= SubscriptionAction.GetHashCode();
      hash ^= instruments_.GetHashCode();
      if (WaitingClose != false) hash ^= WaitingClose.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SubscriptionAction);
      }
      instruments_.WriteTo(output, _repeated_instruments_codec);
      if (WaitingClose != false) {
        output.WriteRawTag(24);
        output.WriteBool(WaitingClose);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SubscriptionAction);
      }
      instruments_.WriteTo(ref output, _repeated_instruments_codec);
      if (WaitingClose != false) {
        output.WriteRawTag(24);
        output.WriteBool(WaitingClose);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubscriptionAction);
      }
      size += instruments_.CalculateSize(_repeated_instruments_codec);
      if (WaitingClose != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubscribeCandlesRequest other) {
      if (other == null) {
        return;
      }
      if (other.SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        SubscriptionAction = other.SubscriptionAction;
      }
      instruments_.Add(other.instruments_);
      if (other.WaitingClose != false) {
        WaitingClose = other.WaitingClose;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SubscriptionAction = (global::Tinkoff.InvestApi.V1.SubscriptionAction) input.ReadEnum();
            break;
          }
          case 18: {
            instruments_.AddEntriesFrom(input, _repeated_instruments_codec);
            break;
          }
          case 24: {
            WaitingClose = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SubscriptionAction = (global::Tinkoff.InvestApi.V1.SubscriptionAction) input.ReadEnum();
            break;
          }
          case 18: {
            instruments_.AddEntriesFrom(ref input, _repeated_instruments_codec);
            break;
          }
          case 24: {
            WaitingClose = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Запрос изменения статус подписки на свечи.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CandleInstrument : pb::IMessage<CandleInstrument>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CandleInstrument> _parser = new pb::MessageParser<CandleInstrument>(() => new CandleInstrument());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CandleInstrument> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CandleInstrument() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CandleInstrument(CandleInstrument other) : this() {
      figi_ = other.figi_;
      interval_ = other.interval_;
      instrumentId_ = other.instrumentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CandleInstrument Clone() {
      return new CandleInstrument(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    /// Deprecated Figi-идентификатор инструмента. Необходимо использовать instrument_id.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "interval" field.</summary>
    public const int IntervalFieldNumber = 2;
    private global::Tinkoff.InvestApi.V1.SubscriptionInterval interval_ = global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified;
    /// <summary>
    ///Интервал свечей. (Двухчасовые и четырехчасовые свечи в стриме отсчитываются с 0:00 по UTC)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscriptionInterval Interval {
      get { return interval_; }
      set {
        interval_ = value;
      }
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 3;
    private string instrumentId_ = "";
    /// <summary>
    ///Идентификатор инструмента, принимает значение figi или instrument_uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CandleInstrument);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CandleInstrument other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (Interval != other.Interval) return false;
      if (InstrumentId != other.InstrumentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (Interval != global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified) hash ^= Interval.GetHashCode();
      if (InstrumentId.Length != 0) hash ^= InstrumentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Interval != global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Interval);
      }
      if (InstrumentId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Interval != global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Interval);
      }
      if (InstrumentId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (Interval != global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Interval);
      }
      if (InstrumentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CandleInstrument other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.Interval != global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified) {
        Interval = other.Interval;
      }
      if (other.InstrumentId.Length != 0) {
        InstrumentId = other.InstrumentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Interval = (global::Tinkoff.InvestApi.V1.SubscriptionInterval) input.ReadEnum();
            break;
          }
          case 26: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Interval = (global::Tinkoff.InvestApi.V1.SubscriptionInterval) input.ReadEnum();
            break;
          }
          case 26: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Результат изменения статус подписки на свечи.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SubscribeCandlesResponse : pb::IMessage<SubscribeCandlesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscribeCandlesResponse> _parser = new pb::MessageParser<SubscribeCandlesResponse>(() => new SubscribeCandlesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubscribeCandlesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeCandlesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeCandlesResponse(SubscribeCandlesResponse other) : this() {
      trackingId_ = other.trackingId_;
      candlesSubscriptions_ = other.candlesSubscriptions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeCandlesResponse Clone() {
      return new SubscribeCandlesResponse(this);
    }

    /// <summary>Field number for the "tracking_id" field.</summary>
    public const int TrackingIdFieldNumber = 1;
    private string trackingId_ = "";
    /// <summary>
    ///Уникальный идентификатор запроса, подробнее: [tracking_id](https://russianinvestments.github.io/investAPI/grpc#tracking-id).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TrackingId {
      get { return trackingId_; }
      set {
        trackingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "candles_subscriptions" field.</summary>
    public const int CandlesSubscriptionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.CandleSubscription> _repeated_candlesSubscriptions_codec
        = pb::FieldCodec.ForMessage(18, global::Tinkoff.InvestApi.V1.CandleSubscription.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.CandleSubscription> candlesSubscriptions_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.CandleSubscription>();
    /// <summary>
    ///Массив статусов подписки на свечи.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.CandleSubscription> CandlesSubscriptions {
      get { return candlesSubscriptions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubscribeCandlesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubscribeCandlesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TrackingId != other.TrackingId) return false;
      if(!candlesSubscriptions_.Equals(other.candlesSubscriptions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TrackingId.Length != 0) hash ^= TrackingId.GetHashCode();
      hash ^= candlesSubscriptions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TrackingId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TrackingId);
      }
      candlesSubscriptions_.WriteTo(output, _repeated_candlesSubscriptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TrackingId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TrackingId);
      }
      candlesSubscriptions_.WriteTo(ref output, _repeated_candlesSubscriptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TrackingId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrackingId);
      }
      size += candlesSubscriptions_.CalculateSize(_repeated_candlesSubscriptions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubscribeCandlesResponse other) {
      if (other == null) {
        return;
      }
      if (other.TrackingId.Length != 0) {
        TrackingId = other.TrackingId;
      }
      candlesSubscriptions_.Add(other.candlesSubscriptions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TrackingId = input.ReadString();
            break;
          }
          case 18: {
            candlesSubscriptions_.AddEntriesFrom(input, _repeated_candlesSubscriptions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TrackingId = input.ReadString();
            break;
          }
          case 18: {
            candlesSubscriptions_.AddEntriesFrom(ref input, _repeated_candlesSubscriptions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Статус подписки на свечи.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class CandleSubscription : pb::IMessage<CandleSubscription>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CandleSubscription> _parser = new pb::MessageParser<CandleSubscription>(() => new CandleSubscription());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<CandleSubscription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CandleSubscription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CandleSubscription(CandleSubscription other) : this() {
      figi_ = other.figi_;
      interval_ = other.interval_;
      subscriptionStatus_ = other.subscriptionStatus_;
      instrumentUid_ = other.instrumentUid_;
      waitingClose_ = other.waitingClose_;
      streamId_ = other.streamId_;
      subscriptionId_ = other.subscriptionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public CandleSubscription Clone() {
      return new CandleSubscription(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    ///Figi-идентификатор инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "interval" field.</summary>
    public const int IntervalFieldNumber = 2;
    private global::Tinkoff.InvestApi.V1.SubscriptionInterval interval_ = global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified;
    /// <summary>
    ///Интервал свечей.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscriptionInterval Interval {
      get { return interval_; }
      set {
        interval_ = value;
      }
    }

    /// <summary>Field number for the "subscription_status" field.</summary>
    public const int SubscriptionStatusFieldNumber = 3;
    private global::Tinkoff.InvestApi.V1.SubscriptionStatus subscriptionStatus_ = global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified;
    /// <summary>
    ///Статус подписки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscriptionStatus SubscriptionStatus {
      get { return subscriptionStatus_; }
      set {
        subscriptionStatus_ = value;
      }
    }

    /// <summary>Field number for the "instrument_uid" field.</summary>
    public const int InstrumentUidFieldNumber = 4;
    private string instrumentUid_ = "";
    /// <summary>
    ///Uid инструмента
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentUid {
      get { return instrumentUid_; }
      set {
        instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "waiting_close" field.</summary>
    public const int WaitingCloseFieldNumber = 5;
    private bool waitingClose_;
    /// <summary>
    ///Флаг ожидания закрытия временного интервала для отправки свечи
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool WaitingClose {
      get { return waitingClose_; }
      set {
        waitingClose_ = value;
      }
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 6;
    private string streamId_ = "";
    /// <summary>
    ///Идентификатор открытого соединения
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StreamId {
      get { return streamId_; }
      set {
        streamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subscription_id" field.</summary>
    public const int SubscriptionIdFieldNumber = 7;
    private string subscriptionId_ = "";
    /// <summary>
    ///Идентификатор подписки в формате UUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SubscriptionId {
      get { return subscriptionId_; }
      set {
        subscriptionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as CandleSubscription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(CandleSubscription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (Interval != other.Interval) return false;
      if (SubscriptionStatus != other.SubscriptionStatus) return false;
      if (InstrumentUid != other.InstrumentUid) return false;
      if (WaitingClose != other.WaitingClose) return false;
      if (StreamId != other.StreamId) return false;
      if (SubscriptionId != other.SubscriptionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (Interval != global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified) hash ^= Interval.GetHashCode();
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) hash ^= SubscriptionStatus.GetHashCode();
      if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
      if (WaitingClose != false) hash ^= WaitingClose.GetHashCode();
      if (StreamId.Length != 0) hash ^= StreamId.GetHashCode();
      if (SubscriptionId.Length != 0) hash ^= SubscriptionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Interval != global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Interval);
      }
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) SubscriptionStatus);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(InstrumentUid);
      }
      if (WaitingClose != false) {
        output.WriteRawTag(40);
        output.WriteBool(WaitingClose);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StreamId);
      }
      if (SubscriptionId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SubscriptionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Interval != global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Interval);
      }
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) SubscriptionStatus);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(InstrumentUid);
      }
      if (WaitingClose != false) {
        output.WriteRawTag(40);
        output.WriteBool(WaitingClose);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(StreamId);
      }
      if (SubscriptionId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SubscriptionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (Interval != global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Interval);
      }
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubscriptionStatus);
      }
      if (InstrumentUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
      }
      if (WaitingClose != false) {
        size += 1 + 1;
      }
      if (StreamId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StreamId);
      }
      if (SubscriptionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubscriptionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(CandleSubscription other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.Interval != global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified) {
        Interval = other.Interval;
      }
      if (other.SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        SubscriptionStatus = other.SubscriptionStatus;
      }
      if (other.InstrumentUid.Length != 0) {
        InstrumentUid = other.InstrumentUid;
      }
      if (other.WaitingClose != false) {
        WaitingClose = other.WaitingClose;
      }
      if (other.StreamId.Length != 0) {
        StreamId = other.StreamId;
      }
      if (other.SubscriptionId.Length != 0) {
        SubscriptionId = other.SubscriptionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Interval = (global::Tinkoff.InvestApi.V1.SubscriptionInterval) input.ReadEnum();
            break;
          }
          case 24: {
            SubscriptionStatus = (global::Tinkoff.InvestApi.V1.SubscriptionStatus) input.ReadEnum();
            break;
          }
          case 34: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 40: {
            WaitingClose = input.ReadBool();
            break;
          }
          case 50: {
            StreamId = input.ReadString();
            break;
          }
          case 58: {
            SubscriptionId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Interval = (global::Tinkoff.InvestApi.V1.SubscriptionInterval) input.ReadEnum();
            break;
          }
          case 24: {
            SubscriptionStatus = (global::Tinkoff.InvestApi.V1.SubscriptionStatus) input.ReadEnum();
            break;
          }
          case 34: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 40: {
            WaitingClose = input.ReadBool();
            break;
          }
          case 50: {
            StreamId = input.ReadString();
            break;
          }
          case 58: {
            SubscriptionId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Запрос на изменение статуса подписки на стаканы.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SubscribeOrderBookRequest : pb::IMessage<SubscribeOrderBookRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscribeOrderBookRequest> _parser = new pb::MessageParser<SubscribeOrderBookRequest>(() => new SubscribeOrderBookRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubscribeOrderBookRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeOrderBookRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeOrderBookRequest(SubscribeOrderBookRequest other) : this() {
      subscriptionAction_ = other.subscriptionAction_;
      instruments_ = other.instruments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeOrderBookRequest Clone() {
      return new SubscribeOrderBookRequest(this);
    }

    /// <summary>Field number for the "subscription_action" field.</summary>
    public const int SubscriptionActionFieldNumber = 1;
    private global::Tinkoff.InvestApi.V1.SubscriptionAction subscriptionAction_ = global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified;
    /// <summary>
    ///Изменение статуса подписки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscriptionAction SubscriptionAction {
      get { return subscriptionAction_; }
      set {
        subscriptionAction_ = value;
      }
    }

    /// <summary>Field number for the "instruments" field.</summary>
    public const int InstrumentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.OrderBookInstrument> _repeated_instruments_codec
        = pb::FieldCodec.ForMessage(18, global::Tinkoff.InvestApi.V1.OrderBookInstrument.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.OrderBookInstrument> instruments_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.OrderBookInstrument>();
    /// <summary>
    ///Массив инструментов для подписки на стаканы.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.OrderBookInstrument> Instruments {
      get { return instruments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubscribeOrderBookRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubscribeOrderBookRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubscriptionAction != other.SubscriptionAction) return false;
      if(!instruments_.Equals(other.instruments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) hash ^= SubscriptionAction.GetHashCode();
      hash ^= instruments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SubscriptionAction);
      }
      instruments_.WriteTo(output, _repeated_instruments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SubscriptionAction);
      }
      instruments_.WriteTo(ref output, _repeated_instruments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubscriptionAction);
      }
      size += instruments_.CalculateSize(_repeated_instruments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubscribeOrderBookRequest other) {
      if (other == null) {
        return;
      }
      if (other.SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        SubscriptionAction = other.SubscriptionAction;
      }
      instruments_.Add(other.instruments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SubscriptionAction = (global::Tinkoff.InvestApi.V1.SubscriptionAction) input.ReadEnum();
            break;
          }
          case 18: {
            instruments_.AddEntriesFrom(input, _repeated_instruments_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SubscriptionAction = (global::Tinkoff.InvestApi.V1.SubscriptionAction) input.ReadEnum();
            break;
          }
          case 18: {
            instruments_.AddEntriesFrom(ref input, _repeated_instruments_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Запрос подписки на стаканы.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class OrderBookInstrument : pb::IMessage<OrderBookInstrument>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderBookInstrument> _parser = new pb::MessageParser<OrderBookInstrument>(() => new OrderBookInstrument());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OrderBookInstrument> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderBookInstrument() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderBookInstrument(OrderBookInstrument other) : this() {
      figi_ = other.figi_;
      depth_ = other.depth_;
      instrumentId_ = other.instrumentId_;
      orderBookType_ = other.orderBookType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderBookInstrument Clone() {
      return new OrderBookInstrument(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    ///Deprecated Figi-идентификатор инструмента. Необходимо использовать instrument_id.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "depth" field.</summary>
    public const int DepthFieldNumber = 2;
    private int depth_;
    /// <summary>
    ///Глубина стакана.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Depth {
      get { return depth_; }
      set {
        depth_ = value;
      }
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 3;
    private string instrumentId_ = "";
    /// <summary>
    ///Идентификатор инструмента, принимает значение figi или instrument_uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_book_type" field.</summary>
    public const int OrderBookTypeFieldNumber = 4;
    private global::Tinkoff.InvestApi.V1.OrderBookType orderBookType_ = global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified;
    /// <summary>
    ///Тип стакана
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.OrderBookType OrderBookType {
      get { return orderBookType_; }
      set {
        orderBookType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OrderBookInstrument);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OrderBookInstrument other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (Depth != other.Depth) return false;
      if (InstrumentId != other.InstrumentId) return false;
      if (OrderBookType != other.OrderBookType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (Depth != 0) hash ^= Depth.GetHashCode();
      if (InstrumentId.Length != 0) hash ^= InstrumentId.GetHashCode();
      if (OrderBookType != global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified) hash ^= OrderBookType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Depth != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Depth);
      }
      if (InstrumentId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InstrumentId);
      }
      if (OrderBookType != global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) OrderBookType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Depth != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Depth);
      }
      if (InstrumentId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InstrumentId);
      }
      if (OrderBookType != global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) OrderBookType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (Depth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Depth);
      }
      if (InstrumentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentId);
      }
      if (OrderBookType != global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderBookType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OrderBookInstrument other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.Depth != 0) {
        Depth = other.Depth;
      }
      if (other.InstrumentId.Length != 0) {
        InstrumentId = other.InstrumentId;
      }
      if (other.OrderBookType != global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified) {
        OrderBookType = other.OrderBookType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Depth = input.ReadInt32();
            break;
          }
          case 26: {
            InstrumentId = input.ReadString();
            break;
          }
          case 32: {
            OrderBookType = (global::Tinkoff.InvestApi.V1.OrderBookType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Depth = input.ReadInt32();
            break;
          }
          case 26: {
            InstrumentId = input.ReadString();
            break;
          }
          case 32: {
            OrderBookType = (global::Tinkoff.InvestApi.V1.OrderBookType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Результат изменения статуса подписки на стаканы.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SubscribeOrderBookResponse : pb::IMessage<SubscribeOrderBookResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscribeOrderBookResponse> _parser = new pb::MessageParser<SubscribeOrderBookResponse>(() => new SubscribeOrderBookResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubscribeOrderBookResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeOrderBookResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeOrderBookResponse(SubscribeOrderBookResponse other) : this() {
      trackingId_ = other.trackingId_;
      orderBookSubscriptions_ = other.orderBookSubscriptions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeOrderBookResponse Clone() {
      return new SubscribeOrderBookResponse(this);
    }

    /// <summary>Field number for the "tracking_id" field.</summary>
    public const int TrackingIdFieldNumber = 1;
    private string trackingId_ = "";
    /// <summary>
    ///Уникальный идентификатор запроса, подробнее: [tracking_id](https://russianinvestments.github.io/investAPI/grpc#tracking-id).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TrackingId {
      get { return trackingId_; }
      set {
        trackingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_book_subscriptions" field.</summary>
    public const int OrderBookSubscriptionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.OrderBookSubscription> _repeated_orderBookSubscriptions_codec
        = pb::FieldCodec.ForMessage(18, global::Tinkoff.InvestApi.V1.OrderBookSubscription.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.OrderBookSubscription> orderBookSubscriptions_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.OrderBookSubscription>();
    /// <summary>
    ///Массив статусов подписки на стаканы.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.OrderBookSubscription> OrderBookSubscriptions {
      get { return orderBookSubscriptions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubscribeOrderBookResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubscribeOrderBookResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TrackingId != other.TrackingId) return false;
      if(!orderBookSubscriptions_.Equals(other.orderBookSubscriptions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TrackingId.Length != 0) hash ^= TrackingId.GetHashCode();
      hash ^= orderBookSubscriptions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TrackingId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TrackingId);
      }
      orderBookSubscriptions_.WriteTo(output, _repeated_orderBookSubscriptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TrackingId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TrackingId);
      }
      orderBookSubscriptions_.WriteTo(ref output, _repeated_orderBookSubscriptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TrackingId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrackingId);
      }
      size += orderBookSubscriptions_.CalculateSize(_repeated_orderBookSubscriptions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubscribeOrderBookResponse other) {
      if (other == null) {
        return;
      }
      if (other.TrackingId.Length != 0) {
        TrackingId = other.TrackingId;
      }
      orderBookSubscriptions_.Add(other.orderBookSubscriptions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TrackingId = input.ReadString();
            break;
          }
          case 18: {
            orderBookSubscriptions_.AddEntriesFrom(input, _repeated_orderBookSubscriptions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TrackingId = input.ReadString();
            break;
          }
          case 18: {
            orderBookSubscriptions_.AddEntriesFrom(ref input, _repeated_orderBookSubscriptions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Статус подписки.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class OrderBookSubscription : pb::IMessage<OrderBookSubscription>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderBookSubscription> _parser = new pb::MessageParser<OrderBookSubscription>(() => new OrderBookSubscription());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OrderBookSubscription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderBookSubscription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderBookSubscription(OrderBookSubscription other) : this() {
      figi_ = other.figi_;
      depth_ = other.depth_;
      subscriptionStatus_ = other.subscriptionStatus_;
      instrumentUid_ = other.instrumentUid_;
      streamId_ = other.streamId_;
      subscriptionId_ = other.subscriptionId_;
      orderBookType_ = other.orderBookType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderBookSubscription Clone() {
      return new OrderBookSubscription(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    ///Figi-идентификатор инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "depth" field.</summary>
    public const int DepthFieldNumber = 2;
    private int depth_;
    /// <summary>
    ///Глубина стакана.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Depth {
      get { return depth_; }
      set {
        depth_ = value;
      }
    }

    /// <summary>Field number for the "subscription_status" field.</summary>
    public const int SubscriptionStatusFieldNumber = 3;
    private global::Tinkoff.InvestApi.V1.SubscriptionStatus subscriptionStatus_ = global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified;
    /// <summary>
    ///Статус подписки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscriptionStatus SubscriptionStatus {
      get { return subscriptionStatus_; }
      set {
        subscriptionStatus_ = value;
      }
    }

    /// <summary>Field number for the "instrument_uid" field.</summary>
    public const int InstrumentUidFieldNumber = 4;
    private string instrumentUid_ = "";
    /// <summary>
    ///Uid инструмента
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentUid {
      get { return instrumentUid_; }
      set {
        instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 5;
    private string streamId_ = "";
    /// <summary>
    ///Идентификатор открытого соединения
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StreamId {
      get { return streamId_; }
      set {
        streamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subscription_id" field.</summary>
    public const int SubscriptionIdFieldNumber = 6;
    private string subscriptionId_ = "";
    /// <summary>
    ///Идентификатор подписки в формате UUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SubscriptionId {
      get { return subscriptionId_; }
      set {
        subscriptionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_book_type" field.</summary>
    public const int OrderBookTypeFieldNumber = 7;
    private global::Tinkoff.InvestApi.V1.OrderBookType orderBookType_ = global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified;
    /// <summary>
    ///Тип стакана
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.OrderBookType OrderBookType {
      get { return orderBookType_; }
      set {
        orderBookType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OrderBookSubscription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OrderBookSubscription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (Depth != other.Depth) return false;
      if (SubscriptionStatus != other.SubscriptionStatus) return false;
      if (InstrumentUid != other.InstrumentUid) return false;
      if (StreamId != other.StreamId) return false;
      if (SubscriptionId != other.SubscriptionId) return false;
      if (OrderBookType != other.OrderBookType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (Depth != 0) hash ^= Depth.GetHashCode();
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) hash ^= SubscriptionStatus.GetHashCode();
      if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
      if (StreamId.Length != 0) hash ^= StreamId.GetHashCode();
      if (SubscriptionId.Length != 0) hash ^= SubscriptionId.GetHashCode();
      if (OrderBookType != global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified) hash ^= OrderBookType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Depth != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Depth);
      }
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) SubscriptionStatus);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(InstrumentUid);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StreamId);
      }
      if (SubscriptionId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SubscriptionId);
      }
      if (OrderBookType != global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) OrderBookType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Depth != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Depth);
      }
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) SubscriptionStatus);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(InstrumentUid);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(StreamId);
      }
      if (SubscriptionId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(SubscriptionId);
      }
      if (OrderBookType != global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified) {
        output.WriteRawTag(56);
        output.WriteEnum((int) OrderBookType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (Depth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Depth);
      }
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubscriptionStatus);
      }
      if (InstrumentUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
      }
      if (StreamId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StreamId);
      }
      if (SubscriptionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubscriptionId);
      }
      if (OrderBookType != global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderBookType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OrderBookSubscription other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.Depth != 0) {
        Depth = other.Depth;
      }
      if (other.SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        SubscriptionStatus = other.SubscriptionStatus;
      }
      if (other.InstrumentUid.Length != 0) {
        InstrumentUid = other.InstrumentUid;
      }
      if (other.StreamId.Length != 0) {
        StreamId = other.StreamId;
      }
      if (other.SubscriptionId.Length != 0) {
        SubscriptionId = other.SubscriptionId;
      }
      if (other.OrderBookType != global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified) {
        OrderBookType = other.OrderBookType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Depth = input.ReadInt32();
            break;
          }
          case 24: {
            SubscriptionStatus = (global::Tinkoff.InvestApi.V1.SubscriptionStatus) input.ReadEnum();
            break;
          }
          case 34: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 42: {
            StreamId = input.ReadString();
            break;
          }
          case 50: {
            SubscriptionId = input.ReadString();
            break;
          }
          case 56: {
            OrderBookType = (global::Tinkoff.InvestApi.V1.OrderBookType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Depth = input.ReadInt32();
            break;
          }
          case 24: {
            SubscriptionStatus = (global::Tinkoff.InvestApi.V1.SubscriptionStatus) input.ReadEnum();
            break;
          }
          case 34: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 42: {
            StreamId = input.ReadString();
            break;
          }
          case 50: {
            SubscriptionId = input.ReadString();
            break;
          }
          case 56: {
            OrderBookType = (global::Tinkoff.InvestApi.V1.OrderBookType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Изменение статуса подписки на поток обезличенных сделок.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SubscribeTradesRequest : pb::IMessage<SubscribeTradesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscribeTradesRequest> _parser = new pb::MessageParser<SubscribeTradesRequest>(() => new SubscribeTradesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubscribeTradesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeTradesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeTradesRequest(SubscribeTradesRequest other) : this() {
      subscriptionAction_ = other.subscriptionAction_;
      instruments_ = other.instruments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeTradesRequest Clone() {
      return new SubscribeTradesRequest(this);
    }

    /// <summary>Field number for the "subscription_action" field.</summary>
    public const int SubscriptionActionFieldNumber = 1;
    private global::Tinkoff.InvestApi.V1.SubscriptionAction subscriptionAction_ = global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified;
    /// <summary>
    ///Изменение статуса подписки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscriptionAction SubscriptionAction {
      get { return subscriptionAction_; }
      set {
        subscriptionAction_ = value;
      }
    }

    /// <summary>Field number for the "instruments" field.</summary>
    public const int InstrumentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.TradeInstrument> _repeated_instruments_codec
        = pb::FieldCodec.ForMessage(18, global::Tinkoff.InvestApi.V1.TradeInstrument.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.TradeInstrument> instruments_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.TradeInstrument>();
    /// <summary>
    ///Массив инструментов для подписки на поток обезличенных сделок.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.TradeInstrument> Instruments {
      get { return instruments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubscribeTradesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubscribeTradesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubscriptionAction != other.SubscriptionAction) return false;
      if(!instruments_.Equals(other.instruments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) hash ^= SubscriptionAction.GetHashCode();
      hash ^= instruments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SubscriptionAction);
      }
      instruments_.WriteTo(output, _repeated_instruments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SubscriptionAction);
      }
      instruments_.WriteTo(ref output, _repeated_instruments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubscriptionAction);
      }
      size += instruments_.CalculateSize(_repeated_instruments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubscribeTradesRequest other) {
      if (other == null) {
        return;
      }
      if (other.SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        SubscriptionAction = other.SubscriptionAction;
      }
      instruments_.Add(other.instruments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SubscriptionAction = (global::Tinkoff.InvestApi.V1.SubscriptionAction) input.ReadEnum();
            break;
          }
          case 18: {
            instruments_.AddEntriesFrom(input, _repeated_instruments_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SubscriptionAction = (global::Tinkoff.InvestApi.V1.SubscriptionAction) input.ReadEnum();
            break;
          }
          case 18: {
            instruments_.AddEntriesFrom(ref input, _repeated_instruments_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Запрос подписки на поток обезличенных сделок.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TradeInstrument : pb::IMessage<TradeInstrument>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TradeInstrument> _parser = new pb::MessageParser<TradeInstrument>(() => new TradeInstrument());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TradeInstrument> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeInstrument() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeInstrument(TradeInstrument other) : this() {
      figi_ = other.figi_;
      instrumentId_ = other.instrumentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeInstrument Clone() {
      return new TradeInstrument(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    ///Deprecated Figi-идентификатор инструмента. Необходимо использовать instrument_id.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 2;
    private string instrumentId_ = "";
    /// <summary>
    ///Идентификатор инструмента, принимает значение figi или instrument_uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TradeInstrument);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TradeInstrument other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (InstrumentId != other.InstrumentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (InstrumentId.Length != 0) hash ^= InstrumentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (InstrumentId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (InstrumentId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (InstrumentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TradeInstrument other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.InstrumentId.Length != 0) {
        InstrumentId = other.InstrumentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 18: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 18: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Результат изменения статуса подписки на поток обезличенных сделок.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SubscribeTradesResponse : pb::IMessage<SubscribeTradesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscribeTradesResponse> _parser = new pb::MessageParser<SubscribeTradesResponse>(() => new SubscribeTradesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubscribeTradesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeTradesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeTradesResponse(SubscribeTradesResponse other) : this() {
      trackingId_ = other.trackingId_;
      tradeSubscriptions_ = other.tradeSubscriptions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeTradesResponse Clone() {
      return new SubscribeTradesResponse(this);
    }

    /// <summary>Field number for the "tracking_id" field.</summary>
    public const int TrackingIdFieldNumber = 1;
    private string trackingId_ = "";
    /// <summary>
    ///Уникальный идентификатор запроса, подробнее: [tracking_id](https://russianinvestments.github.io/investAPI/grpc#tracking-id).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TrackingId {
      get { return trackingId_; }
      set {
        trackingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trade_subscriptions" field.</summary>
    public const int TradeSubscriptionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.TradeSubscription> _repeated_tradeSubscriptions_codec
        = pb::FieldCodec.ForMessage(18, global::Tinkoff.InvestApi.V1.TradeSubscription.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.TradeSubscription> tradeSubscriptions_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.TradeSubscription>();
    /// <summary>
    ///Массив статусов подписки на поток сделок.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.TradeSubscription> TradeSubscriptions {
      get { return tradeSubscriptions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubscribeTradesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubscribeTradesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TrackingId != other.TrackingId) return false;
      if(!tradeSubscriptions_.Equals(other.tradeSubscriptions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TrackingId.Length != 0) hash ^= TrackingId.GetHashCode();
      hash ^= tradeSubscriptions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TrackingId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TrackingId);
      }
      tradeSubscriptions_.WriteTo(output, _repeated_tradeSubscriptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TrackingId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TrackingId);
      }
      tradeSubscriptions_.WriteTo(ref output, _repeated_tradeSubscriptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TrackingId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrackingId);
      }
      size += tradeSubscriptions_.CalculateSize(_repeated_tradeSubscriptions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubscribeTradesResponse other) {
      if (other == null) {
        return;
      }
      if (other.TrackingId.Length != 0) {
        TrackingId = other.TrackingId;
      }
      tradeSubscriptions_.Add(other.tradeSubscriptions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TrackingId = input.ReadString();
            break;
          }
          case 18: {
            tradeSubscriptions_.AddEntriesFrom(input, _repeated_tradeSubscriptions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TrackingId = input.ReadString();
            break;
          }
          case 18: {
            tradeSubscriptions_.AddEntriesFrom(ref input, _repeated_tradeSubscriptions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Статус подписки.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TradeSubscription : pb::IMessage<TradeSubscription>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TradeSubscription> _parser = new pb::MessageParser<TradeSubscription>(() => new TradeSubscription());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TradeSubscription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeSubscription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeSubscription(TradeSubscription other) : this() {
      figi_ = other.figi_;
      subscriptionStatus_ = other.subscriptionStatus_;
      instrumentUid_ = other.instrumentUid_;
      streamId_ = other.streamId_;
      subscriptionId_ = other.subscriptionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradeSubscription Clone() {
      return new TradeSubscription(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    ///Figi-идентификатор инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subscription_status" field.</summary>
    public const int SubscriptionStatusFieldNumber = 2;
    private global::Tinkoff.InvestApi.V1.SubscriptionStatus subscriptionStatus_ = global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified;
    /// <summary>
    ///Статус подписки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscriptionStatus SubscriptionStatus {
      get { return subscriptionStatus_; }
      set {
        subscriptionStatus_ = value;
      }
    }

    /// <summary>Field number for the "instrument_uid" field.</summary>
    public const int InstrumentUidFieldNumber = 3;
    private string instrumentUid_ = "";
    /// <summary>
    ///Uid инструмента
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentUid {
      get { return instrumentUid_; }
      set {
        instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 4;
    private string streamId_ = "";
    /// <summary>
    ///Идентификатор открытого соединения
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StreamId {
      get { return streamId_; }
      set {
        streamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subscription_id" field.</summary>
    public const int SubscriptionIdFieldNumber = 5;
    private string subscriptionId_ = "";
    /// <summary>
    ///Идентификатор подписки в формате UUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SubscriptionId {
      get { return subscriptionId_; }
      set {
        subscriptionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TradeSubscription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TradeSubscription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (SubscriptionStatus != other.SubscriptionStatus) return false;
      if (InstrumentUid != other.InstrumentUid) return false;
      if (StreamId != other.StreamId) return false;
      if (SubscriptionId != other.SubscriptionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) hash ^= SubscriptionStatus.GetHashCode();
      if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
      if (StreamId.Length != 0) hash ^= StreamId.GetHashCode();
      if (SubscriptionId.Length != 0) hash ^= SubscriptionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SubscriptionStatus);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InstrumentUid);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StreamId);
      }
      if (SubscriptionId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SubscriptionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SubscriptionStatus);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InstrumentUid);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StreamId);
      }
      if (SubscriptionId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SubscriptionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubscriptionStatus);
      }
      if (InstrumentUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
      }
      if (StreamId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StreamId);
      }
      if (SubscriptionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubscriptionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TradeSubscription other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        SubscriptionStatus = other.SubscriptionStatus;
      }
      if (other.InstrumentUid.Length != 0) {
        InstrumentUid = other.InstrumentUid;
      }
      if (other.StreamId.Length != 0) {
        StreamId = other.StreamId;
      }
      if (other.SubscriptionId.Length != 0) {
        SubscriptionId = other.SubscriptionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            SubscriptionStatus = (global::Tinkoff.InvestApi.V1.SubscriptionStatus) input.ReadEnum();
            break;
          }
          case 26: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 34: {
            StreamId = input.ReadString();
            break;
          }
          case 42: {
            SubscriptionId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            SubscriptionStatus = (global::Tinkoff.InvestApi.V1.SubscriptionStatus) input.ReadEnum();
            break;
          }
          case 26: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 34: {
            StreamId = input.ReadString();
            break;
          }
          case 42: {
            SubscriptionId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Изменение статуса подписки на торговый статус инструмента.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SubscribeInfoRequest : pb::IMessage<SubscribeInfoRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscribeInfoRequest> _parser = new pb::MessageParser<SubscribeInfoRequest>(() => new SubscribeInfoRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubscribeInfoRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeInfoRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeInfoRequest(SubscribeInfoRequest other) : this() {
      subscriptionAction_ = other.subscriptionAction_;
      instruments_ = other.instruments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeInfoRequest Clone() {
      return new SubscribeInfoRequest(this);
    }

    /// <summary>Field number for the "subscription_action" field.</summary>
    public const int SubscriptionActionFieldNumber = 1;
    private global::Tinkoff.InvestApi.V1.SubscriptionAction subscriptionAction_ = global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified;
    /// <summary>
    ///Изменение статуса подписки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscriptionAction SubscriptionAction {
      get { return subscriptionAction_; }
      set {
        subscriptionAction_ = value;
      }
    }

    /// <summary>Field number for the "instruments" field.</summary>
    public const int InstrumentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.InfoInstrument> _repeated_instruments_codec
        = pb::FieldCodec.ForMessage(18, global::Tinkoff.InvestApi.V1.InfoInstrument.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.InfoInstrument> instruments_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.InfoInstrument>();
    /// <summary>
    ///Массив инструментов для подписки на торговый статус.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.InfoInstrument> Instruments {
      get { return instruments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubscribeInfoRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubscribeInfoRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubscriptionAction != other.SubscriptionAction) return false;
      if(!instruments_.Equals(other.instruments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) hash ^= SubscriptionAction.GetHashCode();
      hash ^= instruments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SubscriptionAction);
      }
      instruments_.WriteTo(output, _repeated_instruments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SubscriptionAction);
      }
      instruments_.WriteTo(ref output, _repeated_instruments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubscriptionAction);
      }
      size += instruments_.CalculateSize(_repeated_instruments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubscribeInfoRequest other) {
      if (other == null) {
        return;
      }
      if (other.SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        SubscriptionAction = other.SubscriptionAction;
      }
      instruments_.Add(other.instruments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SubscriptionAction = (global::Tinkoff.InvestApi.V1.SubscriptionAction) input.ReadEnum();
            break;
          }
          case 18: {
            instruments_.AddEntriesFrom(input, _repeated_instruments_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SubscriptionAction = (global::Tinkoff.InvestApi.V1.SubscriptionAction) input.ReadEnum();
            break;
          }
          case 18: {
            instruments_.AddEntriesFrom(ref input, _repeated_instruments_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Запрос подписки на торговый статус.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InfoInstrument : pb::IMessage<InfoInstrument>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InfoInstrument> _parser = new pb::MessageParser<InfoInstrument>(() => new InfoInstrument());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InfoInstrument> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfoInstrument() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfoInstrument(InfoInstrument other) : this() {
      figi_ = other.figi_;
      instrumentId_ = other.instrumentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfoInstrument Clone() {
      return new InfoInstrument(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    ///Deprecated Figi-идентификатор инструмента. Необходимо использовать instrument_id.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 2;
    private string instrumentId_ = "";
    /// <summary>
    ///Идентификатор инструмента, принимает значение figi или instrument_uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InfoInstrument);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InfoInstrument other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (InstrumentId != other.InstrumentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (InstrumentId.Length != 0) hash ^= InstrumentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (InstrumentId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (InstrumentId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (InstrumentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InfoInstrument other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.InstrumentId.Length != 0) {
        InstrumentId = other.InstrumentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 18: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 18: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Результат изменения статуса подписки на торговый статус.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SubscribeInfoResponse : pb::IMessage<SubscribeInfoResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscribeInfoResponse> _parser = new pb::MessageParser<SubscribeInfoResponse>(() => new SubscribeInfoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubscribeInfoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeInfoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeInfoResponse(SubscribeInfoResponse other) : this() {
      trackingId_ = other.trackingId_;
      infoSubscriptions_ = other.infoSubscriptions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeInfoResponse Clone() {
      return new SubscribeInfoResponse(this);
    }

    /// <summary>Field number for the "tracking_id" field.</summary>
    public const int TrackingIdFieldNumber = 1;
    private string trackingId_ = "";
    /// <summary>
    ///Уникальный идентификатор запроса, подробнее: [tracking_id](https://russianinvestments.github.io/investAPI/grpc#tracking-id).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TrackingId {
      get { return trackingId_; }
      set {
        trackingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "info_subscriptions" field.</summary>
    public const int InfoSubscriptionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.InfoSubscription> _repeated_infoSubscriptions_codec
        = pb::FieldCodec.ForMessage(18, global::Tinkoff.InvestApi.V1.InfoSubscription.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.InfoSubscription> infoSubscriptions_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.InfoSubscription>();
    /// <summary>
    ///Массив статусов подписки на торговый статус.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.InfoSubscription> InfoSubscriptions {
      get { return infoSubscriptions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubscribeInfoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubscribeInfoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TrackingId != other.TrackingId) return false;
      if(!infoSubscriptions_.Equals(other.infoSubscriptions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TrackingId.Length != 0) hash ^= TrackingId.GetHashCode();
      hash ^= infoSubscriptions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TrackingId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TrackingId);
      }
      infoSubscriptions_.WriteTo(output, _repeated_infoSubscriptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TrackingId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TrackingId);
      }
      infoSubscriptions_.WriteTo(ref output, _repeated_infoSubscriptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TrackingId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrackingId);
      }
      size += infoSubscriptions_.CalculateSize(_repeated_infoSubscriptions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubscribeInfoResponse other) {
      if (other == null) {
        return;
      }
      if (other.TrackingId.Length != 0) {
        TrackingId = other.TrackingId;
      }
      infoSubscriptions_.Add(other.infoSubscriptions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TrackingId = input.ReadString();
            break;
          }
          case 18: {
            infoSubscriptions_.AddEntriesFrom(input, _repeated_infoSubscriptions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TrackingId = input.ReadString();
            break;
          }
          case 18: {
            infoSubscriptions_.AddEntriesFrom(ref input, _repeated_infoSubscriptions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Статус подписки.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InfoSubscription : pb::IMessage<InfoSubscription>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InfoSubscription> _parser = new pb::MessageParser<InfoSubscription>(() => new InfoSubscription());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InfoSubscription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfoSubscription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfoSubscription(InfoSubscription other) : this() {
      figi_ = other.figi_;
      subscriptionStatus_ = other.subscriptionStatus_;
      instrumentUid_ = other.instrumentUid_;
      streamId_ = other.streamId_;
      subscriptionId_ = other.subscriptionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InfoSubscription Clone() {
      return new InfoSubscription(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    ///Figi-идентификатор инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subscription_status" field.</summary>
    public const int SubscriptionStatusFieldNumber = 2;
    private global::Tinkoff.InvestApi.V1.SubscriptionStatus subscriptionStatus_ = global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified;
    /// <summary>
    ///Статус подписки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscriptionStatus SubscriptionStatus {
      get { return subscriptionStatus_; }
      set {
        subscriptionStatus_ = value;
      }
    }

    /// <summary>Field number for the "instrument_uid" field.</summary>
    public const int InstrumentUidFieldNumber = 3;
    private string instrumentUid_ = "";
    /// <summary>
    ///Uid инструмента
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentUid {
      get { return instrumentUid_; }
      set {
        instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 4;
    private string streamId_ = "";
    /// <summary>
    ///Идентификатор открытого соединения
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StreamId {
      get { return streamId_; }
      set {
        streamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subscription_id" field.</summary>
    public const int SubscriptionIdFieldNumber = 5;
    private string subscriptionId_ = "";
    /// <summary>
    ///Идентификатор подписки в формате UUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SubscriptionId {
      get { return subscriptionId_; }
      set {
        subscriptionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InfoSubscription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InfoSubscription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (SubscriptionStatus != other.SubscriptionStatus) return false;
      if (InstrumentUid != other.InstrumentUid) return false;
      if (StreamId != other.StreamId) return false;
      if (SubscriptionId != other.SubscriptionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) hash ^= SubscriptionStatus.GetHashCode();
      if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
      if (StreamId.Length != 0) hash ^= StreamId.GetHashCode();
      if (SubscriptionId.Length != 0) hash ^= SubscriptionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SubscriptionStatus);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InstrumentUid);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StreamId);
      }
      if (SubscriptionId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SubscriptionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SubscriptionStatus);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InstrumentUid);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StreamId);
      }
      if (SubscriptionId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SubscriptionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubscriptionStatus);
      }
      if (InstrumentUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
      }
      if (StreamId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StreamId);
      }
      if (SubscriptionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubscriptionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InfoSubscription other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        SubscriptionStatus = other.SubscriptionStatus;
      }
      if (other.InstrumentUid.Length != 0) {
        InstrumentUid = other.InstrumentUid;
      }
      if (other.StreamId.Length != 0) {
        StreamId = other.StreamId;
      }
      if (other.SubscriptionId.Length != 0) {
        SubscriptionId = other.SubscriptionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            SubscriptionStatus = (global::Tinkoff.InvestApi.V1.SubscriptionStatus) input.ReadEnum();
            break;
          }
          case 26: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 34: {
            StreamId = input.ReadString();
            break;
          }
          case 42: {
            SubscriptionId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            SubscriptionStatus = (global::Tinkoff.InvestApi.V1.SubscriptionStatus) input.ReadEnum();
            break;
          }
          case 26: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 34: {
            StreamId = input.ReadString();
            break;
          }
          case 42: {
            SubscriptionId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Изменение статуса подписки на цену последней сделки по инструменту.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SubscribeLastPriceRequest : pb::IMessage<SubscribeLastPriceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscribeLastPriceRequest> _parser = new pb::MessageParser<SubscribeLastPriceRequest>(() => new SubscribeLastPriceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubscribeLastPriceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeLastPriceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeLastPriceRequest(SubscribeLastPriceRequest other) : this() {
      subscriptionAction_ = other.subscriptionAction_;
      instruments_ = other.instruments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeLastPriceRequest Clone() {
      return new SubscribeLastPriceRequest(this);
    }

    /// <summary>Field number for the "subscription_action" field.</summary>
    public const int SubscriptionActionFieldNumber = 1;
    private global::Tinkoff.InvestApi.V1.SubscriptionAction subscriptionAction_ = global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified;
    /// <summary>
    ///Изменение статуса подписки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscriptionAction SubscriptionAction {
      get { return subscriptionAction_; }
      set {
        subscriptionAction_ = value;
      }
    }

    /// <summary>Field number for the "instruments" field.</summary>
    public const int InstrumentsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.LastPriceInstrument> _repeated_instruments_codec
        = pb::FieldCodec.ForMessage(18, global::Tinkoff.InvestApi.V1.LastPriceInstrument.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.LastPriceInstrument> instruments_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.LastPriceInstrument>();
    /// <summary>
    ///Массив инструментов для подписки на цену последней сделки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.LastPriceInstrument> Instruments {
      get { return instruments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubscribeLastPriceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubscribeLastPriceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SubscriptionAction != other.SubscriptionAction) return false;
      if(!instruments_.Equals(other.instruments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) hash ^= SubscriptionAction.GetHashCode();
      hash ^= instruments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SubscriptionAction);
      }
      instruments_.WriteTo(output, _repeated_instruments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) SubscriptionAction);
      }
      instruments_.WriteTo(ref output, _repeated_instruments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubscriptionAction);
      }
      size += instruments_.CalculateSize(_repeated_instruments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubscribeLastPriceRequest other) {
      if (other == null) {
        return;
      }
      if (other.SubscriptionAction != global::Tinkoff.InvestApi.V1.SubscriptionAction.Unspecified) {
        SubscriptionAction = other.SubscriptionAction;
      }
      instruments_.Add(other.instruments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SubscriptionAction = (global::Tinkoff.InvestApi.V1.SubscriptionAction) input.ReadEnum();
            break;
          }
          case 18: {
            instruments_.AddEntriesFrom(input, _repeated_instruments_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            SubscriptionAction = (global::Tinkoff.InvestApi.V1.SubscriptionAction) input.ReadEnum();
            break;
          }
          case 18: {
            instruments_.AddEntriesFrom(ref input, _repeated_instruments_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Запрос подписки на последнюю цену.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LastPriceInstrument : pb::IMessage<LastPriceInstrument>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LastPriceInstrument> _parser = new pb::MessageParser<LastPriceInstrument>(() => new LastPriceInstrument());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LastPriceInstrument> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastPriceInstrument() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastPriceInstrument(LastPriceInstrument other) : this() {
      figi_ = other.figi_;
      instrumentId_ = other.instrumentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastPriceInstrument Clone() {
      return new LastPriceInstrument(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    ///Deprecated Figi-идентификатор инструмента. Необходимо использовать instrument_id.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 2;
    private string instrumentId_ = "";
    /// <summary>
    ///Идентификатор инструмента, принимает значение figi или instrument_uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LastPriceInstrument);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LastPriceInstrument other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (InstrumentId != other.InstrumentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (InstrumentId.Length != 0) hash ^= InstrumentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (InstrumentId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (InstrumentId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (InstrumentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LastPriceInstrument other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.InstrumentId.Length != 0) {
        InstrumentId = other.InstrumentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 18: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 18: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Результат изменения статуса подписки на цену последней сделки.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class SubscribeLastPriceResponse : pb::IMessage<SubscribeLastPriceResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SubscribeLastPriceResponse> _parser = new pb::MessageParser<SubscribeLastPriceResponse>(() => new SubscribeLastPriceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SubscribeLastPriceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeLastPriceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeLastPriceResponse(SubscribeLastPriceResponse other) : this() {
      trackingId_ = other.trackingId_;
      lastPriceSubscriptions_ = other.lastPriceSubscriptions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SubscribeLastPriceResponse Clone() {
      return new SubscribeLastPriceResponse(this);
    }

    /// <summary>Field number for the "tracking_id" field.</summary>
    public const int TrackingIdFieldNumber = 1;
    private string trackingId_ = "";
    /// <summary>
    ///Уникальный идентификатор запроса, подробнее: [tracking_id](https://russianinvestments.github.io/investAPI/grpc#tracking-id).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TrackingId {
      get { return trackingId_; }
      set {
        trackingId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "last_price_subscriptions" field.</summary>
    public const int LastPriceSubscriptionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.LastPriceSubscription> _repeated_lastPriceSubscriptions_codec
        = pb::FieldCodec.ForMessage(18, global::Tinkoff.InvestApi.V1.LastPriceSubscription.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.LastPriceSubscription> lastPriceSubscriptions_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.LastPriceSubscription>();
    /// <summary>
    ///Массив статусов подписки на цену последней сделки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.LastPriceSubscription> LastPriceSubscriptions {
      get { return lastPriceSubscriptions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SubscribeLastPriceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SubscribeLastPriceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TrackingId != other.TrackingId) return false;
      if(!lastPriceSubscriptions_.Equals(other.lastPriceSubscriptions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TrackingId.Length != 0) hash ^= TrackingId.GetHashCode();
      hash ^= lastPriceSubscriptions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TrackingId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TrackingId);
      }
      lastPriceSubscriptions_.WriteTo(output, _repeated_lastPriceSubscriptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TrackingId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TrackingId);
      }
      lastPriceSubscriptions_.WriteTo(ref output, _repeated_lastPriceSubscriptions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TrackingId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TrackingId);
      }
      size += lastPriceSubscriptions_.CalculateSize(_repeated_lastPriceSubscriptions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SubscribeLastPriceResponse other) {
      if (other == null) {
        return;
      }
      if (other.TrackingId.Length != 0) {
        TrackingId = other.TrackingId;
      }
      lastPriceSubscriptions_.Add(other.lastPriceSubscriptions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TrackingId = input.ReadString();
            break;
          }
          case 18: {
            lastPriceSubscriptions_.AddEntriesFrom(input, _repeated_lastPriceSubscriptions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TrackingId = input.ReadString();
            break;
          }
          case 18: {
            lastPriceSubscriptions_.AddEntriesFrom(ref input, _repeated_lastPriceSubscriptions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Статус подписки на цену последней сделки.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LastPriceSubscription : pb::IMessage<LastPriceSubscription>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LastPriceSubscription> _parser = new pb::MessageParser<LastPriceSubscription>(() => new LastPriceSubscription());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LastPriceSubscription> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastPriceSubscription() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastPriceSubscription(LastPriceSubscription other) : this() {
      figi_ = other.figi_;
      subscriptionStatus_ = other.subscriptionStatus_;
      instrumentUid_ = other.instrumentUid_;
      streamId_ = other.streamId_;
      subscriptionId_ = other.subscriptionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastPriceSubscription Clone() {
      return new LastPriceSubscription(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    ///Figi-идентификатор инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subscription_status" field.</summary>
    public const int SubscriptionStatusFieldNumber = 2;
    private global::Tinkoff.InvestApi.V1.SubscriptionStatus subscriptionStatus_ = global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified;
    /// <summary>
    ///Статус подписки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscriptionStatus SubscriptionStatus {
      get { return subscriptionStatus_; }
      set {
        subscriptionStatus_ = value;
      }
    }

    /// <summary>Field number for the "instrument_uid" field.</summary>
    public const int InstrumentUidFieldNumber = 3;
    private string instrumentUid_ = "";
    /// <summary>
    ///Uid инструмента
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentUid {
      get { return instrumentUid_; }
      set {
        instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "stream_id" field.</summary>
    public const int StreamIdFieldNumber = 4;
    private string streamId_ = "";
    /// <summary>
    ///Идентификатор открытого соединения
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string StreamId {
      get { return streamId_; }
      set {
        streamId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subscription_id" field.</summary>
    public const int SubscriptionIdFieldNumber = 5;
    private string subscriptionId_ = "";
    /// <summary>
    ///Идентификатор подписки в формате UUID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string SubscriptionId {
      get { return subscriptionId_; }
      set {
        subscriptionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LastPriceSubscription);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LastPriceSubscription other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (SubscriptionStatus != other.SubscriptionStatus) return false;
      if (InstrumentUid != other.InstrumentUid) return false;
      if (StreamId != other.StreamId) return false;
      if (SubscriptionId != other.SubscriptionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) hash ^= SubscriptionStatus.GetHashCode();
      if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
      if (StreamId.Length != 0) hash ^= StreamId.GetHashCode();
      if (SubscriptionId.Length != 0) hash ^= SubscriptionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SubscriptionStatus);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InstrumentUid);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StreamId);
      }
      if (SubscriptionId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SubscriptionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SubscriptionStatus);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(InstrumentUid);
      }
      if (StreamId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(StreamId);
      }
      if (SubscriptionId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(SubscriptionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SubscriptionStatus);
      }
      if (InstrumentUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
      }
      if (StreamId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StreamId);
      }
      if (SubscriptionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubscriptionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LastPriceSubscription other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.SubscriptionStatus != global::Tinkoff.InvestApi.V1.SubscriptionStatus.Unspecified) {
        SubscriptionStatus = other.SubscriptionStatus;
      }
      if (other.InstrumentUid.Length != 0) {
        InstrumentUid = other.InstrumentUid;
      }
      if (other.StreamId.Length != 0) {
        StreamId = other.StreamId;
      }
      if (other.SubscriptionId.Length != 0) {
        SubscriptionId = other.SubscriptionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            SubscriptionStatus = (global::Tinkoff.InvestApi.V1.SubscriptionStatus) input.ReadEnum();
            break;
          }
          case 26: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 34: {
            StreamId = input.ReadString();
            break;
          }
          case 42: {
            SubscriptionId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            SubscriptionStatus = (global::Tinkoff.InvestApi.V1.SubscriptionStatus) input.ReadEnum();
            break;
          }
          case 26: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 34: {
            StreamId = input.ReadString();
            break;
          }
          case 42: {
            SubscriptionId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Пакет свечей в рамках стрима.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Candle : pb::IMessage<Candle>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Candle> _parser = new pb::MessageParser<Candle>(() => new Candle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Candle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Candle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Candle(Candle other) : this() {
      figi_ = other.figi_;
      interval_ = other.interval_;
      open_ = other.open_ != null ? other.open_.Clone() : null;
      high_ = other.high_ != null ? other.high_.Clone() : null;
      low_ = other.low_ != null ? other.low_.Clone() : null;
      close_ = other.close_ != null ? other.close_.Clone() : null;
      volume_ = other.volume_;
      time_ = other.time_ != null ? other.time_.Clone() : null;
      lastTradeTs_ = other.lastTradeTs_ != null ? other.lastTradeTs_.Clone() : null;
      instrumentUid_ = other.instrumentUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Candle Clone() {
      return new Candle(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    ///Figi-идентификатор инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "interval" field.</summary>
    public const int IntervalFieldNumber = 2;
    private global::Tinkoff.InvestApi.V1.SubscriptionInterval interval_ = global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified;
    /// <summary>
    ///Интервал свечи.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SubscriptionInterval Interval {
      get { return interval_; }
      set {
        interval_ = value;
      }
    }

    /// <summary>Field number for the "open" field.</summary>
    public const int OpenFieldNumber = 3;
    private global::Tinkoff.InvestApi.V1.Quotation open_;
    /// <summary>
    ///Цена открытия за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://russianinvestments.github.io/investAPI/faq_marketdata/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation Open {
      get { return open_; }
      set {
        open_ = value;
      }
    }

    /// <summary>Field number for the "high" field.</summary>
    public const int HighFieldNumber = 4;
    private global::Tinkoff.InvestApi.V1.Quotation high_;
    /// <summary>
    ///Максимальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://russianinvestments.github.io/investAPI/faq_marketdata/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation High {
      get { return high_; }
      set {
        high_ = value;
      }
    }

    /// <summary>Field number for the "low" field.</summary>
    public const int LowFieldNumber = 5;
    private global::Tinkoff.InvestApi.V1.Quotation low_;
    /// <summary>
    ///Минимальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://russianinvestments.github.io/investAPI/faq_marketdata/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation Low {
      get { return low_; }
      set {
        low_ = value;
      }
    }

    /// <summary>Field number for the "close" field.</summary>
    public const int CloseFieldNumber = 6;
    private global::Tinkoff.InvestApi.V1.Quotation close_;
    /// <summary>
    ///Цена закрытия за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://russianinvestments.github.io/investAPI/faq_marketdata/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation Close {
      get { return close_; }
      set {
        close_ = value;
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 7;
    private long volume_;
    /// <summary>
    ///Объём сделок в лотах.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 8;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    /// <summary>
    ///Время начала интервала свечи в часовом поясе UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "last_trade_ts" field.</summary>
    public const int LastTradeTsFieldNumber = 9;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastTradeTs_;
    /// <summary>
    ///Время последней сделки, вошедшей в свечу в часовом поясе UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastTradeTs {
      get { return lastTradeTs_; }
      set {
        lastTradeTs_ = value;
      }
    }

    /// <summary>Field number for the "instrument_uid" field.</summary>
    public const int InstrumentUidFieldNumber = 10;
    private string instrumentUid_ = "";
    /// <summary>
    ///Uid инструмента
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentUid {
      get { return instrumentUid_; }
      set {
        instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Candle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Candle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (Interval != other.Interval) return false;
      if (!object.Equals(Open, other.Open)) return false;
      if (!object.Equals(High, other.High)) return false;
      if (!object.Equals(Low, other.Low)) return false;
      if (!object.Equals(Close, other.Close)) return false;
      if (Volume != other.Volume) return false;
      if (!object.Equals(Time, other.Time)) return false;
      if (!object.Equals(LastTradeTs, other.LastTradeTs)) return false;
      if (InstrumentUid != other.InstrumentUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (Interval != global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified) hash ^= Interval.GetHashCode();
      if (open_ != null) hash ^= Open.GetHashCode();
      if (high_ != null) hash ^= High.GetHashCode();
      if (low_ != null) hash ^= Low.GetHashCode();
      if (close_ != null) hash ^= Close.GetHashCode();
      if (Volume != 0L) hash ^= Volume.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (lastTradeTs_ != null) hash ^= LastTradeTs.GetHashCode();
      if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Interval != global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Interval);
      }
      if (open_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Open);
      }
      if (high_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(High);
      }
      if (low_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Low);
      }
      if (close_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Close);
      }
      if (Volume != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Volume);
      }
      if (time_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Time);
      }
      if (lastTradeTs_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(LastTradeTs);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(InstrumentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Interval != global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Interval);
      }
      if (open_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Open);
      }
      if (high_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(High);
      }
      if (low_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Low);
      }
      if (close_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Close);
      }
      if (Volume != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(Volume);
      }
      if (time_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Time);
      }
      if (lastTradeTs_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(LastTradeTs);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(InstrumentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (Interval != global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Interval);
      }
      if (open_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Open);
      }
      if (high_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(High);
      }
      if (low_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Low);
      }
      if (close_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Close);
      }
      if (Volume != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Volume);
      }
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (lastTradeTs_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastTradeTs);
      }
      if (InstrumentUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Candle other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.Interval != global::Tinkoff.InvestApi.V1.SubscriptionInterval.Unspecified) {
        Interval = other.Interval;
      }
      if (other.open_ != null) {
        if (open_ == null) {
          Open = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        Open.MergeFrom(other.Open);
      }
      if (other.high_ != null) {
        if (high_ == null) {
          High = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        High.MergeFrom(other.High);
      }
      if (other.low_ != null) {
        if (low_ == null) {
          Low = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        Low.MergeFrom(other.Low);
      }
      if (other.close_ != null) {
        if (close_ == null) {
          Close = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        Close.MergeFrom(other.Close);
      }
      if (other.Volume != 0L) {
        Volume = other.Volume;
      }
      if (other.time_ != null) {
        if (time_ == null) {
          Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      if (other.lastTradeTs_ != null) {
        if (lastTradeTs_ == null) {
          LastTradeTs = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastTradeTs.MergeFrom(other.LastTradeTs);
      }
      if (other.InstrumentUid.Length != 0) {
        InstrumentUid = other.InstrumentUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Interval = (global::Tinkoff.InvestApi.V1.SubscriptionInterval) input.ReadEnum();
            break;
          }
          case 26: {
            if (open_ == null) {
              Open = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Open);
            break;
          }
          case 34: {
            if (high_ == null) {
              High = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(High);
            break;
          }
          case 42: {
            if (low_ == null) {
              Low = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Low);
            break;
          }
          case 50: {
            if (close_ == null) {
              Close = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Close);
            break;
          }
          case 56: {
            Volume = input.ReadInt64();
            break;
          }
          case 66: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 74: {
            if (lastTradeTs_ == null) {
              LastTradeTs = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastTradeTs);
            break;
          }
          case 82: {
            InstrumentUid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Interval = (global::Tinkoff.InvestApi.V1.SubscriptionInterval) input.ReadEnum();
            break;
          }
          case 26: {
            if (open_ == null) {
              Open = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Open);
            break;
          }
          case 34: {
            if (high_ == null) {
              High = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(High);
            break;
          }
          case 42: {
            if (low_ == null) {
              Low = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Low);
            break;
          }
          case 50: {
            if (close_ == null) {
              Close = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Close);
            break;
          }
          case 56: {
            Volume = input.ReadInt64();
            break;
          }
          case 66: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 74: {
            if (lastTradeTs_ == null) {
              LastTradeTs = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastTradeTs);
            break;
          }
          case 82: {
            InstrumentUid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Пакет стаканов в рамках стрима.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class OrderBook : pb::IMessage<OrderBook>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<OrderBook> _parser = new pb::MessageParser<OrderBook>(() => new OrderBook());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<OrderBook> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderBook() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderBook(OrderBook other) : this() {
      figi_ = other.figi_;
      depth_ = other.depth_;
      isConsistent_ = other.isConsistent_;
      bids_ = other.bids_.Clone();
      asks_ = other.asks_.Clone();
      time_ = other.time_ != null ? other.time_.Clone() : null;
      limitUp_ = other.limitUp_ != null ? other.limitUp_.Clone() : null;
      limitDown_ = other.limitDown_ != null ? other.limitDown_.Clone() : null;
      instrumentUid_ = other.instrumentUid_;
      orderBookType_ = other.orderBookType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public OrderBook Clone() {
      return new OrderBook(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    ///Figi-идентификатор инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "depth" field.</summary>
    public const int DepthFieldNumber = 2;
    private int depth_;
    /// <summary>
    ///Глубина стакана.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Depth {
      get { return depth_; }
      set {
        depth_ = value;
      }
    }

    /// <summary>Field number for the "is_consistent" field.</summary>
    public const int IsConsistentFieldNumber = 3;
    private bool isConsistent_;
    /// <summary>
    ///Флаг консистентности стакана. **false** значит не все заявки попали в стакан по причинам сетевых задержек или нарушения порядка доставки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsConsistent {
      get { return isConsistent_; }
      set {
        isConsistent_ = value;
      }
    }

    /// <summary>Field number for the "bids" field.</summary>
    public const int BidsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.Order> _repeated_bids_codec
        = pb::FieldCodec.ForMessage(34, global::Tinkoff.InvestApi.V1.Order.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.Order> bids_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.Order>();
    /// <summary>
    ///Массив предложений.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.Order> Bids {
      get { return bids_; }
    }

    /// <summary>Field number for the "asks" field.</summary>
    public const int AsksFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.Order> _repeated_asks_codec
        = pb::FieldCodec.ForMessage(42, global::Tinkoff.InvestApi.V1.Order.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.Order> asks_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.Order>();
    /// <summary>
    ///Массив спроса.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.Order> Asks {
      get { return asks_; }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    /// <summary>
    ///Время формирования стакана в часовом поясе UTC по времени биржи.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "limit_up" field.</summary>
    public const int LimitUpFieldNumber = 7;
    private global::Tinkoff.InvestApi.V1.Quotation limitUp_;
    /// <summary>
    ///Верхний лимит цены за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://russianinvestments.github.io/investAPI/faq_marketdata/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation LimitUp {
      get { return limitUp_; }
      set {
        limitUp_ = value;
      }
    }

    /// <summary>Field number for the "limit_down" field.</summary>
    public const int LimitDownFieldNumber = 8;
    private global::Tinkoff.InvestApi.V1.Quotation limitDown_;
    /// <summary>
    ///Нижний лимит цены за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://russianinvestments.github.io/investAPI/faq_marketdata/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation LimitDown {
      get { return limitDown_; }
      set {
        limitDown_ = value;
      }
    }

    /// <summary>Field number for the "instrument_uid" field.</summary>
    public const int InstrumentUidFieldNumber = 9;
    private string instrumentUid_ = "";
    /// <summary>
    ///Uid инструмента
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentUid {
      get { return instrumentUid_; }
      set {
        instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_book_type" field.</summary>
    public const int OrderBookTypeFieldNumber = 10;
    private global::Tinkoff.InvestApi.V1.OrderBookType orderBookType_ = global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified;
    /// <summary>
    ///Тип стакана
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.OrderBookType OrderBookType {
      get { return orderBookType_; }
      set {
        orderBookType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as OrderBook);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(OrderBook other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (Depth != other.Depth) return false;
      if (IsConsistent != other.IsConsistent) return false;
      if(!bids_.Equals(other.bids_)) return false;
      if(!asks_.Equals(other.asks_)) return false;
      if (!object.Equals(Time, other.Time)) return false;
      if (!object.Equals(LimitUp, other.LimitUp)) return false;
      if (!object.Equals(LimitDown, other.LimitDown)) return false;
      if (InstrumentUid != other.InstrumentUid) return false;
      if (OrderBookType != other.OrderBookType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (Depth != 0) hash ^= Depth.GetHashCode();
      if (IsConsistent != false) hash ^= IsConsistent.GetHashCode();
      hash ^= bids_.GetHashCode();
      hash ^= asks_.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (limitUp_ != null) hash ^= LimitUp.GetHashCode();
      if (limitDown_ != null) hash ^= LimitDown.GetHashCode();
      if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
      if (OrderBookType != global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified) hash ^= OrderBookType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Depth != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Depth);
      }
      if (IsConsistent != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsConsistent);
      }
      bids_.WriteTo(output, _repeated_bids_codec);
      asks_.WriteTo(output, _repeated_asks_codec);
      if (time_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Time);
      }
      if (limitUp_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LimitUp);
      }
      if (limitDown_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LimitDown);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(InstrumentUid);
      }
      if (OrderBookType != global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) OrderBookType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Depth != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Depth);
      }
      if (IsConsistent != false) {
        output.WriteRawTag(24);
        output.WriteBool(IsConsistent);
      }
      bids_.WriteTo(ref output, _repeated_bids_codec);
      asks_.WriteTo(ref output, _repeated_asks_codec);
      if (time_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Time);
      }
      if (limitUp_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LimitUp);
      }
      if (limitDown_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LimitDown);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(InstrumentUid);
      }
      if (OrderBookType != global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) OrderBookType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (Depth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Depth);
      }
      if (IsConsistent != false) {
        size += 1 + 1;
      }
      size += bids_.CalculateSize(_repeated_bids_codec);
      size += asks_.CalculateSize(_repeated_asks_codec);
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (limitUp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LimitUp);
      }
      if (limitDown_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LimitDown);
      }
      if (InstrumentUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
      }
      if (OrderBookType != global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) OrderBookType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(OrderBook other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.Depth != 0) {
        Depth = other.Depth;
      }
      if (other.IsConsistent != false) {
        IsConsistent = other.IsConsistent;
      }
      bids_.Add(other.bids_);
      asks_.Add(other.asks_);
      if (other.time_ != null) {
        if (time_ == null) {
          Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      if (other.limitUp_ != null) {
        if (limitUp_ == null) {
          LimitUp = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        LimitUp.MergeFrom(other.LimitUp);
      }
      if (other.limitDown_ != null) {
        if (limitDown_ == null) {
          LimitDown = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        LimitDown.MergeFrom(other.LimitDown);
      }
      if (other.InstrumentUid.Length != 0) {
        InstrumentUid = other.InstrumentUid;
      }
      if (other.OrderBookType != global::Tinkoff.InvestApi.V1.OrderBookType.Unspecified) {
        OrderBookType = other.OrderBookType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Depth = input.ReadInt32();
            break;
          }
          case 24: {
            IsConsistent = input.ReadBool();
            break;
          }
          case 34: {
            bids_.AddEntriesFrom(input, _repeated_bids_codec);
            break;
          }
          case 42: {
            asks_.AddEntriesFrom(input, _repeated_asks_codec);
            break;
          }
          case 50: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 58: {
            if (limitUp_ == null) {
              LimitUp = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(LimitUp);
            break;
          }
          case 66: {
            if (limitDown_ == null) {
              LimitDown = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(LimitDown);
            break;
          }
          case 74: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 80: {
            OrderBookType = (global::Tinkoff.InvestApi.V1.OrderBookType) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Depth = input.ReadInt32();
            break;
          }
          case 24: {
            IsConsistent = input.ReadBool();
            break;
          }
          case 34: {
            bids_.AddEntriesFrom(ref input, _repeated_bids_codec);
            break;
          }
          case 42: {
            asks_.AddEntriesFrom(ref input, _repeated_asks_codec);
            break;
          }
          case 50: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 58: {
            if (limitUp_ == null) {
              LimitUp = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(LimitUp);
            break;
          }
          case 66: {
            if (limitDown_ == null) {
              LimitDown = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(LimitDown);
            break;
          }
          case 74: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 80: {
            OrderBookType = (global::Tinkoff.InvestApi.V1.OrderBookType) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Массив предложений/спроса.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Order : pb::IMessage<Order>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Order> _parser = new pb::MessageParser<Order>(() => new Order());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Order> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Order() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Order(Order other) : this() {
      price_ = other.price_ != null ? other.price_.Clone() : null;
      quantity_ = other.quantity_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Order Clone() {
      return new Order(this);
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 1;
    private global::Tinkoff.InvestApi.V1.Quotation price_;
    /// <summary>
    ///Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://russianinvestments.github.io/investAPI/faq_marketdata/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 2;
    private long quantity_;
    /// <summary>
    ///Количество в лотах.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Order);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Order other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Price, other.Price)) return false;
      if (Quantity != other.Quantity) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (price_ != null) hash ^= Price.GetHashCode();
      if (Quantity != 0L) hash ^= Quantity.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (price_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Price);
      }
      if (Quantity != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (price_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Price);
      }
      if (Quantity != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Quantity);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (price_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Price);
      }
      if (Quantity != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quantity);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Order other) {
      if (other == null) {
        return;
      }
      if (other.price_ != null) {
        if (price_ == null) {
          Price = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        Price.MergeFrom(other.Price);
      }
      if (other.Quantity != 0L) {
        Quantity = other.Quantity;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (price_ == null) {
              Price = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Price);
            break;
          }
          case 16: {
            Quantity = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (price_ == null) {
              Price = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Price);
            break;
          }
          case 16: {
            Quantity = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Информация о сделке.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class Trade : pb::IMessage<Trade>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Trade> _parser = new pb::MessageParser<Trade>(() => new Trade());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Trade> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Trade() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Trade(Trade other) : this() {
      figi_ = other.figi_;
      direction_ = other.direction_;
      price_ = other.price_ != null ? other.price_.Clone() : null;
      quantity_ = other.quantity_;
      time_ = other.time_ != null ? other.time_.Clone() : null;
      instrumentUid_ = other.instrumentUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Trade Clone() {
      return new Trade(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    ///Figi-идентификатор инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 2;
    private global::Tinkoff.InvestApi.V1.TradeDirection direction_ = global::Tinkoff.InvestApi.V1.TradeDirection.Unspecified;
    /// <summary>
    ///Направление сделки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.TradeDirection Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 3;
    private global::Tinkoff.InvestApi.V1.Quotation price_;
    /// <summary>
    ///Цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://russianinvestments.github.io/investAPI/faq_marketdata/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "quantity" field.</summary>
    public const int QuantityFieldNumber = 4;
    private long quantity_;
    /// <summary>
    ///Количество лотов.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Quantity {
      get { return quantity_; }
      set {
        quantity_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    /// <summary>
    ///Время сделки в часовом поясе UTC по времени биржи.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "instrument_uid" field.</summary>
    public const int InstrumentUidFieldNumber = 6;
    private string instrumentUid_ = "";
    /// <summary>
    ///Uid инструмента
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentUid {
      get { return instrumentUid_; }
      set {
        instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Trade);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Trade other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (Direction != other.Direction) return false;
      if (!object.Equals(Price, other.Price)) return false;
      if (Quantity != other.Quantity) return false;
      if (!object.Equals(Time, other.Time)) return false;
      if (InstrumentUid != other.InstrumentUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (Direction != global::Tinkoff.InvestApi.V1.TradeDirection.Unspecified) hash ^= Direction.GetHashCode();
      if (price_ != null) hash ^= Price.GetHashCode();
      if (Quantity != 0L) hash ^= Quantity.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Direction != global::Tinkoff.InvestApi.V1.TradeDirection.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Direction);
      }
      if (price_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Price);
      }
      if (Quantity != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Quantity);
      }
      if (time_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Time);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(InstrumentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Direction != global::Tinkoff.InvestApi.V1.TradeDirection.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Direction);
      }
      if (price_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Price);
      }
      if (Quantity != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Quantity);
      }
      if (time_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Time);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(InstrumentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (Direction != global::Tinkoff.InvestApi.V1.TradeDirection.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Direction);
      }
      if (price_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Price);
      }
      if (Quantity != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Quantity);
      }
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (InstrumentUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Trade other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.Direction != global::Tinkoff.InvestApi.V1.TradeDirection.Unspecified) {
        Direction = other.Direction;
      }
      if (other.price_ != null) {
        if (price_ == null) {
          Price = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        Price.MergeFrom(other.Price);
      }
      if (other.Quantity != 0L) {
        Quantity = other.Quantity;
      }
      if (other.time_ != null) {
        if (time_ == null) {
          Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      if (other.InstrumentUid.Length != 0) {
        InstrumentUid = other.InstrumentUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Direction = (global::Tinkoff.InvestApi.V1.TradeDirection) input.ReadEnum();
            break;
          }
          case 26: {
            if (price_ == null) {
              Price = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Price);
            break;
          }
          case 32: {
            Quantity = input.ReadInt64();
            break;
          }
          case 42: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 50: {
            InstrumentUid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Direction = (global::Tinkoff.InvestApi.V1.TradeDirection) input.ReadEnum();
            break;
          }
          case 26: {
            if (price_ == null) {
              Price = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Price);
            break;
          }
          case 32: {
            Quantity = input.ReadInt64();
            break;
          }
          case 42: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 50: {
            InstrumentUid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Пакет изменения торгового статуса.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TradingStatus : pb::IMessage<TradingStatus>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TradingStatus> _parser = new pb::MessageParser<TradingStatus>(() => new TradingStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TradingStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradingStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradingStatus(TradingStatus other) : this() {
      figi_ = other.figi_;
      tradingStatus_ = other.tradingStatus_;
      time_ = other.time_ != null ? other.time_.Clone() : null;
      limitOrderAvailableFlag_ = other.limitOrderAvailableFlag_;
      marketOrderAvailableFlag_ = other.marketOrderAvailableFlag_;
      instrumentUid_ = other.instrumentUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TradingStatus Clone() {
      return new TradingStatus(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    ///Figi-идентификатор инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trading_status" field.</summary>
    public const int TradingStatus_FieldNumber = 2;
    private global::Tinkoff.InvestApi.V1.SecurityTradingStatus tradingStatus_ = global::Tinkoff.InvestApi.V1.SecurityTradingStatus.Unspecified;
    /// <summary>
    ///Статус торговли инструментом.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SecurityTradingStatus TradingStatus_ {
      get { return tradingStatus_; }
      set {
        tradingStatus_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    /// <summary>
    ///Время изменения торгового статуса в часовом поясе UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "limit_order_available_flag" field.</summary>
    public const int LimitOrderAvailableFlagFieldNumber = 4;
    private bool limitOrderAvailableFlag_;
    /// <summary>
    ///Признак доступности выставления лимитной заявки по инструменту.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LimitOrderAvailableFlag {
      get { return limitOrderAvailableFlag_; }
      set {
        limitOrderAvailableFlag_ = value;
      }
    }

    /// <summary>Field number for the "market_order_available_flag" field.</summary>
    public const int MarketOrderAvailableFlagFieldNumber = 5;
    private bool marketOrderAvailableFlag_;
    /// <summary>
    ///Признак доступности выставления рыночной заявки по инструменту.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MarketOrderAvailableFlag {
      get { return marketOrderAvailableFlag_; }
      set {
        marketOrderAvailableFlag_ = value;
      }
    }

    /// <summary>Field number for the "instrument_uid" field.</summary>
    public const int InstrumentUidFieldNumber = 6;
    private string instrumentUid_ = "";
    /// <summary>
    ///Uid инструмента
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentUid {
      get { return instrumentUid_; }
      set {
        instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TradingStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TradingStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (TradingStatus_ != other.TradingStatus_) return false;
      if (!object.Equals(Time, other.Time)) return false;
      if (LimitOrderAvailableFlag != other.LimitOrderAvailableFlag) return false;
      if (MarketOrderAvailableFlag != other.MarketOrderAvailableFlag) return false;
      if (InstrumentUid != other.InstrumentUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (TradingStatus_ != global::Tinkoff.InvestApi.V1.SecurityTradingStatus.Unspecified) hash ^= TradingStatus_.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (LimitOrderAvailableFlag != false) hash ^= LimitOrderAvailableFlag.GetHashCode();
      if (MarketOrderAvailableFlag != false) hash ^= MarketOrderAvailableFlag.GetHashCode();
      if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (TradingStatus_ != global::Tinkoff.InvestApi.V1.SecurityTradingStatus.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TradingStatus_);
      }
      if (time_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Time);
      }
      if (LimitOrderAvailableFlag != false) {
        output.WriteRawTag(32);
        output.WriteBool(LimitOrderAvailableFlag);
      }
      if (MarketOrderAvailableFlag != false) {
        output.WriteRawTag(40);
        output.WriteBool(MarketOrderAvailableFlag);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(InstrumentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (TradingStatus_ != global::Tinkoff.InvestApi.V1.SecurityTradingStatus.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TradingStatus_);
      }
      if (time_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Time);
      }
      if (LimitOrderAvailableFlag != false) {
        output.WriteRawTag(32);
        output.WriteBool(LimitOrderAvailableFlag);
      }
      if (MarketOrderAvailableFlag != false) {
        output.WriteRawTag(40);
        output.WriteBool(MarketOrderAvailableFlag);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(InstrumentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (TradingStatus_ != global::Tinkoff.InvestApi.V1.SecurityTradingStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TradingStatus_);
      }
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (LimitOrderAvailableFlag != false) {
        size += 1 + 1;
      }
      if (MarketOrderAvailableFlag != false) {
        size += 1 + 1;
      }
      if (InstrumentUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TradingStatus other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.TradingStatus_ != global::Tinkoff.InvestApi.V1.SecurityTradingStatus.Unspecified) {
        TradingStatus_ = other.TradingStatus_;
      }
      if (other.time_ != null) {
        if (time_ == null) {
          Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      if (other.LimitOrderAvailableFlag != false) {
        LimitOrderAvailableFlag = other.LimitOrderAvailableFlag;
      }
      if (other.MarketOrderAvailableFlag != false) {
        MarketOrderAvailableFlag = other.MarketOrderAvailableFlag;
      }
      if (other.InstrumentUid.Length != 0) {
        InstrumentUid = other.InstrumentUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            TradingStatus_ = (global::Tinkoff.InvestApi.V1.SecurityTradingStatus) input.ReadEnum();
            break;
          }
          case 26: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 32: {
            LimitOrderAvailableFlag = input.ReadBool();
            break;
          }
          case 40: {
            MarketOrderAvailableFlag = input.ReadBool();
            break;
          }
          case 50: {
            InstrumentUid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            TradingStatus_ = (global::Tinkoff.InvestApi.V1.SecurityTradingStatus) input.ReadEnum();
            break;
          }
          case 26: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 32: {
            LimitOrderAvailableFlag = input.ReadBool();
            break;
          }
          case 40: {
            MarketOrderAvailableFlag = input.ReadBool();
            break;
          }
          case 50: {
            InstrumentUid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Запрос исторических свечей.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetCandlesRequest : pb::IMessage<GetCandlesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetCandlesRequest> _parser = new pb::MessageParser<GetCandlesRequest>(() => new GetCandlesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetCandlesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCandlesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCandlesRequest(GetCandlesRequest other) : this() {
      figi_ = other.figi_;
      from_ = other.from_ != null ? other.from_.Clone() : null;
      to_ = other.to_ != null ? other.to_.Clone() : null;
      interval_ = other.interval_;
      instrumentId_ = other.instrumentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCandlesRequest Clone() {
      return new GetCandlesRequest(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private readonly static string FigiDefaultValue = "";

    private string figi_;
    /// <summary>
    ///Deprecated Figi-идентификатор инструмента. Необходимо использовать instrument_id.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_ ?? FigiDefaultValue; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "figi" field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFigi {
      get { return figi_ != null; }
    }
    /// <summary>Clears the value of the "figi" field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFigi() {
      figi_ = null;
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp from_;
    /// <summary>
    ///Начало запрашиваемого периода в часовом поясе UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp to_;
    /// <summary>
    ///Окончание запрашиваемого периода в часовом поясе UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "interval" field.</summary>
    public const int IntervalFieldNumber = 4;
    private global::Tinkoff.InvestApi.V1.CandleInterval interval_ = global::Tinkoff.InvestApi.V1.CandleInterval.Unspecified;
    /// <summary>
    ///Интервал запрошенных свечей.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.CandleInterval Interval {
      get { return interval_; }
      set {
        interval_ = value;
      }
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 5;
    private readonly static string InstrumentIdDefaultValue = "";

    private string instrumentId_;
    /// <summary>
    ///Идентификатор инструмента, принимает значение figi или instrument_uid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentId {
      get { return instrumentId_ ?? InstrumentIdDefaultValue; }
      set {
        instrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "instrument_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInstrumentId {
      get { return instrumentId_ != null; }
    }
    /// <summary>Clears the value of the "instrument_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInstrumentId() {
      instrumentId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetCandlesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetCandlesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (!object.Equals(From, other.From)) return false;
      if (!object.Equals(To, other.To)) return false;
      if (Interval != other.Interval) return false;
      if (InstrumentId != other.InstrumentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFigi) hash ^= Figi.GetHashCode();
      if (from_ != null) hash ^= From.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (Interval != global::Tinkoff.InvestApi.V1.CandleInterval.Unspecified) hash ^= Interval.GetHashCode();
      if (HasInstrumentId) hash ^= InstrumentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFigi) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (from_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(To);
      }
      if (Interval != global::Tinkoff.InvestApi.V1.CandleInterval.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Interval);
      }
      if (HasInstrumentId) {
        output.WriteRawTag(42);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFigi) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (from_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(To);
      }
      if (Interval != global::Tinkoff.InvestApi.V1.CandleInterval.Unspecified) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Interval);
      }
      if (HasInstrumentId) {
        output.WriteRawTag(42);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFigi) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (Interval != global::Tinkoff.InvestApi.V1.CandleInterval.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Interval);
      }
      if (HasInstrumentId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetCandlesRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasFigi) {
        Figi = other.Figi;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        From.MergeFrom(other.From);
      }
      if (other.to_ != null) {
        if (to_ == null) {
          To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        To.MergeFrom(other.To);
      }
      if (other.Interval != global::Tinkoff.InvestApi.V1.CandleInterval.Unspecified) {
        Interval = other.Interval;
      }
      if (other.HasInstrumentId) {
        InstrumentId = other.InstrumentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 18: {
            if (from_ == null) {
              From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(From);
            break;
          }
          case 26: {
            if (to_ == null) {
              To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(To);
            break;
          }
          case 32: {
            Interval = (global::Tinkoff.InvestApi.V1.CandleInterval) input.ReadEnum();
            break;
          }
          case 42: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 18: {
            if (from_ == null) {
              From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(From);
            break;
          }
          case 26: {
            if (to_ == null) {
              To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(To);
            break;
          }
          case 32: {
            Interval = (global::Tinkoff.InvestApi.V1.CandleInterval) input.ReadEnum();
            break;
          }
          case 42: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Список свечей.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetCandlesResponse : pb::IMessage<GetCandlesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetCandlesResponse> _parser = new pb::MessageParser<GetCandlesResponse>(() => new GetCandlesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetCandlesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCandlesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCandlesResponse(GetCandlesResponse other) : this() {
      candles_ = other.candles_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetCandlesResponse Clone() {
      return new GetCandlesResponse(this);
    }

    /// <summary>Field number for the "candles" field.</summary>
    public const int CandlesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.HistoricCandle> _repeated_candles_codec
        = pb::FieldCodec.ForMessage(10, global::Tinkoff.InvestApi.V1.HistoricCandle.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.HistoricCandle> candles_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.HistoricCandle>();
    /// <summary>
    ///Массив свечей.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.HistoricCandle> Candles {
      get { return candles_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetCandlesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetCandlesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!candles_.Equals(other.candles_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= candles_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      candles_.WriteTo(output, _repeated_candles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      candles_.WriteTo(ref output, _repeated_candles_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += candles_.CalculateSize(_repeated_candles_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetCandlesResponse other) {
      if (other == null) {
        return;
      }
      candles_.Add(other.candles_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            candles_.AddEntriesFrom(input, _repeated_candles_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            candles_.AddEntriesFrom(ref input, _repeated_candles_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Информация о свече.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class HistoricCandle : pb::IMessage<HistoricCandle>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<HistoricCandle> _parser = new pb::MessageParser<HistoricCandle>(() => new HistoricCandle());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<HistoricCandle> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HistoricCandle() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HistoricCandle(HistoricCandle other) : this() {
      open_ = other.open_ != null ? other.open_.Clone() : null;
      high_ = other.high_ != null ? other.high_.Clone() : null;
      low_ = other.low_ != null ? other.low_.Clone() : null;
      close_ = other.close_ != null ? other.close_.Clone() : null;
      volume_ = other.volume_;
      time_ = other.time_ != null ? other.time_.Clone() : null;
      isComplete_ = other.isComplete_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public HistoricCandle Clone() {
      return new HistoricCandle(this);
    }

    /// <summary>Field number for the "open" field.</summary>
    public const int OpenFieldNumber = 1;
    private global::Tinkoff.InvestApi.V1.Quotation open_;
    /// <summary>
    ///Цена открытия за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://russianinvestments.github.io/investAPI/faq_marketdata/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation Open {
      get { return open_; }
      set {
        open_ = value;
      }
    }

    /// <summary>Field number for the "high" field.</summary>
    public const int HighFieldNumber = 2;
    private global::Tinkoff.InvestApi.V1.Quotation high_;
    /// <summary>
    ///Максимальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://russianinvestments.github.io/investAPI/faq_marketdata/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation High {
      get { return high_; }
      set {
        high_ = value;
      }
    }

    /// <summary>Field number for the "low" field.</summary>
    public const int LowFieldNumber = 3;
    private global::Tinkoff.InvestApi.V1.Quotation low_;
    /// <summary>
    ///Минимальная цена за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://russianinvestments.github.io/investAPI/faq_marketdata/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation Low {
      get { return low_; }
      set {
        low_ = value;
      }
    }

    /// <summary>Field number for the "close" field.</summary>
    public const int CloseFieldNumber = 4;
    private global::Tinkoff.InvestApi.V1.Quotation close_;
    /// <summary>
    ///Цена закрытия за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://russianinvestments.github.io/investAPI/faq_marketdata/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation Close {
      get { return close_; }
      set {
        close_ = value;
      }
    }

    /// <summary>Field number for the "volume" field.</summary>
    public const int VolumeFieldNumber = 5;
    private long volume_;
    /// <summary>
    ///Объём торгов в лотах.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Volume {
      get { return volume_; }
      set {
        volume_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    /// <summary>
    ///Время свечи в часовом поясе UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "is_complete" field.</summary>
    public const int IsCompleteFieldNumber = 7;
    private bool isComplete_;
    /// <summary>
    ///Признак завершённости свечи. **false** значит, свеча за текущие интервал ещё сформирована не полностью.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsComplete {
      get { return isComplete_; }
      set {
        isComplete_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as HistoricCandle);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(HistoricCandle other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Open, other.Open)) return false;
      if (!object.Equals(High, other.High)) return false;
      if (!object.Equals(Low, other.Low)) return false;
      if (!object.Equals(Close, other.Close)) return false;
      if (Volume != other.Volume) return false;
      if (!object.Equals(Time, other.Time)) return false;
      if (IsComplete != other.IsComplete) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (open_ != null) hash ^= Open.GetHashCode();
      if (high_ != null) hash ^= High.GetHashCode();
      if (low_ != null) hash ^= Low.GetHashCode();
      if (close_ != null) hash ^= Close.GetHashCode();
      if (Volume != 0L) hash ^= Volume.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (IsComplete != false) hash ^= IsComplete.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (open_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Open);
      }
      if (high_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(High);
      }
      if (low_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Low);
      }
      if (close_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Close);
      }
      if (Volume != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Volume);
      }
      if (time_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Time);
      }
      if (IsComplete != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsComplete);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (open_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Open);
      }
      if (high_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(High);
      }
      if (low_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Low);
      }
      if (close_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Close);
      }
      if (Volume != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(Volume);
      }
      if (time_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Time);
      }
      if (IsComplete != false) {
        output.WriteRawTag(56);
        output.WriteBool(IsComplete);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (open_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Open);
      }
      if (high_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(High);
      }
      if (low_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Low);
      }
      if (close_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Close);
      }
      if (Volume != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Volume);
      }
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (IsComplete != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(HistoricCandle other) {
      if (other == null) {
        return;
      }
      if (other.open_ != null) {
        if (open_ == null) {
          Open = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        Open.MergeFrom(other.Open);
      }
      if (other.high_ != null) {
        if (high_ == null) {
          High = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        High.MergeFrom(other.High);
      }
      if (other.low_ != null) {
        if (low_ == null) {
          Low = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        Low.MergeFrom(other.Low);
      }
      if (other.close_ != null) {
        if (close_ == null) {
          Close = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        Close.MergeFrom(other.Close);
      }
      if (other.Volume != 0L) {
        Volume = other.Volume;
      }
      if (other.time_ != null) {
        if (time_ == null) {
          Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      if (other.IsComplete != false) {
        IsComplete = other.IsComplete;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (open_ == null) {
              Open = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Open);
            break;
          }
          case 18: {
            if (high_ == null) {
              High = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(High);
            break;
          }
          case 26: {
            if (low_ == null) {
              Low = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Low);
            break;
          }
          case 34: {
            if (close_ == null) {
              Close = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Close);
            break;
          }
          case 40: {
            Volume = input.ReadInt64();
            break;
          }
          case 50: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 56: {
            IsComplete = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (open_ == null) {
              Open = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Open);
            break;
          }
          case 18: {
            if (high_ == null) {
              High = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(High);
            break;
          }
          case 26: {
            if (low_ == null) {
              Low = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Low);
            break;
          }
          case 34: {
            if (close_ == null) {
              Close = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Close);
            break;
          }
          case 40: {
            Volume = input.ReadInt64();
            break;
          }
          case 50: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 56: {
            IsComplete = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Запрос получения цен последних сделок.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetLastPricesRequest : pb::IMessage<GetLastPricesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetLastPricesRequest> _parser = new pb::MessageParser<GetLastPricesRequest>(() => new GetLastPricesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetLastPricesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLastPricesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLastPricesRequest(GetLastPricesRequest other) : this() {
      figi_ = other.figi_.Clone();
      instrumentId_ = other.instrumentId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLastPricesRequest Clone() {
      return new GetLastPricesRequest(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_figi_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> figi_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///Deprecated Figi-идентификатор инструмента. Необходимо использовать instrument_id.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Figi {
      get { return figi_; }
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_instrumentId_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> instrumentId_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///Массив идентификаторов инструмента, принимает значения figi или instrument_uid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> InstrumentId {
      get { return instrumentId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetLastPricesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetLastPricesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!figi_.Equals(other.figi_)) return false;
      if(!instrumentId_.Equals(other.instrumentId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= figi_.GetHashCode();
      hash ^= instrumentId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      figi_.WriteTo(output, _repeated_figi_codec);
      instrumentId_.WriteTo(output, _repeated_instrumentId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      figi_.WriteTo(ref output, _repeated_figi_codec);
      instrumentId_.WriteTo(ref output, _repeated_instrumentId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += figi_.CalculateSize(_repeated_figi_codec);
      size += instrumentId_.CalculateSize(_repeated_instrumentId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetLastPricesRequest other) {
      if (other == null) {
        return;
      }
      figi_.Add(other.figi_);
      instrumentId_.Add(other.instrumentId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            figi_.AddEntriesFrom(input, _repeated_figi_codec);
            break;
          }
          case 18: {
            instrumentId_.AddEntriesFrom(input, _repeated_instrumentId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            figi_.AddEntriesFrom(ref input, _repeated_figi_codec);
            break;
          }
          case 18: {
            instrumentId_.AddEntriesFrom(ref input, _repeated_instrumentId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Список цен последних сделок.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetLastPricesResponse : pb::IMessage<GetLastPricesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetLastPricesResponse> _parser = new pb::MessageParser<GetLastPricesResponse>(() => new GetLastPricesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetLastPricesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLastPricesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLastPricesResponse(GetLastPricesResponse other) : this() {
      lastPrices_ = other.lastPrices_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLastPricesResponse Clone() {
      return new GetLastPricesResponse(this);
    }

    /// <summary>Field number for the "last_prices" field.</summary>
    public const int LastPricesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.LastPrice> _repeated_lastPrices_codec
        = pb::FieldCodec.ForMessage(10, global::Tinkoff.InvestApi.V1.LastPrice.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.LastPrice> lastPrices_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.LastPrice>();
    /// <summary>
    ///Массив цен последних сделок.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.LastPrice> LastPrices {
      get { return lastPrices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetLastPricesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetLastPricesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lastPrices_.Equals(other.lastPrices_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lastPrices_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      lastPrices_.WriteTo(output, _repeated_lastPrices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      lastPrices_.WriteTo(ref output, _repeated_lastPrices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += lastPrices_.CalculateSize(_repeated_lastPrices_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetLastPricesResponse other) {
      if (other == null) {
        return;
      }
      lastPrices_.Add(other.lastPrices_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            lastPrices_.AddEntriesFrom(input, _repeated_lastPrices_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            lastPrices_.AddEntriesFrom(ref input, _repeated_lastPrices_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Информация о цене последней сделки.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class LastPrice : pb::IMessage<LastPrice>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<LastPrice> _parser = new pb::MessageParser<LastPrice>(() => new LastPrice());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<LastPrice> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastPrice() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastPrice(LastPrice other) : this() {
      figi_ = other.figi_;
      price_ = other.price_ != null ? other.price_.Clone() : null;
      time_ = other.time_ != null ? other.time_.Clone() : null;
      instrumentUid_ = other.instrumentUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public LastPrice Clone() {
      return new LastPrice(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    ///Figi инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 2;
    private global::Tinkoff.InvestApi.V1.Quotation price_;
    /// <summary>
    ///Цена последней сделки за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://russianinvestments.github.io/investAPI/faq_marketdata/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    /// <summary>
    ///Время получения последней цены в часовом поясе UTC по времени биржи.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "instrument_uid" field.</summary>
    public const int InstrumentUidFieldNumber = 11;
    private string instrumentUid_ = "";
    /// <summary>
    ///Uid инструмента
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentUid {
      get { return instrumentUid_; }
      set {
        instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as LastPrice);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(LastPrice other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (!object.Equals(Price, other.Price)) return false;
      if (!object.Equals(Time, other.Time)) return false;
      if (InstrumentUid != other.InstrumentUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (price_ != null) hash ^= Price.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (price_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Price);
      }
      if (time_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Time);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(InstrumentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (price_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Price);
      }
      if (time_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Time);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(InstrumentUid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (price_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Price);
      }
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (InstrumentUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(LastPrice other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.price_ != null) {
        if (price_ == null) {
          Price = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        Price.MergeFrom(other.Price);
      }
      if (other.time_ != null) {
        if (time_ == null) {
          Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      if (other.InstrumentUid.Length != 0) {
        InstrumentUid = other.InstrumentUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 18: {
            if (price_ == null) {
              Price = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Price);
            break;
          }
          case 26: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 90: {
            InstrumentUid = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 18: {
            if (price_ == null) {
              Price = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Price);
            break;
          }
          case 26: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 90: {
            InstrumentUid = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Запрос стакана.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetOrderBookRequest : pb::IMessage<GetOrderBookRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetOrderBookRequest> _parser = new pb::MessageParser<GetOrderBookRequest>(() => new GetOrderBookRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetOrderBookRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetOrderBookRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetOrderBookRequest(GetOrderBookRequest other) : this() {
      figi_ = other.figi_;
      depth_ = other.depth_;
      instrumentId_ = other.instrumentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetOrderBookRequest Clone() {
      return new GetOrderBookRequest(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private readonly static string FigiDefaultValue = "";

    private string figi_;
    /// <summary>
    ///Deprecated Figi-идентификатор инструмента. Необходимо использовать instrument_id.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_ ?? FigiDefaultValue; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "figi" field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFigi {
      get { return figi_ != null; }
    }
    /// <summary>Clears the value of the "figi" field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFigi() {
      figi_ = null;
    }

    /// <summary>Field number for the "depth" field.</summary>
    public const int DepthFieldNumber = 2;
    private int depth_;
    /// <summary>
    ///Глубина стакана.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Depth {
      get { return depth_; }
      set {
        depth_ = value;
      }
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 3;
    private readonly static string InstrumentIdDefaultValue = "";

    private string instrumentId_;
    /// <summary>
    ///Идентификатор инструмента, принимает значение figi или instrument_uid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentId {
      get { return instrumentId_ ?? InstrumentIdDefaultValue; }
      set {
        instrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "instrument_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInstrumentId {
      get { return instrumentId_ != null; }
    }
    /// <summary>Clears the value of the "instrument_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInstrumentId() {
      instrumentId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetOrderBookRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetOrderBookRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (Depth != other.Depth) return false;
      if (InstrumentId != other.InstrumentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFigi) hash ^= Figi.GetHashCode();
      if (Depth != 0) hash ^= Depth.GetHashCode();
      if (HasInstrumentId) hash ^= InstrumentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFigi) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Depth != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Depth);
      }
      if (HasInstrumentId) {
        output.WriteRawTag(26);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFigi) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Depth != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Depth);
      }
      if (HasInstrumentId) {
        output.WriteRawTag(26);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFigi) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (Depth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Depth);
      }
      if (HasInstrumentId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetOrderBookRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasFigi) {
        Figi = other.Figi;
      }
      if (other.Depth != 0) {
        Depth = other.Depth;
      }
      if (other.HasInstrumentId) {
        InstrumentId = other.InstrumentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Depth = input.ReadInt32();
            break;
          }
          case 26: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Depth = input.ReadInt32();
            break;
          }
          case 26: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Информация о стакане.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetOrderBookResponse : pb::IMessage<GetOrderBookResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetOrderBookResponse> _parser = new pb::MessageParser<GetOrderBookResponse>(() => new GetOrderBookResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetOrderBookResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetOrderBookResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetOrderBookResponse(GetOrderBookResponse other) : this() {
      figi_ = other.figi_;
      depth_ = other.depth_;
      bids_ = other.bids_.Clone();
      asks_ = other.asks_.Clone();
      lastPrice_ = other.lastPrice_ != null ? other.lastPrice_.Clone() : null;
      closePrice_ = other.closePrice_ != null ? other.closePrice_.Clone() : null;
      limitUp_ = other.limitUp_ != null ? other.limitUp_.Clone() : null;
      limitDown_ = other.limitDown_ != null ? other.limitDown_.Clone() : null;
      lastPriceTs_ = other.lastPriceTs_ != null ? other.lastPriceTs_.Clone() : null;
      closePriceTs_ = other.closePriceTs_ != null ? other.closePriceTs_.Clone() : null;
      orderbookTs_ = other.orderbookTs_ != null ? other.orderbookTs_.Clone() : null;
      instrumentUid_ = other.instrumentUid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetOrderBookResponse Clone() {
      return new GetOrderBookResponse(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    ///Figi-идентификатор инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "depth" field.</summary>
    public const int DepthFieldNumber = 2;
    private int depth_;
    /// <summary>
    ///Глубина стакана.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Depth {
      get { return depth_; }
      set {
        depth_ = value;
      }
    }

    /// <summary>Field number for the "bids" field.</summary>
    public const int BidsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.Order> _repeated_bids_codec
        = pb::FieldCodec.ForMessage(26, global::Tinkoff.InvestApi.V1.Order.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.Order> bids_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.Order>();
    /// <summary>
    ///Множество пар значений на покупку.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.Order> Bids {
      get { return bids_; }
    }

    /// <summary>Field number for the "asks" field.</summary>
    public const int AsksFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.Order> _repeated_asks_codec
        = pb::FieldCodec.ForMessage(34, global::Tinkoff.InvestApi.V1.Order.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.Order> asks_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.Order>();
    /// <summary>
    ///Множество пар значений на продажу.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.Order> Asks {
      get { return asks_; }
    }

    /// <summary>Field number for the "last_price" field.</summary>
    public const int LastPriceFieldNumber = 5;
    private global::Tinkoff.InvestApi.V1.Quotation lastPrice_;
    /// <summary>
    ///Цена последней сделки за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://russianinvestments.github.io/investAPI/faq_marketdata/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation LastPrice {
      get { return lastPrice_; }
      set {
        lastPrice_ = value;
      }
    }

    /// <summary>Field number for the "close_price" field.</summary>
    public const int ClosePriceFieldNumber = 6;
    private global::Tinkoff.InvestApi.V1.Quotation closePrice_;
    /// <summary>
    ///Цена закрытия за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://russianinvestments.github.io/investAPI/faq_marketdata/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation ClosePrice {
      get { return closePrice_; }
      set {
        closePrice_ = value;
      }
    }

    /// <summary>Field number for the "limit_up" field.</summary>
    public const int LimitUpFieldNumber = 7;
    private global::Tinkoff.InvestApi.V1.Quotation limitUp_;
    /// <summary>
    ///Верхний лимит цены за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://russianinvestments.github.io/investAPI/faq_marketdata/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation LimitUp {
      get { return limitUp_; }
      set {
        limitUp_ = value;
      }
    }

    /// <summary>Field number for the "limit_down" field.</summary>
    public const int LimitDownFieldNumber = 8;
    private global::Tinkoff.InvestApi.V1.Quotation limitDown_;
    /// <summary>
    ///Нижний лимит цены за 1 инструмент. Для получения стоимости лота требуется умножить на лотность инструмента. Для перевод цен в валюту рекомендуем использовать [информацию со страницы](https://russianinvestments.github.io/investAPI/faq_marketdata/)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation LimitDown {
      get { return limitDown_; }
      set {
        limitDown_ = value;
      }
    }

    /// <summary>Field number for the "last_price_ts" field.</summary>
    public const int LastPriceTsFieldNumber = 21;
    private global::Google.Protobuf.WellKnownTypes.Timestamp lastPriceTs_;
    /// <summary>
    ///Время получения цены последней сделки.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp LastPriceTs {
      get { return lastPriceTs_; }
      set {
        lastPriceTs_ = value;
      }
    }

    /// <summary>Field number for the "close_price_ts" field.</summary>
    public const int ClosePriceTsFieldNumber = 22;
    private global::Google.Protobuf.WellKnownTypes.Timestamp closePriceTs_;
    /// <summary>
    ///Время получения цены закрытия.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ClosePriceTs {
      get { return closePriceTs_; }
      set {
        closePriceTs_ = value;
      }
    }

    /// <summary>Field number for the "orderbook_ts" field.</summary>
    public const int OrderbookTsFieldNumber = 23;
    private global::Google.Protobuf.WellKnownTypes.Timestamp orderbookTs_;
    /// <summary>
    ///Время формирования стакана на бирже.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp OrderbookTs {
      get { return orderbookTs_; }
      set {
        orderbookTs_ = value;
      }
    }

    /// <summary>Field number for the "instrument_uid" field.</summary>
    public const int InstrumentUidFieldNumber = 9;
    private string instrumentUid_ = "";
    /// <summary>
    ///Uid инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentUid {
      get { return instrumentUid_; }
      set {
        instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetOrderBookResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetOrderBookResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (Depth != other.Depth) return false;
      if(!bids_.Equals(other.bids_)) return false;
      if(!asks_.Equals(other.asks_)) return false;
      if (!object.Equals(LastPrice, other.LastPrice)) return false;
      if (!object.Equals(ClosePrice, other.ClosePrice)) return false;
      if (!object.Equals(LimitUp, other.LimitUp)) return false;
      if (!object.Equals(LimitDown, other.LimitDown)) return false;
      if (!object.Equals(LastPriceTs, other.LastPriceTs)) return false;
      if (!object.Equals(ClosePriceTs, other.ClosePriceTs)) return false;
      if (!object.Equals(OrderbookTs, other.OrderbookTs)) return false;
      if (InstrumentUid != other.InstrumentUid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (Depth != 0) hash ^= Depth.GetHashCode();
      hash ^= bids_.GetHashCode();
      hash ^= asks_.GetHashCode();
      if (lastPrice_ != null) hash ^= LastPrice.GetHashCode();
      if (closePrice_ != null) hash ^= ClosePrice.GetHashCode();
      if (limitUp_ != null) hash ^= LimitUp.GetHashCode();
      if (limitDown_ != null) hash ^= LimitDown.GetHashCode();
      if (lastPriceTs_ != null) hash ^= LastPriceTs.GetHashCode();
      if (closePriceTs_ != null) hash ^= ClosePriceTs.GetHashCode();
      if (orderbookTs_ != null) hash ^= OrderbookTs.GetHashCode();
      if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Depth != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Depth);
      }
      bids_.WriteTo(output, _repeated_bids_codec);
      asks_.WriteTo(output, _repeated_asks_codec);
      if (lastPrice_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LastPrice);
      }
      if (closePrice_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ClosePrice);
      }
      if (limitUp_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LimitUp);
      }
      if (limitDown_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LimitDown);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(InstrumentUid);
      }
      if (lastPriceTs_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(LastPriceTs);
      }
      if (closePriceTs_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(ClosePriceTs);
      }
      if (orderbookTs_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(OrderbookTs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (Depth != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Depth);
      }
      bids_.WriteTo(ref output, _repeated_bids_codec);
      asks_.WriteTo(ref output, _repeated_asks_codec);
      if (lastPrice_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(LastPrice);
      }
      if (closePrice_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ClosePrice);
      }
      if (limitUp_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(LimitUp);
      }
      if (limitDown_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(LimitDown);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(InstrumentUid);
      }
      if (lastPriceTs_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(LastPriceTs);
      }
      if (closePriceTs_ != null) {
        output.WriteRawTag(178, 1);
        output.WriteMessage(ClosePriceTs);
      }
      if (orderbookTs_ != null) {
        output.WriteRawTag(186, 1);
        output.WriteMessage(OrderbookTs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (Depth != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Depth);
      }
      size += bids_.CalculateSize(_repeated_bids_codec);
      size += asks_.CalculateSize(_repeated_asks_codec);
      if (lastPrice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LastPrice);
      }
      if (closePrice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClosePrice);
      }
      if (limitUp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LimitUp);
      }
      if (limitDown_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LimitDown);
      }
      if (lastPriceTs_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(LastPriceTs);
      }
      if (closePriceTs_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ClosePriceTs);
      }
      if (orderbookTs_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(OrderbookTs);
      }
      if (InstrumentUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetOrderBookResponse other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.Depth != 0) {
        Depth = other.Depth;
      }
      bids_.Add(other.bids_);
      asks_.Add(other.asks_);
      if (other.lastPrice_ != null) {
        if (lastPrice_ == null) {
          LastPrice = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        LastPrice.MergeFrom(other.LastPrice);
      }
      if (other.closePrice_ != null) {
        if (closePrice_ == null) {
          ClosePrice = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        ClosePrice.MergeFrom(other.ClosePrice);
      }
      if (other.limitUp_ != null) {
        if (limitUp_ == null) {
          LimitUp = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        LimitUp.MergeFrom(other.LimitUp);
      }
      if (other.limitDown_ != null) {
        if (limitDown_ == null) {
          LimitDown = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        LimitDown.MergeFrom(other.LimitDown);
      }
      if (other.lastPriceTs_ != null) {
        if (lastPriceTs_ == null) {
          LastPriceTs = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        LastPriceTs.MergeFrom(other.LastPriceTs);
      }
      if (other.closePriceTs_ != null) {
        if (closePriceTs_ == null) {
          ClosePriceTs = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ClosePriceTs.MergeFrom(other.ClosePriceTs);
      }
      if (other.orderbookTs_ != null) {
        if (orderbookTs_ == null) {
          OrderbookTs = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        OrderbookTs.MergeFrom(other.OrderbookTs);
      }
      if (other.InstrumentUid.Length != 0) {
        InstrumentUid = other.InstrumentUid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Depth = input.ReadInt32();
            break;
          }
          case 26: {
            bids_.AddEntriesFrom(input, _repeated_bids_codec);
            break;
          }
          case 34: {
            asks_.AddEntriesFrom(input, _repeated_asks_codec);
            break;
          }
          case 42: {
            if (lastPrice_ == null) {
              LastPrice = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(LastPrice);
            break;
          }
          case 50: {
            if (closePrice_ == null) {
              ClosePrice = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(ClosePrice);
            break;
          }
          case 58: {
            if (limitUp_ == null) {
              LimitUp = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(LimitUp);
            break;
          }
          case 66: {
            if (limitDown_ == null) {
              LimitDown = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(LimitDown);
            break;
          }
          case 74: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 170: {
            if (lastPriceTs_ == null) {
              LastPriceTs = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastPriceTs);
            break;
          }
          case 178: {
            if (closePriceTs_ == null) {
              ClosePriceTs = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ClosePriceTs);
            break;
          }
          case 186: {
            if (orderbookTs_ == null) {
              OrderbookTs = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OrderbookTs);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            Depth = input.ReadInt32();
            break;
          }
          case 26: {
            bids_.AddEntriesFrom(ref input, _repeated_bids_codec);
            break;
          }
          case 34: {
            asks_.AddEntriesFrom(ref input, _repeated_asks_codec);
            break;
          }
          case 42: {
            if (lastPrice_ == null) {
              LastPrice = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(LastPrice);
            break;
          }
          case 50: {
            if (closePrice_ == null) {
              ClosePrice = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(ClosePrice);
            break;
          }
          case 58: {
            if (limitUp_ == null) {
              LimitUp = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(LimitUp);
            break;
          }
          case 66: {
            if (limitDown_ == null) {
              LimitDown = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(LimitDown);
            break;
          }
          case 74: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 170: {
            if (lastPriceTs_ == null) {
              LastPriceTs = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(LastPriceTs);
            break;
          }
          case 178: {
            if (closePriceTs_ == null) {
              ClosePriceTs = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ClosePriceTs);
            break;
          }
          case 186: {
            if (orderbookTs_ == null) {
              OrderbookTs = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(OrderbookTs);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Запрос получения торгового статуса.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetTradingStatusRequest : pb::IMessage<GetTradingStatusRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTradingStatusRequest> _parser = new pb::MessageParser<GetTradingStatusRequest>(() => new GetTradingStatusRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTradingStatusRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTradingStatusRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTradingStatusRequest(GetTradingStatusRequest other) : this() {
      figi_ = other.figi_;
      instrumentId_ = other.instrumentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTradingStatusRequest Clone() {
      return new GetTradingStatusRequest(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private readonly static string FigiDefaultValue = "";

    private string figi_;
    /// <summary>
    ///Deprecated Figi-идентификатор инструмента. Необходимо использовать instrument_id.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_ ?? FigiDefaultValue; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "figi" field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFigi {
      get { return figi_ != null; }
    }
    /// <summary>Clears the value of the "figi" field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFigi() {
      figi_ = null;
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 2;
    private readonly static string InstrumentIdDefaultValue = "";

    private string instrumentId_;
    /// <summary>
    ///Идентификатор инструмента, принимает значение figi или instrument_uid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentId {
      get { return instrumentId_ ?? InstrumentIdDefaultValue; }
      set {
        instrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "instrument_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInstrumentId {
      get { return instrumentId_ != null; }
    }
    /// <summary>Clears the value of the "instrument_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInstrumentId() {
      instrumentId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTradingStatusRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTradingStatusRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (InstrumentId != other.InstrumentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFigi) hash ^= Figi.GetHashCode();
      if (HasInstrumentId) hash ^= InstrumentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFigi) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (HasInstrumentId) {
        output.WriteRawTag(18);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFigi) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (HasInstrumentId) {
        output.WriteRawTag(18);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFigi) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (HasInstrumentId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTradingStatusRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasFigi) {
        Figi = other.Figi;
      }
      if (other.HasInstrumentId) {
        InstrumentId = other.InstrumentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 18: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 18: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Запрос получения торгового статуса.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetTradingStatusesRequest : pb::IMessage<GetTradingStatusesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTradingStatusesRequest> _parser = new pb::MessageParser<GetTradingStatusesRequest>(() => new GetTradingStatusesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTradingStatusesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTradingStatusesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTradingStatusesRequest(GetTradingStatusesRequest other) : this() {
      instrumentId_ = other.instrumentId_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTradingStatusesRequest Clone() {
      return new GetTradingStatusesRequest(this);
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_instrumentId_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> instrumentId_ = new pbc::RepeatedField<string>();
    /// <summary>
    ///Идентификатор инструмента, принимает значение figi или instrument_uid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> InstrumentId {
      get { return instrumentId_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTradingStatusesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTradingStatusesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!instrumentId_.Equals(other.instrumentId_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= instrumentId_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      instrumentId_.WriteTo(output, _repeated_instrumentId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      instrumentId_.WriteTo(ref output, _repeated_instrumentId_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += instrumentId_.CalculateSize(_repeated_instrumentId_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTradingStatusesRequest other) {
      if (other == null) {
        return;
      }
      instrumentId_.Add(other.instrumentId_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            instrumentId_.AddEntriesFrom(input, _repeated_instrumentId_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            instrumentId_.AddEntriesFrom(ref input, _repeated_instrumentId_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Информация о торговом статусе.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetTradingStatusesResponse : pb::IMessage<GetTradingStatusesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTradingStatusesResponse> _parser = new pb::MessageParser<GetTradingStatusesResponse>(() => new GetTradingStatusesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTradingStatusesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTradingStatusesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTradingStatusesResponse(GetTradingStatusesResponse other) : this() {
      tradingStatuses_ = other.tradingStatuses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTradingStatusesResponse Clone() {
      return new GetTradingStatusesResponse(this);
    }

    /// <summary>Field number for the "trading_statuses" field.</summary>
    public const int TradingStatusesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.GetTradingStatusResponse> _repeated_tradingStatuses_codec
        = pb::FieldCodec.ForMessage(10, global::Tinkoff.InvestApi.V1.GetTradingStatusResponse.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.GetTradingStatusResponse> tradingStatuses_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.GetTradingStatusResponse>();
    /// <summary>
    ///Массив информации о торговых статусах
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.GetTradingStatusResponse> TradingStatuses {
      get { return tradingStatuses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTradingStatusesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTradingStatusesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!tradingStatuses_.Equals(other.tradingStatuses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= tradingStatuses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      tradingStatuses_.WriteTo(output, _repeated_tradingStatuses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      tradingStatuses_.WriteTo(ref output, _repeated_tradingStatuses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += tradingStatuses_.CalculateSize(_repeated_tradingStatuses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTradingStatusesResponse other) {
      if (other == null) {
        return;
      }
      tradingStatuses_.Add(other.tradingStatuses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            tradingStatuses_.AddEntriesFrom(input, _repeated_tradingStatuses_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            tradingStatuses_.AddEntriesFrom(ref input, _repeated_tradingStatuses_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Информация о торговом статусе.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetTradingStatusResponse : pb::IMessage<GetTradingStatusResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTradingStatusResponse> _parser = new pb::MessageParser<GetTradingStatusResponse>(() => new GetTradingStatusResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTradingStatusResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTradingStatusResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTradingStatusResponse(GetTradingStatusResponse other) : this() {
      figi_ = other.figi_;
      tradingStatus_ = other.tradingStatus_;
      limitOrderAvailableFlag_ = other.limitOrderAvailableFlag_;
      marketOrderAvailableFlag_ = other.marketOrderAvailableFlag_;
      apiTradeAvailableFlag_ = other.apiTradeAvailableFlag_;
      instrumentUid_ = other.instrumentUid_;
      bestpriceOrderAvailableFlag_ = other.bestpriceOrderAvailableFlag_;
      onlyBestPrice_ = other.onlyBestPrice_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTradingStatusResponse Clone() {
      return new GetTradingStatusResponse(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    ///Figi-идентификатор инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trading_status" field.</summary>
    public const int TradingStatusFieldNumber = 2;
    private global::Tinkoff.InvestApi.V1.SecurityTradingStatus tradingStatus_ = global::Tinkoff.InvestApi.V1.SecurityTradingStatus.Unspecified;
    /// <summary>
    ///Статус торговли инструментом.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.SecurityTradingStatus TradingStatus {
      get { return tradingStatus_; }
      set {
        tradingStatus_ = value;
      }
    }

    /// <summary>Field number for the "limit_order_available_flag" field.</summary>
    public const int LimitOrderAvailableFlagFieldNumber = 3;
    private bool limitOrderAvailableFlag_;
    /// <summary>
    ///Признак доступности выставления лимитной заявки по инструменту.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool LimitOrderAvailableFlag {
      get { return limitOrderAvailableFlag_; }
      set {
        limitOrderAvailableFlag_ = value;
      }
    }

    /// <summary>Field number for the "market_order_available_flag" field.</summary>
    public const int MarketOrderAvailableFlagFieldNumber = 4;
    private bool marketOrderAvailableFlag_;
    /// <summary>
    ///Признак доступности выставления рыночной заявки по инструменту.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool MarketOrderAvailableFlag {
      get { return marketOrderAvailableFlag_; }
      set {
        marketOrderAvailableFlag_ = value;
      }
    }

    /// <summary>Field number for the "api_trade_available_flag" field.</summary>
    public const int ApiTradeAvailableFlagFieldNumber = 5;
    private bool apiTradeAvailableFlag_;
    /// <summary>
    ///Признак доступности торгов через API.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ApiTradeAvailableFlag {
      get { return apiTradeAvailableFlag_; }
      set {
        apiTradeAvailableFlag_ = value;
      }
    }

    /// <summary>Field number for the "instrument_uid" field.</summary>
    public const int InstrumentUidFieldNumber = 6;
    private string instrumentUid_ = "";
    /// <summary>
    ///Uid инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentUid {
      get { return instrumentUid_; }
      set {
        instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bestprice_order_available_flag" field.</summary>
    public const int BestpriceOrderAvailableFlagFieldNumber = 8;
    private bool bestpriceOrderAvailableFlag_;
    /// <summary>
    ///Признак доступности завяки по лучшей цене
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BestpriceOrderAvailableFlag {
      get { return bestpriceOrderAvailableFlag_; }
      set {
        bestpriceOrderAvailableFlag_ = value;
      }
    }

    /// <summary>Field number for the "only_best_price" field.</summary>
    public const int OnlyBestPriceFieldNumber = 9;
    private bool onlyBestPrice_;
    /// <summary>
    ///Признак доступности только заявки по лучшей цене
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool OnlyBestPrice {
      get { return onlyBestPrice_; }
      set {
        onlyBestPrice_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTradingStatusResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTradingStatusResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (TradingStatus != other.TradingStatus) return false;
      if (LimitOrderAvailableFlag != other.LimitOrderAvailableFlag) return false;
      if (MarketOrderAvailableFlag != other.MarketOrderAvailableFlag) return false;
      if (ApiTradeAvailableFlag != other.ApiTradeAvailableFlag) return false;
      if (InstrumentUid != other.InstrumentUid) return false;
      if (BestpriceOrderAvailableFlag != other.BestpriceOrderAvailableFlag) return false;
      if (OnlyBestPrice != other.OnlyBestPrice) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (TradingStatus != global::Tinkoff.InvestApi.V1.SecurityTradingStatus.Unspecified) hash ^= TradingStatus.GetHashCode();
      if (LimitOrderAvailableFlag != false) hash ^= LimitOrderAvailableFlag.GetHashCode();
      if (MarketOrderAvailableFlag != false) hash ^= MarketOrderAvailableFlag.GetHashCode();
      if (ApiTradeAvailableFlag != false) hash ^= ApiTradeAvailableFlag.GetHashCode();
      if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
      if (BestpriceOrderAvailableFlag != false) hash ^= BestpriceOrderAvailableFlag.GetHashCode();
      if (OnlyBestPrice != false) hash ^= OnlyBestPrice.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (TradingStatus != global::Tinkoff.InvestApi.V1.SecurityTradingStatus.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TradingStatus);
      }
      if (LimitOrderAvailableFlag != false) {
        output.WriteRawTag(24);
        output.WriteBool(LimitOrderAvailableFlag);
      }
      if (MarketOrderAvailableFlag != false) {
        output.WriteRawTag(32);
        output.WriteBool(MarketOrderAvailableFlag);
      }
      if (ApiTradeAvailableFlag != false) {
        output.WriteRawTag(40);
        output.WriteBool(ApiTradeAvailableFlag);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(InstrumentUid);
      }
      if (BestpriceOrderAvailableFlag != false) {
        output.WriteRawTag(64);
        output.WriteBool(BestpriceOrderAvailableFlag);
      }
      if (OnlyBestPrice != false) {
        output.WriteRawTag(72);
        output.WriteBool(OnlyBestPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (TradingStatus != global::Tinkoff.InvestApi.V1.SecurityTradingStatus.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TradingStatus);
      }
      if (LimitOrderAvailableFlag != false) {
        output.WriteRawTag(24);
        output.WriteBool(LimitOrderAvailableFlag);
      }
      if (MarketOrderAvailableFlag != false) {
        output.WriteRawTag(32);
        output.WriteBool(MarketOrderAvailableFlag);
      }
      if (ApiTradeAvailableFlag != false) {
        output.WriteRawTag(40);
        output.WriteBool(ApiTradeAvailableFlag);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(InstrumentUid);
      }
      if (BestpriceOrderAvailableFlag != false) {
        output.WriteRawTag(64);
        output.WriteBool(BestpriceOrderAvailableFlag);
      }
      if (OnlyBestPrice != false) {
        output.WriteRawTag(72);
        output.WriteBool(OnlyBestPrice);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (TradingStatus != global::Tinkoff.InvestApi.V1.SecurityTradingStatus.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TradingStatus);
      }
      if (LimitOrderAvailableFlag != false) {
        size += 1 + 1;
      }
      if (MarketOrderAvailableFlag != false) {
        size += 1 + 1;
      }
      if (ApiTradeAvailableFlag != false) {
        size += 1 + 1;
      }
      if (InstrumentUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
      }
      if (BestpriceOrderAvailableFlag != false) {
        size += 1 + 1;
      }
      if (OnlyBestPrice != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTradingStatusResponse other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.TradingStatus != global::Tinkoff.InvestApi.V1.SecurityTradingStatus.Unspecified) {
        TradingStatus = other.TradingStatus;
      }
      if (other.LimitOrderAvailableFlag != false) {
        LimitOrderAvailableFlag = other.LimitOrderAvailableFlag;
      }
      if (other.MarketOrderAvailableFlag != false) {
        MarketOrderAvailableFlag = other.MarketOrderAvailableFlag;
      }
      if (other.ApiTradeAvailableFlag != false) {
        ApiTradeAvailableFlag = other.ApiTradeAvailableFlag;
      }
      if (other.InstrumentUid.Length != 0) {
        InstrumentUid = other.InstrumentUid;
      }
      if (other.BestpriceOrderAvailableFlag != false) {
        BestpriceOrderAvailableFlag = other.BestpriceOrderAvailableFlag;
      }
      if (other.OnlyBestPrice != false) {
        OnlyBestPrice = other.OnlyBestPrice;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            TradingStatus = (global::Tinkoff.InvestApi.V1.SecurityTradingStatus) input.ReadEnum();
            break;
          }
          case 24: {
            LimitOrderAvailableFlag = input.ReadBool();
            break;
          }
          case 32: {
            MarketOrderAvailableFlag = input.ReadBool();
            break;
          }
          case 40: {
            ApiTradeAvailableFlag = input.ReadBool();
            break;
          }
          case 50: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 64: {
            BestpriceOrderAvailableFlag = input.ReadBool();
            break;
          }
          case 72: {
            OnlyBestPrice = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 16: {
            TradingStatus = (global::Tinkoff.InvestApi.V1.SecurityTradingStatus) input.ReadEnum();
            break;
          }
          case 24: {
            LimitOrderAvailableFlag = input.ReadBool();
            break;
          }
          case 32: {
            MarketOrderAvailableFlag = input.ReadBool();
            break;
          }
          case 40: {
            ApiTradeAvailableFlag = input.ReadBool();
            break;
          }
          case 50: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 64: {
            BestpriceOrderAvailableFlag = input.ReadBool();
            break;
          }
          case 72: {
            OnlyBestPrice = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Запрос обезличенных сделок за последний час.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetLastTradesRequest : pb::IMessage<GetLastTradesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetLastTradesRequest> _parser = new pb::MessageParser<GetLastTradesRequest>(() => new GetLastTradesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetLastTradesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLastTradesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLastTradesRequest(GetLastTradesRequest other) : this() {
      figi_ = other.figi_;
      from_ = other.from_ != null ? other.from_.Clone() : null;
      to_ = other.to_ != null ? other.to_.Clone() : null;
      instrumentId_ = other.instrumentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLastTradesRequest Clone() {
      return new GetLastTradesRequest(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private readonly static string FigiDefaultValue = "";

    private string figi_;
    /// <summary>
    ///Deprecated Figi-идентификатор инструмента. Необходимо использовать instrument_id.
    /// </summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_ ?? FigiDefaultValue; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "figi" field is set</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasFigi {
      get { return figi_ != null; }
    }
    /// <summary>Clears the value of the "figi" field</summary>
    [global::System.ObsoleteAttribute]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearFigi() {
      figi_ = null;
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp from_;
    /// <summary>
    ///Начало запрашиваемого периода в часовом поясе UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp to_;
    /// <summary>
    ///Окончание запрашиваемого периода в часовом поясе UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 4;
    private readonly static string InstrumentIdDefaultValue = "";

    private string instrumentId_;
    /// <summary>
    ///Идентификатор инструмента, принимает значение figi или instrument_uid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentId {
      get { return instrumentId_ ?? InstrumentIdDefaultValue; }
      set {
        instrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "instrument_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasInstrumentId {
      get { return instrumentId_ != null; }
    }
    /// <summary>Clears the value of the "instrument_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearInstrumentId() {
      instrumentId_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetLastTradesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetLastTradesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (!object.Equals(From, other.From)) return false;
      if (!object.Equals(To, other.To)) return false;
      if (InstrumentId != other.InstrumentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasFigi) hash ^= Figi.GetHashCode();
      if (from_ != null) hash ^= From.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (HasInstrumentId) hash ^= InstrumentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasFigi) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (from_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(To);
      }
      if (HasInstrumentId) {
        output.WriteRawTag(34);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasFigi) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (from_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(To);
      }
      if (HasInstrumentId) {
        output.WriteRawTag(34);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasFigi) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (HasInstrumentId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetLastTradesRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasFigi) {
        Figi = other.Figi;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        From.MergeFrom(other.From);
      }
      if (other.to_ != null) {
        if (to_ == null) {
          To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        To.MergeFrom(other.To);
      }
      if (other.HasInstrumentId) {
        InstrumentId = other.InstrumentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 18: {
            if (from_ == null) {
              From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(From);
            break;
          }
          case 26: {
            if (to_ == null) {
              To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(To);
            break;
          }
          case 34: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 18: {
            if (from_ == null) {
              From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(From);
            break;
          }
          case 26: {
            if (to_ == null) {
              To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(To);
            break;
          }
          case 34: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Обезличенных сделок за последний час.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetLastTradesResponse : pb::IMessage<GetLastTradesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetLastTradesResponse> _parser = new pb::MessageParser<GetLastTradesResponse>(() => new GetLastTradesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetLastTradesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLastTradesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLastTradesResponse(GetLastTradesResponse other) : this() {
      trades_ = other.trades_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetLastTradesResponse Clone() {
      return new GetLastTradesResponse(this);
    }

    /// <summary>Field number for the "trades" field.</summary>
    public const int TradesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.Trade> _repeated_trades_codec
        = pb::FieldCodec.ForMessage(10, global::Tinkoff.InvestApi.V1.Trade.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.Trade> trades_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.Trade>();
    /// <summary>
    ///Массив сделок.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.Trade> Trades {
      get { return trades_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetLastTradesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetLastTradesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!trades_.Equals(other.trades_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= trades_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      trades_.WriteTo(output, _repeated_trades_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      trades_.WriteTo(ref output, _repeated_trades_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += trades_.CalculateSize(_repeated_trades_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetLastTradesResponse other) {
      if (other == null) {
        return;
      }
      trades_.Add(other.trades_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            trades_.AddEntriesFrom(input, _repeated_trades_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            trades_.AddEntriesFrom(ref input, _repeated_trades_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Запрос активных подписок.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetMySubscriptions : pb::IMessage<GetMySubscriptions>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetMySubscriptions> _parser = new pb::MessageParser<GetMySubscriptions>(() => new GetMySubscriptions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetMySubscriptions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMySubscriptions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMySubscriptions(GetMySubscriptions other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetMySubscriptions Clone() {
      return new GetMySubscriptions(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetMySubscriptions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetMySubscriptions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetMySubscriptions other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Запрос цен закрытия торговой сессии по инструментам.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetClosePricesRequest : pb::IMessage<GetClosePricesRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetClosePricesRequest> _parser = new pb::MessageParser<GetClosePricesRequest>(() => new GetClosePricesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetClosePricesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetClosePricesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetClosePricesRequest(GetClosePricesRequest other) : this() {
      instruments_ = other.instruments_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetClosePricesRequest Clone() {
      return new GetClosePricesRequest(this);
    }

    /// <summary>Field number for the "instruments" field.</summary>
    public const int InstrumentsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.InstrumentClosePriceRequest> _repeated_instruments_codec
        = pb::FieldCodec.ForMessage(10, global::Tinkoff.InvestApi.V1.InstrumentClosePriceRequest.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.InstrumentClosePriceRequest> instruments_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.InstrumentClosePriceRequest>();
    /// <summary>
    ///Массив по инструментам.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.InstrumentClosePriceRequest> Instruments {
      get { return instruments_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetClosePricesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetClosePricesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!instruments_.Equals(other.instruments_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= instruments_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      instruments_.WriteTo(output, _repeated_instruments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      instruments_.WriteTo(ref output, _repeated_instruments_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += instruments_.CalculateSize(_repeated_instruments_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetClosePricesRequest other) {
      if (other == null) {
        return;
      }
      instruments_.Add(other.instruments_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            instruments_.AddEntriesFrom(input, _repeated_instruments_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            instruments_.AddEntriesFrom(ref input, _repeated_instruments_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Запрос цен закрытия торговой сессии по инструменту.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InstrumentClosePriceRequest : pb::IMessage<InstrumentClosePriceRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InstrumentClosePriceRequest> _parser = new pb::MessageParser<InstrumentClosePriceRequest>(() => new InstrumentClosePriceRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InstrumentClosePriceRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentClosePriceRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentClosePriceRequest(InstrumentClosePriceRequest other) : this() {
      instrumentId_ = other.instrumentId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentClosePriceRequest Clone() {
      return new InstrumentClosePriceRequest(this);
    }

    /// <summary>Field number for the "instrument_id" field.</summary>
    public const int InstrumentIdFieldNumber = 1;
    private string instrumentId_ = "";
    /// <summary>
    ///Идентификатор инструмента, принимает значение figi или instrument_uid.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentId {
      get { return instrumentId_; }
      set {
        instrumentId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InstrumentClosePriceRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InstrumentClosePriceRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (InstrumentId != other.InstrumentId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (InstrumentId.Length != 0) hash ^= InstrumentId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (InstrumentId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (InstrumentId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(InstrumentId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (InstrumentId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InstrumentClosePriceRequest other) {
      if (other == null) {
        return;
      }
      if (other.InstrumentId.Length != 0) {
        InstrumentId = other.InstrumentId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            InstrumentId = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Цены закрытия торговой сессии по инструментам.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetClosePricesResponse : pb::IMessage<GetClosePricesResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetClosePricesResponse> _parser = new pb::MessageParser<GetClosePricesResponse>(() => new GetClosePricesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetClosePricesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetClosePricesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetClosePricesResponse(GetClosePricesResponse other) : this() {
      closePrices_ = other.closePrices_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetClosePricesResponse Clone() {
      return new GetClosePricesResponse(this);
    }

    /// <summary>Field number for the "close_prices" field.</summary>
    public const int ClosePricesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.InstrumentClosePriceResponse> _repeated_closePrices_codec
        = pb::FieldCodec.ForMessage(10, global::Tinkoff.InvestApi.V1.InstrumentClosePriceResponse.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.InstrumentClosePriceResponse> closePrices_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.InstrumentClosePriceResponse>();
    /// <summary>
    ///Массив по инструментам.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.InstrumentClosePriceResponse> ClosePrices {
      get { return closePrices_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetClosePricesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetClosePricesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!closePrices_.Equals(other.closePrices_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= closePrices_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      closePrices_.WriteTo(output, _repeated_closePrices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      closePrices_.WriteTo(ref output, _repeated_closePrices_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += closePrices_.CalculateSize(_repeated_closePrices_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetClosePricesResponse other) {
      if (other == null) {
        return;
      }
      closePrices_.Add(other.closePrices_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            closePrices_.AddEntriesFrom(input, _repeated_closePrices_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            closePrices_.AddEntriesFrom(ref input, _repeated_closePrices_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  ///Цена закрытия торговой сессии по инструменту.
  /// </summary>
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class InstrumentClosePriceResponse : pb::IMessage<InstrumentClosePriceResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<InstrumentClosePriceResponse> _parser = new pb::MessageParser<InstrumentClosePriceResponse>(() => new InstrumentClosePriceResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<InstrumentClosePriceResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentClosePriceResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentClosePriceResponse(InstrumentClosePriceResponse other) : this() {
      figi_ = other.figi_;
      instrumentUid_ = other.instrumentUid_;
      price_ = other.price_ != null ? other.price_.Clone() : null;
      eveningSessionPrice_ = other.eveningSessionPrice_ != null ? other.eveningSessionPrice_.Clone() : null;
      time_ = other.time_ != null ? other.time_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public InstrumentClosePriceResponse Clone() {
      return new InstrumentClosePriceResponse(this);
    }

    /// <summary>Field number for the "figi" field.</summary>
    public const int FigiFieldNumber = 1;
    private string figi_ = "";
    /// <summary>
    ///Figi инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Figi {
      get { return figi_; }
      set {
        figi_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "instrument_uid" field.</summary>
    public const int InstrumentUidFieldNumber = 2;
    private string instrumentUid_ = "";
    /// <summary>
    ///Uid инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentUid {
      get { return instrumentUid_; }
      set {
        instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "price" field.</summary>
    public const int PriceFieldNumber = 11;
    private global::Tinkoff.InvestApi.V1.Quotation price_;
    /// <summary>
    ///Цена закрытия торговой сессии.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation Price {
      get { return price_; }
      set {
        price_ = value;
      }
    }

    /// <summary>Field number for the "evening_session_price" field.</summary>
    public const int EveningSessionPriceFieldNumber = 12;
    private global::Tinkoff.InvestApi.V1.Quotation eveningSessionPrice_;
    /// <summary>
    ///Цена последней сделки с вечерней сессии
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.Quotation EveningSessionPrice {
      get { return eveningSessionPrice_; }
      set {
        eveningSessionPrice_ = value;
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 21;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    /// <summary>
    ///Дата совершения торгов.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as InstrumentClosePriceResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(InstrumentClosePriceResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Figi != other.Figi) return false;
      if (InstrumentUid != other.InstrumentUid) return false;
      if (!object.Equals(Price, other.Price)) return false;
      if (!object.Equals(EveningSessionPrice, other.EveningSessionPrice)) return false;
      if (!object.Equals(Time, other.Time)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Figi.Length != 0) hash ^= Figi.GetHashCode();
      if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
      if (price_ != null) hash ^= Price.GetHashCode();
      if (eveningSessionPrice_ != null) hash ^= EveningSessionPrice.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstrumentUid);
      }
      if (price_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Price);
      }
      if (eveningSessionPrice_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(EveningSessionPrice);
      }
      if (time_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Figi.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Figi);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstrumentUid);
      }
      if (price_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Price);
      }
      if (eveningSessionPrice_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(EveningSessionPrice);
      }
      if (time_ != null) {
        output.WriteRawTag(170, 1);
        output.WriteMessage(Time);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Figi.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Figi);
      }
      if (InstrumentUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
      }
      if (price_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Price);
      }
      if (eveningSessionPrice_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(EveningSessionPrice);
      }
      if (time_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(InstrumentClosePriceResponse other) {
      if (other == null) {
        return;
      }
      if (other.Figi.Length != 0) {
        Figi = other.Figi;
      }
      if (other.InstrumentUid.Length != 0) {
        InstrumentUid = other.InstrumentUid;
      }
      if (other.price_ != null) {
        if (price_ == null) {
          Price = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        Price.MergeFrom(other.Price);
      }
      if (other.eveningSessionPrice_ != null) {
        if (eveningSessionPrice_ == null) {
          EveningSessionPrice = new global::Tinkoff.InvestApi.V1.Quotation();
        }
        EveningSessionPrice.MergeFrom(other.EveningSessionPrice);
      }
      if (other.time_ != null) {
        if (time_ == null) {
          Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 18: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 90: {
            if (price_ == null) {
              Price = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Price);
            break;
          }
          case 98: {
            if (eveningSessionPrice_ == null) {
              EveningSessionPrice = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(EveningSessionPrice);
            break;
          }
          case 170: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Figi = input.ReadString();
            break;
          }
          case 18: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 90: {
            if (price_ == null) {
              Price = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(Price);
            break;
          }
          case 98: {
            if (eveningSessionPrice_ == null) {
              EveningSessionPrice = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            input.ReadMessage(EveningSessionPrice);
            break;
          }
          case 170: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetTechAnalysisRequest : pb::IMessage<GetTechAnalysisRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTechAnalysisRequest> _parser = new pb::MessageParser<GetTechAnalysisRequest>(() => new GetTechAnalysisRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTechAnalysisRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTechAnalysisRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTechAnalysisRequest(GetTechAnalysisRequest other) : this() {
      indicatorType_ = other.indicatorType_;
      instrumentUid_ = other.instrumentUid_;
      from_ = other.from_ != null ? other.from_.Clone() : null;
      to_ = other.to_ != null ? other.to_.Clone() : null;
      interval_ = other.interval_;
      typeOfPrice_ = other.typeOfPrice_;
      length_ = other.length_;
      deviation_ = other.deviation_ != null ? other.deviation_.Clone() : null;
      smoothing_ = other.smoothing_ != null ? other.smoothing_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTechAnalysisRequest Clone() {
      return new GetTechAnalysisRequest(this);
    }

    /// <summary>Field number for the "indicator_type" field.</summary>
    public const int IndicatorTypeFieldNumber = 1;
    private global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorType indicatorType_ = global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorType.Unspecified;
    /// <summary>
    ///Тип технического индикатора.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorType IndicatorType {
      get { return indicatorType_; }
      set {
        indicatorType_ = value;
      }
    }

    /// <summary>Field number for the "instrument_uid" field.</summary>
    public const int InstrumentUidFieldNumber = 2;
    private string instrumentUid_ = "";
    /// <summary>
    ///Uid инструмента.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string InstrumentUid {
      get { return instrumentUid_; }
      set {
        instrumentUid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp from_;
    /// <summary>
    ///Начало запрашиваемого периода в часовом поясе UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "to" field.</summary>
    public const int ToFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp to_;
    /// <summary>
    ///Окончание запрашиваемого периода в часовом поясе UTC.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Google.Protobuf.WellKnownTypes.Timestamp To {
      get { return to_; }
      set {
        to_ = value;
      }
    }

    /// <summary>Field number for the "interval" field.</summary>
    public const int IntervalFieldNumber = 5;
    private global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorInterval interval_ = global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorInterval.Unspecified;
    /// <summary>
    ///Интервал, за который рассчитывается индикатор.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorInterval Interval {
      get { return interval_; }
      set {
        interval_ = value;
      }
    }

    /// <summary>Field number for the "type_of_price" field.</summary>
    public const int TypeOfPriceFieldNumber = 6;
    private global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.TypeOfPrice typeOfPrice_ = global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.TypeOfPrice.Unspecified;
    /// <summary>
    ///Тип цены, используемый при расчёте индикатора.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.TypeOfPrice TypeOfPrice {
      get { return typeOfPrice_; }
      set {
        typeOfPrice_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 7;
    private int length_;
    /// <summary>
    ///Торговый период, за который рассчитывается индикатор.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "deviation" field.</summary>
    public const int DeviationFieldNumber = 8;
    private global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.Deviation deviation_;
    /// <summary>
    ///Параметры отклонения.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.Deviation Deviation {
      get { return deviation_; }
      set {
        deviation_ = value;
      }
    }

    /// <summary>Field number for the "smoothing" field.</summary>
    public const int SmoothingFieldNumber = 9;
    private global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.Smoothing smoothing_;
    /// <summary>
    ///Параметры сглаживания.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.Smoothing Smoothing {
      get { return smoothing_; }
      set {
        smoothing_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTechAnalysisRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTechAnalysisRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IndicatorType != other.IndicatorType) return false;
      if (InstrumentUid != other.InstrumentUid) return false;
      if (!object.Equals(From, other.From)) return false;
      if (!object.Equals(To, other.To)) return false;
      if (Interval != other.Interval) return false;
      if (TypeOfPrice != other.TypeOfPrice) return false;
      if (Length != other.Length) return false;
      if (!object.Equals(Deviation, other.Deviation)) return false;
      if (!object.Equals(Smoothing, other.Smoothing)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (IndicatorType != global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorType.Unspecified) hash ^= IndicatorType.GetHashCode();
      if (InstrumentUid.Length != 0) hash ^= InstrumentUid.GetHashCode();
      if (from_ != null) hash ^= From.GetHashCode();
      if (to_ != null) hash ^= To.GetHashCode();
      if (Interval != global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorInterval.Unspecified) hash ^= Interval.GetHashCode();
      if (TypeOfPrice != global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.TypeOfPrice.Unspecified) hash ^= TypeOfPrice.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      if (deviation_ != null) hash ^= Deviation.GetHashCode();
      if (smoothing_ != null) hash ^= Smoothing.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (IndicatorType != global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) IndicatorType);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstrumentUid);
      }
      if (from_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(To);
      }
      if (Interval != global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorInterval.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Interval);
      }
      if (TypeOfPrice != global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.TypeOfPrice.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) TypeOfPrice);
      }
      if (Length != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Length);
      }
      if (deviation_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Deviation);
      }
      if (smoothing_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Smoothing);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (IndicatorType != global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorType.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) IndicatorType);
      }
      if (InstrumentUid.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(InstrumentUid);
      }
      if (from_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(From);
      }
      if (to_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(To);
      }
      if (Interval != global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorInterval.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Interval);
      }
      if (TypeOfPrice != global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.TypeOfPrice.Unspecified) {
        output.WriteRawTag(48);
        output.WriteEnum((int) TypeOfPrice);
      }
      if (Length != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Length);
      }
      if (deviation_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Deviation);
      }
      if (smoothing_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Smoothing);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (IndicatorType != global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IndicatorType);
      }
      if (InstrumentUid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstrumentUid);
      }
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (to_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(To);
      }
      if (Interval != global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorInterval.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Interval);
      }
      if (TypeOfPrice != global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.TypeOfPrice.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TypeOfPrice);
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
      }
      if (deviation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Deviation);
      }
      if (smoothing_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Smoothing);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTechAnalysisRequest other) {
      if (other == null) {
        return;
      }
      if (other.IndicatorType != global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorType.Unspecified) {
        IndicatorType = other.IndicatorType;
      }
      if (other.InstrumentUid.Length != 0) {
        InstrumentUid = other.InstrumentUid;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        From.MergeFrom(other.From);
      }
      if (other.to_ != null) {
        if (to_ == null) {
          To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        To.MergeFrom(other.To);
      }
      if (other.Interval != global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorInterval.Unspecified) {
        Interval = other.Interval;
      }
      if (other.TypeOfPrice != global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.TypeOfPrice.Unspecified) {
        TypeOfPrice = other.TypeOfPrice;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      if (other.deviation_ != null) {
        if (deviation_ == null) {
          Deviation = new global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.Deviation();
        }
        Deviation.MergeFrom(other.Deviation);
      }
      if (other.smoothing_ != null) {
        if (smoothing_ == null) {
          Smoothing = new global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.Smoothing();
        }
        Smoothing.MergeFrom(other.Smoothing);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IndicatorType = (global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorType) input.ReadEnum();
            break;
          }
          case 18: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 26: {
            if (from_ == null) {
              From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(From);
            break;
          }
          case 34: {
            if (to_ == null) {
              To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(To);
            break;
          }
          case 40: {
            Interval = (global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorInterval) input.ReadEnum();
            break;
          }
          case 48: {
            TypeOfPrice = (global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.TypeOfPrice) input.ReadEnum();
            break;
          }
          case 56: {
            Length = input.ReadInt32();
            break;
          }
          case 66: {
            if (deviation_ == null) {
              Deviation = new global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.Deviation();
            }
            input.ReadMessage(Deviation);
            break;
          }
          case 74: {
            if (smoothing_ == null) {
              Smoothing = new global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.Smoothing();
            }
            input.ReadMessage(Smoothing);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            IndicatorType = (global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorType) input.ReadEnum();
            break;
          }
          case 18: {
            InstrumentUid = input.ReadString();
            break;
          }
          case 26: {
            if (from_ == null) {
              From = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(From);
            break;
          }
          case 34: {
            if (to_ == null) {
              To = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(To);
            break;
          }
          case 40: {
            Interval = (global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.IndicatorInterval) input.ReadEnum();
            break;
          }
          case 48: {
            TypeOfPrice = (global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.TypeOfPrice) input.ReadEnum();
            break;
          }
          case 56: {
            Length = input.ReadInt32();
            break;
          }
          case 66: {
            if (deviation_ == null) {
              Deviation = new global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.Deviation();
            }
            input.ReadMessage(Deviation);
            break;
          }
          case 74: {
            if (smoothing_ == null) {
              Smoothing = new global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Types.Smoothing();
            }
            input.ReadMessage(Smoothing);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetTechAnalysisRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      /// <summary>
      ///Интервал свечи.
      /// </summary>
      public enum IndicatorInterval {
        /// <summary>
        ///Интервал не определён.
        /// </summary>
        [pbr::OriginalName("INDICATOR_INTERVAL_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        ///1 минута.
        /// </summary>
        [pbr::OriginalName("INDICATOR_INTERVAL_ONE_MINUTE")] OneMinute = 1,
        /// <summary>
        ///5 минут.
        /// </summary>
        [pbr::OriginalName("INDICATOR_INTERVAL_FIVE_MINUTES")] FiveMinutes = 2,
        /// <summary>
        ///15 минут.
        /// </summary>
        [pbr::OriginalName("INDICATOR_INTERVAL_FIFTEEN_MINUTES")] FifteenMinutes = 3,
        /// <summary>
        ///1 час.
        /// </summary>
        [pbr::OriginalName("INDICATOR_INTERVAL_ONE_HOUR")] OneHour = 4,
        /// <summary>
        ///1 день.
        /// </summary>
        [pbr::OriginalName("INDICATOR_INTERVAL_ONE_DAY")] OneDay = 5,
        /// <summary>
        ///2 минуты.
        /// </summary>
        [pbr::OriginalName("INDICATOR_INTERVAL_2_MIN")] _2Min = 6,
        /// <summary>
        ///3 минуты.
        /// </summary>
        [pbr::OriginalName("INDICATOR_INTERVAL_3_MIN")] _3Min = 7,
        /// <summary>
        ///10 минут.
        /// </summary>
        [pbr::OriginalName("INDICATOR_INTERVAL_10_MIN")] _10Min = 8,
        /// <summary>
        ///30 минут.
        /// </summary>
        [pbr::OriginalName("INDICATOR_INTERVAL_30_MIN")] _30Min = 9,
        /// <summary>
        ///2 часа.
        /// </summary>
        [pbr::OriginalName("INDICATOR_INTERVAL_2_HOUR")] _2Hour = 10,
        /// <summary>
        ///4 часа.
        /// </summary>
        [pbr::OriginalName("INDICATOR_INTERVAL_4_HOUR")] _4Hour = 11,
        /// <summary>
        ///Неделя
        /// </summary>
        [pbr::OriginalName("INDICATOR_INTERVAL_WEEK")] Week = 12,
        /// <summary>
        ///Месяц
        /// </summary>
        [pbr::OriginalName("INDICATOR_INTERVAL_MONTH")] Month = 13,
      }

      public enum TypeOfPrice {
        /// <summary>
        ///Не указано.
        /// </summary>
        [pbr::OriginalName("TYPE_OF_PRICE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        ///Цена закрытия.
        /// </summary>
        [pbr::OriginalName("TYPE_OF_PRICE_CLOSE")] Close = 1,
        /// <summary>
        ///Цена открытия.
        /// </summary>
        [pbr::OriginalName("TYPE_OF_PRICE_OPEN")] Open = 2,
        /// <summary>
        ///Максимальное значение за выбранный интервал.
        /// </summary>
        [pbr::OriginalName("TYPE_OF_PRICE_HIGH")] High = 3,
        /// <summary>
        ///Минимальное значение за выбранный интервал.
        /// </summary>
        [pbr::OriginalName("TYPE_OF_PRICE_LOW")] Low = 4,
        /// <summary>
        ///Среднее значение по показателям [ (close + open + high + low) / 4 ].
        /// </summary>
        [pbr::OriginalName("TYPE_OF_PRICE_AVG")] Avg = 5,
      }

      public enum IndicatorType {
        /// <summary>
        ///Не определен.
        /// </summary>
        [pbr::OriginalName("INDICATOR_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        ///Bollinger Bands (Линия Боллинжера).
        /// </summary>
        [pbr::OriginalName("INDICATOR_TYPE_BB")] Bb = 1,
        /// <summary>
        ///Exponential Moving Average (EMA, Экспоненциальная скользящая средняя).
        /// </summary>
        [pbr::OriginalName("INDICATOR_TYPE_EMA")] Ema = 2,
        /// <summary>
        ///Relative Strength Index (Индекс относительной силы).
        /// </summary>
        [pbr::OriginalName("INDICATOR_TYPE_RSI")] Rsi = 3,
        /// <summary>
        ///Moving Average Convergence/Divergence (Схождение/Расхождение скользящих средних).
        /// </summary>
        [pbr::OriginalName("INDICATOR_TYPE_MACD")] Macd = 4,
        /// <summary>
        ///Simple Moving Average (Простое скользящее среднее).
        /// </summary>
        [pbr::OriginalName("INDICATOR_TYPE_SMA")] Sma = 5,
      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Smoothing : pb::IMessage<Smoothing>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Smoothing> _parser = new pb::MessageParser<Smoothing>(() => new Smoothing());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Smoothing> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Smoothing() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Smoothing(Smoothing other) : this() {
          fastLength_ = other.fastLength_;
          slowLength_ = other.slowLength_;
          signalSmoothing_ = other.signalSmoothing_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Smoothing Clone() {
          return new Smoothing(this);
        }

        /// <summary>Field number for the "fast_length" field.</summary>
        public const int FastLengthFieldNumber = 1;
        private int fastLength_;
        /// <summary>
        ///Короткий период сглаживания для первой экспоненциальной скользящей средней (EMA).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int FastLength {
          get { return fastLength_; }
          set {
            fastLength_ = value;
          }
        }

        /// <summary>Field number for the "slow_length" field.</summary>
        public const int SlowLengthFieldNumber = 2;
        private int slowLength_;
        /// <summary>
        ///Длинный период сглаживания для второй экспоненциальной скользящей средней (EMA).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int SlowLength {
          get { return slowLength_; }
          set {
            slowLength_ = value;
          }
        }

        /// <summary>Field number for the "signal_smoothing" field.</summary>
        public const int SignalSmoothingFieldNumber = 3;
        private int signalSmoothing_;
        /// <summary>
        ///Период сглаживания для третьей экспоненциальной скользящей средней (EMA)
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int SignalSmoothing {
          get { return signalSmoothing_; }
          set {
            signalSmoothing_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Smoothing);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Smoothing other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FastLength != other.FastLength) return false;
          if (SlowLength != other.SlowLength) return false;
          if (SignalSmoothing != other.SignalSmoothing) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (FastLength != 0) hash ^= FastLength.GetHashCode();
          if (SlowLength != 0) hash ^= SlowLength.GetHashCode();
          if (SignalSmoothing != 0) hash ^= SignalSmoothing.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (FastLength != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(FastLength);
          }
          if (SlowLength != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(SlowLength);
          }
          if (SignalSmoothing != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(SignalSmoothing);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (FastLength != 0) {
            output.WriteRawTag(8);
            output.WriteInt32(FastLength);
          }
          if (SlowLength != 0) {
            output.WriteRawTag(16);
            output.WriteInt32(SlowLength);
          }
          if (SignalSmoothing != 0) {
            output.WriteRawTag(24);
            output.WriteInt32(SignalSmoothing);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (FastLength != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(FastLength);
          }
          if (SlowLength != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SlowLength);
          }
          if (SignalSmoothing != 0) {
            size += 1 + pb::CodedOutputStream.ComputeInt32Size(SignalSmoothing);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Smoothing other) {
          if (other == null) {
            return;
          }
          if (other.FastLength != 0) {
            FastLength = other.FastLength;
          }
          if (other.SlowLength != 0) {
            SlowLength = other.SlowLength;
          }
          if (other.SignalSmoothing != 0) {
            SignalSmoothing = other.SignalSmoothing;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                FastLength = input.ReadInt32();
                break;
              }
              case 16: {
                SlowLength = input.ReadInt32();
                break;
              }
              case 24: {
                SignalSmoothing = input.ReadInt32();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 8: {
                FastLength = input.ReadInt32();
                break;
              }
              case 16: {
                SlowLength = input.ReadInt32();
                break;
              }
              case 24: {
                SignalSmoothing = input.ReadInt32();
                break;
              }
            }
          }
        }
        #endif

      }

      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class Deviation : pb::IMessage<Deviation>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<Deviation> _parser = new pb::MessageParser<Deviation>(() => new Deviation());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<Deviation> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tinkoff.InvestApi.V1.GetTechAnalysisRequest.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Deviation() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Deviation(Deviation other) : this() {
          deviationMultiplier_ = other.deviationMultiplier_ != null ? other.deviationMultiplier_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public Deviation Clone() {
          return new Deviation(this);
        }

        /// <summary>Field number for the "deviation_multiplier" field.</summary>
        public const int DeviationMultiplierFieldNumber = 1;
        private global::Tinkoff.InvestApi.V1.Quotation deviationMultiplier_;
        /// <summary>
        ///Кол-во стандартных отклонений, на которые отступает верхняя и нижняя граница
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.InvestApi.V1.Quotation DeviationMultiplier {
          get { return deviationMultiplier_; }
          set {
            deviationMultiplier_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as Deviation);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(Deviation other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(DeviationMultiplier, other.DeviationMultiplier)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (deviationMultiplier_ != null) hash ^= DeviationMultiplier.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (deviationMultiplier_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(DeviationMultiplier);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (deviationMultiplier_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(DeviationMultiplier);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (deviationMultiplier_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DeviationMultiplier);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(Deviation other) {
          if (other == null) {
            return;
          }
          if (other.deviationMultiplier_ != null) {
            if (deviationMultiplier_ == null) {
              DeviationMultiplier = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            DeviationMultiplier.MergeFrom(other.DeviationMultiplier);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (deviationMultiplier_ == null) {
                  DeviationMultiplier = new global::Tinkoff.InvestApi.V1.Quotation();
                }
                input.ReadMessage(DeviationMultiplier);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (deviationMultiplier_ == null) {
                  DeviationMultiplier = new global::Tinkoff.InvestApi.V1.Quotation();
                }
                input.ReadMessage(DeviationMultiplier);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class GetTechAnalysisResponse : pb::IMessage<GetTechAnalysisResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetTechAnalysisResponse> _parser = new pb::MessageParser<GetTechAnalysisResponse>(() => new GetTechAnalysisResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GetTechAnalysisResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Tinkoff.InvestApi.V1.MarketdataReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTechAnalysisResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTechAnalysisResponse(GetTechAnalysisResponse other) : this() {
      technicalIndicators_ = other.technicalIndicators_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GetTechAnalysisResponse Clone() {
      return new GetTechAnalysisResponse(this);
    }

    /// <summary>Field number for the "technical_indicators" field.</summary>
    public const int TechnicalIndicatorsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Tinkoff.InvestApi.V1.GetTechAnalysisResponse.Types.TechAnalysisItem> _repeated_technicalIndicators_codec
        = pb::FieldCodec.ForMessage(10, global::Tinkoff.InvestApi.V1.GetTechAnalysisResponse.Types.TechAnalysisItem.Parser);
    private readonly pbc::RepeatedField<global::Tinkoff.InvestApi.V1.GetTechAnalysisResponse.Types.TechAnalysisItem> technicalIndicators_ = new pbc::RepeatedField<global::Tinkoff.InvestApi.V1.GetTechAnalysisResponse.Types.TechAnalysisItem>();
    /// <summary>
    ///Массив значений результатов тех. анализа
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::Tinkoff.InvestApi.V1.GetTechAnalysisResponse.Types.TechAnalysisItem> TechnicalIndicators {
      get { return technicalIndicators_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GetTechAnalysisResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GetTechAnalysisResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!technicalIndicators_.Equals(other.technicalIndicators_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= technicalIndicators_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      technicalIndicators_.WriteTo(output, _repeated_technicalIndicators_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      technicalIndicators_.WriteTo(ref output, _repeated_technicalIndicators_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += technicalIndicators_.CalculateSize(_repeated_technicalIndicators_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GetTechAnalysisResponse other) {
      if (other == null) {
        return;
      }
      technicalIndicators_.Add(other.technicalIndicators_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            technicalIndicators_.AddEntriesFrom(input, _repeated_technicalIndicators_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            technicalIndicators_.AddEntriesFrom(ref input, _repeated_technicalIndicators_codec);
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the GetTechAnalysisResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
      public sealed partial class TechAnalysisItem : pb::IMessage<TechAnalysisItem>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<TechAnalysisItem> _parser = new pb::MessageParser<TechAnalysisItem>(() => new TechAnalysisItem());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<TechAnalysisItem> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Tinkoff.InvestApi.V1.GetTechAnalysisResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TechAnalysisItem() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TechAnalysisItem(TechAnalysisItem other) : this() {
          timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
          middleBand_ = other.middleBand_ != null ? other.middleBand_.Clone() : null;
          upperBand_ = other.upperBand_ != null ? other.upperBand_.Clone() : null;
          lowerBand_ = other.lowerBand_ != null ? other.lowerBand_.Clone() : null;
          signal_ = other.signal_ != null ? other.signal_.Clone() : null;
          macd_ = other.macd_ != null ? other.macd_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public TechAnalysisItem Clone() {
          return new TechAnalysisItem(this);
        }

        /// <summary>Field number for the "timestamp" field.</summary>
        public const int TimestampFieldNumber = 1;
        private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
        /// <summary>
        ///Временная метка по UTC, для которой были рассчитаны значения индикатора.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
          get { return timestamp_; }
          set {
            timestamp_ = value;
          }
        }

        /// <summary>Field number for the "middle_band" field.</summary>
        public const int MiddleBandFieldNumber = 2;
        private global::Tinkoff.InvestApi.V1.Quotation middleBand_;
        /// <summary>
        ///Значение простого скользящего среднего (средней линии).
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.InvestApi.V1.Quotation MiddleBand {
          get { return middleBand_; }
          set {
            middleBand_ = value;
          }
        }

        /// <summary>Field number for the "upper_band" field.</summary>
        public const int UpperBandFieldNumber = 3;
        private global::Tinkoff.InvestApi.V1.Quotation upperBand_;
        /// <summary>
        ///Значение верхней линии Боллинджера.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.InvestApi.V1.Quotation UpperBand {
          get { return upperBand_; }
          set {
            upperBand_ = value;
          }
        }

        /// <summary>Field number for the "lower_band" field.</summary>
        public const int LowerBandFieldNumber = 4;
        private global::Tinkoff.InvestApi.V1.Quotation lowerBand_;
        /// <summary>
        ///Значение нижней линии Боллинджера.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.InvestApi.V1.Quotation LowerBand {
          get { return lowerBand_; }
          set {
            lowerBand_ = value;
          }
        }

        /// <summary>Field number for the "signal" field.</summary>
        public const int SignalFieldNumber = 5;
        private global::Tinkoff.InvestApi.V1.Quotation signal_;
        /// <summary>
        ///Значение сигнальной линии.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.InvestApi.V1.Quotation Signal {
          get { return signal_; }
          set {
            signal_ = value;
          }
        }

        /// <summary>Field number for the "macd" field.</summary>
        public const int MacdFieldNumber = 6;
        private global::Tinkoff.InvestApi.V1.Quotation macd_;
        /// <summary>
        ///Значение линии MACD.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Tinkoff.InvestApi.V1.Quotation Macd {
          get { return macd_; }
          set {
            macd_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as TechAnalysisItem);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(TechAnalysisItem other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Timestamp, other.Timestamp)) return false;
          if (!object.Equals(MiddleBand, other.MiddleBand)) return false;
          if (!object.Equals(UpperBand, other.UpperBand)) return false;
          if (!object.Equals(LowerBand, other.LowerBand)) return false;
          if (!object.Equals(Signal, other.Signal)) return false;
          if (!object.Equals(Macd, other.Macd)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
          if (middleBand_ != null) hash ^= MiddleBand.GetHashCode();
          if (upperBand_ != null) hash ^= UpperBand.GetHashCode();
          if (lowerBand_ != null) hash ^= LowerBand.GetHashCode();
          if (signal_ != null) hash ^= Signal.GetHashCode();
          if (macd_ != null) hash ^= Macd.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (timestamp_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Timestamp);
          }
          if (middleBand_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(MiddleBand);
          }
          if (upperBand_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(UpperBand);
          }
          if (lowerBand_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(LowerBand);
          }
          if (signal_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(Signal);
          }
          if (macd_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(Macd);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (timestamp_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Timestamp);
          }
          if (middleBand_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(MiddleBand);
          }
          if (upperBand_ != null) {
            output.WriteRawTag(26);
            output.WriteMessage(UpperBand);
          }
          if (lowerBand_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(LowerBand);
          }
          if (signal_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(Signal);
          }
          if (macd_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(Macd);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (timestamp_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
          }
          if (middleBand_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(MiddleBand);
          }
          if (upperBand_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpperBand);
          }
          if (lowerBand_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(LowerBand);
          }
          if (signal_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Signal);
          }
          if (macd_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Macd);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(TechAnalysisItem other) {
          if (other == null) {
            return;
          }
          if (other.timestamp_ != null) {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            Timestamp.MergeFrom(other.Timestamp);
          }
          if (other.middleBand_ != null) {
            if (middleBand_ == null) {
              MiddleBand = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            MiddleBand.MergeFrom(other.MiddleBand);
          }
          if (other.upperBand_ != null) {
            if (upperBand_ == null) {
              UpperBand = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            UpperBand.MergeFrom(other.UpperBand);
          }
          if (other.lowerBand_ != null) {
            if (lowerBand_ == null) {
              LowerBand = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            LowerBand.MergeFrom(other.LowerBand);
          }
          if (other.signal_ != null) {
            if (signal_ == null) {
              Signal = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            Signal.MergeFrom(other.Signal);
          }
          if (other.macd_ != null) {
            if (macd_ == null) {
              Macd = new global::Tinkoff.InvestApi.V1.Quotation();
            }
            Macd.MergeFrom(other.Macd);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (timestamp_ == null) {
                  Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(Timestamp);
                break;
              }
              case 18: {
                if (middleBand_ == null) {
                  MiddleBand = new global::Tinkoff.InvestApi.V1.Quotation();
                }
                input.ReadMessage(MiddleBand);
                break;
              }
              case 26: {
                if (upperBand_ == null) {
                  UpperBand = new global::Tinkoff.InvestApi.V1.Quotation();
                }
                input.ReadMessage(UpperBand);
                break;
              }
              case 34: {
                if (lowerBand_ == null) {
                  LowerBand = new global::Tinkoff.InvestApi.V1.Quotation();
                }
                input.ReadMessage(LowerBand);
                break;
              }
              case 42: {
                if (signal_ == null) {
                  Signal = new global::Tinkoff.InvestApi.V1.Quotation();
                }
                input.ReadMessage(Signal);
                break;
              }
              case 50: {
                if (macd_ == null) {
                  Macd = new global::Tinkoff.InvestApi.V1.Quotation();
                }
                input.ReadMessage(Macd);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (timestamp_ == null) {
                  Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(Timestamp);
                break;
              }
              case 18: {
                if (middleBand_ == null) {
                  MiddleBand = new global::Tinkoff.InvestApi.V1.Quotation();
                }
                input.ReadMessage(MiddleBand);
                break;
              }
              case 26: {
                if (upperBand_ == null) {
                  UpperBand = new global::Tinkoff.InvestApi.V1.Quotation();
                }
                input.ReadMessage(UpperBand);
                break;
              }
              case 34: {
                if (lowerBand_ == null) {
                  LowerBand = new global::Tinkoff.InvestApi.V1.Quotation();
                }
                input.ReadMessage(LowerBand);
                break;
              }
              case 42: {
                if (signal_ == null) {
                  Signal = new global::Tinkoff.InvestApi.V1.Quotation();
                }
                input.ReadMessage(Signal);
                break;
              }
              case 50: {
                if (macd_ == null) {
                  Macd = new global::Tinkoff.InvestApi.V1.Quotation();
                }
                input.ReadMessage(Macd);
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
